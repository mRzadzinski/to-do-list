(()=>{"use strict";var n={192:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(537),r=t.n(i),a=t(645),o=t.n(a)()(r());o.push([n.id,"body{display:flex;justify-content:end;align-items:center;margin:0;padding:0;width:100vw;height:100vh;font-family:Roboto, RobotoDraft, Helvetica, Arial, sans-serif;font-size:medium}.container{display:flex;flex-direction:column;width:300px;height:100vh;box-shadow:-1px 0px 5px #c2c2c2}.list-name-container{display:grid;grid-template:1fr 1fr / 1fr 40px;height:63px;padding:0 6px 0 16px}.list-name-container #task-header{grid-area:1 / 1 / 2 / 2;align-self:end;color:#80868b;font-size:.6rem;font-weight:500;letter-spacing:1.5px;padding-bottom:7px}.list-name-container #list-name{display:flex;align-items:flex-start;grid-area:2 / 1 / 3 / 2;color:#5f6368;overflow:hidden;white-space:nowrap;font-size:1.05rem;margin-top:-3px}.list-name-container #list-name #arrow-down-icon{fill:#5f6368;transform:scale(0.5);margin:-9px 0 0 -11px}.list-name-container #close-container{display:flex;justify-content:center;align-items:center;grid-area:1 / 2 / 3 / 3}.list-name-container #close-container #close-icon{transform:scale(1.1);fill:#5f6368}.add-task{display:flex;align-items:center;height:32px;font-size:.9rem;color:#1a73e8;border-top:solid #f1f3f4 1px;margin-bottom:10px}.add-task>*{margin-top:7px}.add-task #add-task-text{flex-grow:1;margin-left:3px}.add-task #add-task-icon{fill:#1a73e8}.add-task #more-icon{fill:#5f6368}#add-task-icon,.more-icon,.circle-icon,.star-icon{transform:scale(0.4)}.more-icon,.star-icon{fill:#5f6368}.circle-icon{align-self:start}.tasks-container{border-bottom:solid #e0e0e0 1px;flex-grow:1}.tasks-container :hover{background-color:#f8f9fa}.task{display:flex;flex-direction:column;padding:5px 0 5px 0}.task .task-main{display:flex;align-items:flex-start}.task .task-main .circle-container{position:relative;width:46px;height:20px}.task .task-main .circle-icon{position:absolute;top:-15px}.task .task-main .task-icon-container{position:relative;height:20px;width:20px}.task .task-main .more-icon{position:absolute;top:-14px;right:-10px}.task .task-main .star-icon{position:absolute;top:-15px;left:8px}.task .task-main .task-content{width:172px;margin:0 0 0 6px;color:#202124;word-wrap:break-word;font-size:.84rem;letter-spacing:.02rem;line-height:1.3rem}.task .task-main .more-icon{margin-right:-12px}.task .task-main .star-icon{margin-right:2px}.task .task-details{margin:0 0 0 52px;color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem}.task .task-date{display:flex;align-items:center;justify-content:center;height:24px;width:110px;font-size:.77rem;color:#1a73e8;border:solid 1px #e0e0e0;border-radius:15px;margin:7px 0 0 52px}.finished-container{height:41px}\n","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAIA,KACI,YAAa,CACb,mBAAoB,CACpB,kBAAmB,CACnB,QAAS,CACT,SAAU,CACV,WAAY,CACZ,YAAa,CACb,6DAA8D,CAC9D,gBAAiB,CACpB,WAGG,YAAa,CACb,qBAAsB,CACtB,WAAY,CACZ,YAAa,CACb,+BAA2C,CAC9C,qBAGG,YAAa,CACb,gCAAiC,CACjC,WAAY,CACZ,oBAAqB,CAJzB,kCAOQ,uBAAwB,CACxB,cAAe,CACf,aAAc,CACd,eAAgB,CAChB,eAAgB,CAChB,oBAAqB,CACrB,kBAAmB,CAb3B,gCAiBQ,YAAa,CACb,sBAAuB,CACvB,uBAAwB,CACxB,aA3CW,CA4CX,eAAgB,CAChB,kBAAmB,CACnB,iBAAkB,CAClB,eAAgB,CAxBxB,iDA2BY,YAlDO,CAmDP,oBAAoB,CACpB,qBAAsB,CA7BlC,sCAkCQ,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,uBAAwB,CArChC,kDAwCY,oBAAqB,CACrB,YACJ,CAAC,UAKL,YAAa,CACb,kBAAmB,CACnB,WAAY,CACZ,eAAgB,CAChB,aAzEU,CA0EV,4BAA6B,CAC7B,kBAAmB,CAPvB,YAUQ,cAAe,CAVvB,yBAcQ,WAAY,CACZ,eAAgB,CAfxB,yBAmBQ,YAvFM,CAoEd,qBAuBQ,YA5FW,CA6Fd,kDAOD,oBAAoB,CACvB,sBAIG,YAzGe,CA0GlB,aAGG,gBAAiB,CACpB,iBAGG,+BAAgC,CAChC,WAAY,CAFhB,wBAKQ,wBAAyB,CAC5B,MAID,YAAa,CACb,qBAAsB,CACtB,mBAAoB,CAHxB,iBAMQ,YAAa,CACb,sBAAuB,CAP/B,mCAUY,iBAAkB,CAClB,UAAW,CACX,WAAY,CAZxB,8BAgBY,iBAAkB,CAClB,SAAU,CAjBtB,sCAqBY,iBAAkB,CAClB,WAAY,CACZ,UAAW,CAvBvB,4BA2BY,iBAAkB,CAClB,SAAU,CACV,WAAY,CA7BxB,4BAiCY,iBAAkB,CAClB,SAAU,CACV,QAAS,CAnCrB,+BAwCY,WAAY,CACZ,gBAAiB,CACjB,aAAc,CACd,oBAAqB,CACrB,gBAAiB,CACjB,qBAAsB,CACtB,kBAAmB,CA9C/B,4BAmDY,kBAAmB,CAnD/B,4BAwDY,gBAAiB,CAxD7B,oBA6DQ,iBAAkB,CAClB,aAvLW,CAwLX,gBAAiB,CACjB,eAAgB,CAChB,qBAAsB,CAjE9B,iBAqEQ,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,WAAY,CACZ,WAAY,CACZ,gBAAiB,CACjB,aAnMM,CAoMN,wBAtMY,CAuMZ,kBAAmB,CACnB,mBAAoB,CACvB,oBAID,WAAY",sourcesContent:["$light-gray: #e0e0e0;\n$dark-gray: #5f6368;\n$blue: #1a73e8;\n\nbody {\n    display: flex;\n    justify-content: end;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n    font-size: medium;\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    height: 100vh;\n    box-shadow: -1px 0px 5px rgb(194, 194, 194);\n}\n\n.list-name-container {\n    display: grid;\n    grid-template: 1fr 1fr / 1fr 40px;\n    height: 63px;\n    padding: 0 6px 0 16px;\n\n    #task-header {\n        grid-area: 1 / 1 / 2 / 2;\n        align-self: end;\n        color: #80868b;\n        font-size: .6rem;\n        font-weight: 500;\n        letter-spacing: 1.5px;\n        padding-bottom: 7px;\n    }\n\n    #list-name {\n        display: flex;\n        align-items: flex-start;\n        grid-area: 2 / 1 / 3 / 2;\n        color: $dark-gray;\n        overflow: hidden;\n        white-space: nowrap;\n        font-size: 1.05rem;\n        margin-top: -3px;\n\n        #arrow-down-icon {\n            fill: $dark-gray;\n            transform: scale(.5);\n            margin: -9px 0 0 -11px;\n        }\n    }\n\n    #close-container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        grid-area: 1 / 2 / 3 / 3;\n        \n        #close-icon {\n            transform: scale(1.1);\n            fill: #5f6368\n        }\n    }\n}\n\n.add-task {\n    display: flex;\n    align-items: center;\n    height: 32px;\n    font-size: .9rem;\n    color: $blue;\n    border-top: solid #f1f3f4 1px;\n    margin-bottom: 10px;\n\n    > * {\n        margin-top: 7px;\n    }\n\n    #add-task-text {\n        flex-grow: 1;\n        margin-left: 3px;\n    }\n\n    #add-task-icon {\n        fill: $blue;\n    }\n\n    #more-icon {\n        fill: $dark-gray;\n    }\n}\n\n#add-task-icon, \n.more-icon, \n.circle-icon, \n.star-icon {\n    transform: scale(.4);\n}\n\n.more-icon,  \n.star-icon {\n    fill: $dark-gray;\n}\n\n.circle-icon {\n    align-self: start;\n}\n\n.tasks-container {\n    border-bottom: solid #e0e0e0 1px;\n    flex-grow: 1;\n\n    :hover {\n        background-color: #f8f9fa;\n    }\n}\n\n.task {\n    display: flex;\n    flex-direction: column;\n    padding: 5px 0 5px 0;\n\n    .task-main {\n        display: flex;\n        align-items: flex-start;\n\n        .circle-container {\n            position: relative;\n            width: 46px;\n            height: 20px;\n        }\n\n        .circle-icon {\n            position: absolute;\n            top: -15px;\n        }\n\n        .task-icon-container {\n            position: relative;\n            height: 20px;\n            width: 20px;\n        }\n\n        .more-icon {\n            position: absolute;\n            top: -14px;\n            right: -10px;\n        } \n\n        .star-icon {\n            position: absolute;\n            top: -15px;\n            left: 8px;\n\n        } \n\n        .task-content {\n            width: 172px;\n            margin: 0 0 0 6px;\n            color: #202124;\n            word-wrap: break-word;\n            font-size: .84rem;\n            letter-spacing: .02rem;\n            line-height: 1.3rem;\n        }\n\n        .more-icon {\n\n            margin-right: -12px;\n        }\n\n        .star-icon {\n\n            margin-right: 2px;\n        }\n    }\n\n    .task-details {\n        margin: 0 0 0 52px;\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n    }\n\n    .task-date {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 24px;\n        width: 110px;\n        font-size: .77rem;\n        color: $blue;\n        border: solid 1px $light-gray;\n        border-radius: 15px;\n        margin: 7px 0 0 52px;\n    }\n}\n\n.finished-container {\n    height: 41px;\n}"],sourceRoot:""}]);const A=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(o[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);i&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},o=[],A=0;A<n.length;A++){var s=n[A],c=i.base?s[0]+i.base:s[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var C=t(p),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==C)e[C].references++,e[C].updater(d);else{var B=r(d,i);i.byIndex=A,e.splice(A,0,{identifier:p,updater:B,references:1})}o.push(p)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=i(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var A=t(a[o]);e[A].references--}for(var s=i(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),i=t(795),r=t.n(i),a=t(569),o=t.n(a),A=t(565),s=t.n(A),c=t(216),l=t.n(c),p=t(589),C=t.n(p),d=t(192),B={};B.styleTagTransform=C(),B.setAttributes=s(),B.insert=o().bind(null,"head"),B.domAPI=r(),B.insertStyleElement=l(),e()(d.Z,B),d.Z&&d.Z.locals&&d.Z.locals;const f=t.p+"5c00f1557b5580ac8d23.png";document.querySelectorAll(".circle-icon").forEach((n=>{n.src=f}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,