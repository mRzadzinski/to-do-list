(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,"body{display:flex;justify-content:center;align-items:center;margin:0;padding:0;width:100vw;height:100vh;font-family:Roboto, RobotoDraft, Helvetica, Arial, sans-serif;font-size:medium}.container{display:grid;grid-template-rows:63px 40px 1fr 41px;position:relative;width:300px;height:100vh;box-shadow:0px 0px 25px -3px #c2c2c2}.list-name-container{display:grid;grid-template-rows:1fr 1fr;height:63px;padding:0 6px 0 16px}.list-name-container #task-header{grid-area:1 / 1 / 2 / 2;align-self:end;color:#80868b;font-size:.6rem;font-weight:500;letter-spacing:1.5px;padding-bottom:7px}.list-name-container #list-name{display:flex;align-items:flex-start;grid-area:2 / 1 / 3 / 2;color:#5f6368;overflow:hidden;white-space:nowrap;font-size:1.05rem;margin-top:-3px}.list-name-container #list-name :hover{cursor:pointer}.add-task{display:flex;align-items:center;height:32px;font-size:.9rem;color:#1a73e8;border-top:solid #f1f3f4 1px;margin-bottom:10px}.add-task :hover{cursor:pointer}.add-task>*{margin-top:7px}.add-task #add-task-text{flex-grow:1;margin-left:3px}.add-task #add-task-icon{fill:#1a73e8}.add-task #more-icon{fill:#5f6368}.tasks-container{display:grid;grid-template-rows:min-content;grid-auto-rows:min-content;border-bottom:solid #e0e0e0 1px;flex-grow:1;overflow:auto}.tasks-container :hover{background-color:#f6f7f8}.tasks-container :hover .more-icon{visibility:visible}.task{display:flex;flex-direction:column;padding:11px 0 5px 0;overflow:hidden}.task .check-icon{display:none}.task .task-value,.task .details-value{display:block}.task .task-main{display:flex;align-items:flex-start}.task .task-main .circle-container{position:relative;width:46px;height:20px}.task .task-main .circle-container:hover .circle-icon{display:none}.task .task-main .circle-container:hover .check-icon{display:block}.task .task-main .circle-icon{position:absolute;top:-15px}.task .task-main .more-icon{position:absolute;top:-14px;right:-44px}.task .task-main .task-content{width:172px;margin:0 0 0 6px;color:#202124;word-wrap:break-word;font-size:.84rem;letter-spacing:.02rem;line-height:1.1rem}.task .more-icon{visibility:visible;margin-right:-12px}.task .task-details{margin:2px 0 0 52px;color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem;overflow-wrap:anywhere;width:140px}.task .task-date{display:block;display:flex;align-items:center;justify-content:center;position:relative;min-height:24px;width:140px;font-size:.77rem;color:#1a73e8;border:solid 1px #e0e0e0;border-radius:15px;margin:7px 0 10px 52px;cursor:pointer}.task .drag-icon{display:none}.task-template{display:none}.time-picker{position:absolute;right:10px;bottom:-7px;display:block;visibility:hidden;width:20px}textarea{display:none}.task-clicked{background-color:#f6f7f8;position:relative}.task-clicked .more-icon{display:block}.task-clicked .task-value,.task-clicked .details-value{display:none}.task-clicked textarea{display:block;outline:none;border:0;font-family:inherit;resize:none;background-color:#f6f7f8}.task-clicked .task-details textarea{color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem}.task-clicked .task-details{margin-top:6px}.task-clicked .task-date{margin-top:9px;border:none;color:#202124;font-size:0.73rem;border:solid 1px #e0e0e0}.task-clicked .task-date:hover{background-color:#f0f2f3}.completed-button{display:flex;align-items:center;height:41px;width:300px;cursor:pointer}.completed-button .arrow-right-container{position:relative;height:41px}.completed-button #arrow-right{position:absolute;top:-4px;fill:#707070;transform:scale(0.45)}.completed-button #completed{color:#707070;margin:0 0 1px 48px;font-size:.9rem;letter-spacing:.03rem}.completed-task-template{display:none}.completed-list{display:none;max-height:0;overflow:auto;transition:max-height 0.2s ease-out;margin-bottom:4px;text-decoration:line-through}.completed-list .check-icon{display:block}.completed-list .task-details{margin-top:0px}.completed-list :hover{background-color:#f6f7f8}.completed-list .trash-icon{right:-55px}.dropdown{display:none;max-height:0;position:absolute;z-index:1;padding:9px 0 9px 0;width:243px;border-radius:4px;font-size:.87rem;font-weight:400;box-shadow:rgba(0,0,0,0.35) 0px 5px 10px;color:#202124;background-color:white;transition:max-height 0.2s ease-out;overflow-x:clip;overflow-y:auto;cursor:pointer}.dropdown :hover{background-color:#f6f7f8}.dropdown.dropdown-task-list{top:62px}.dropdown.dropdown-menu{top:105px;right:15px;z-index:1}.dropdown.dropdown-task-menu{width:192px;left:65px}.dropdown.dropdown-task-menu .trash-icon{left:0px;top:-7px}#dropdown-header{font-size:.8rem;font-weight:400;color:#80868b;margin:9px 0 5px 20px;cursor:default}#dropdown-header:hover{background-color:white}.dropdown-element{padding:9px 20px 9px 20px}.dropdown-element.with-icon{padding:9px 20px 9px 42px}.dropdown-element.with-icon .check-icon{top:-7px;left:1px}.dropdown-element.with-icon.list-text-template{display:none}.modal{position:absolute;display:flex;justify-content:center;align-items:center;z-index:1;left:0;top:0;width:300px;height:100vh;background-color:rgba(0,0,0,0.4)}.modal .modal-content{display:flex;flex-direction:column;justify-content:center;gap:15px;width:200px;height:100px;padding:20px;border-radius:10px;background-color:white}.modal .modal-title{font-size:.9rem}.modal .modal-buttons{display:flex;gap:20px;justify-content:end;padding:5px 10px 0 0}.modal input{height:1.7rem;outline:none;font-size:.9rem;font-family:inherit;background-color:#f6f7f8;border:#eee 1px solid;border-bottom:2px solid #1a73e8;padding-left:10px}.hidden{display:none}.button{font-size:.9rem;cursor:pointer}#add-list-done-btn,#rename-done-btn{color:#1a73e8}.with-icon{display:flex;position:relative}.break-line{width:243px;height:0;border-top:1px solid #c5c5c5;margin:9px 0 9px 0}.task-icon-container{position:relative;height:20px;width:20px}#add-task-icon,.more-icon,.circle-icon,.trash-icon,.plus-icon{transform:scale(0.4)}.check-icon{transform:scale(0.5)}.more-icon,.trash-icon,.check-icon{fill:#5f6368}.check-icon,.trash-icon{position:absolute;top:-15px}.check-icon.hidden{display:none}.plus-icon{position:absolute;top:-7px;left:0px}#arrow-down-icon{fill:#5f6368;transform:scale(0.5);margin:-9px 0 0 -11px}svg,img{cursor:pointer}.task-date.hidden{display:none}.dragover-top-border{border-top:#5f6368 solid 2px}.dragover-bottom-border{border-bottom:#5f6368 solid 2px}\n","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAsBA,KACI,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,QAAS,CACT,SAAU,CACV,WAAY,CACZ,YAAa,CACb,6DAA8D,CAC9D,gBAAiB,CACpB,WAGG,YAAa,CACb,qCAAuC,CAEvC,iBAAkB,CAClB,WAAY,CACZ,YAAa,CACb,oCAAgD,CACnD,qBAGG,YAAa,CACb,0BAA2B,CAC3B,WAAY,CACZ,oBAAqB,CAJzB,kCAOQ,uBAAwB,CACxB,cAAe,CACf,aAAc,CACd,eAAgB,CAChB,eAAgB,CAChB,oBAAqB,CACrB,kBAAmB,CAb3B,gCAiBQ,YAAa,CACb,sBAAuB,CACvB,uBAAwB,CACxB,aA9DW,CA+DX,eAAgB,CAChB,kBAAmB,CACnB,iBAAkB,CAClB,eAAgB,CAxBxB,uCA2BY,cAAe,CAClB,UAKL,YAAa,CACb,kBAAmB,CACnB,WAAY,CACZ,eAAgB,CAChB,aA5EU,CA6EV,4BAA6B,CAC7B,kBAAmB,CAPvB,iBAUQ,cAAe,CAVvB,YAcQ,cAAe,CAdvB,yBAkBQ,WAAY,CACZ,eAAgB,CAnBxB,yBAuBQ,YA9FM,CAuEd,qBA2BQ,YArGW,CAsGd,iBAID,YAAa,CACb,8BAA+B,CAC/B,0BAA2B,CAC3B,+BAAgC,CAChC,WAAY,CACZ,aAAc,CANlB,wBASQ,wBAhHa,CAuGrB,mCAYY,kBAAmB,CACtB,MAKL,YAAa,CACb,qBAAsB,CACtB,oBAAqB,CACrB,eAAgB,CAJpB,kBAOQ,YAAa,CAPrB,uCAYQ,aAAc,CAZtB,iBAgBQ,YAAa,CACb,sBAAuB,CAjB/B,mCAoBY,iBAAkB,CAClB,UAAW,CACX,WAAY,CAtBxB,sDA4BgB,YAAa,CA5B7B,qDAgCgB,aAAc,CAhC9B,8BAqCY,iBAAkB,CAClB,SAAU,CAtCtB,4BA0CY,iBAAkB,CAClB,SAAU,CACV,WAAY,CA5CxB,+BAgDY,WAAY,CACZ,gBAAiB,CACjB,aA9Ka,CA+Kb,oBAAqB,CACrB,gBAAiB,CACjB,qBAAsB,CACtB,kBAAmB,CAtD/B,iBA2DQ,kBAAmB,CACnB,kBAAmB,CA5D3B,oBAgEQ,mBAAoB,CACpB,aA3LW,CA4LX,gBAAiB,CACjB,eAAgB,CAChB,qBAAsB,CACtB,sBAAuB,CACvB,WAAY,CAtEpB,iBA0EQ,aAAc,CACd,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,iBAAkB,CAClB,eAAgB,CAChB,WAAY,CACZ,gBAAiB,CACjB,aAzMM,CA0MN,wBA9MY,CA+MZ,kBAAmB,CACnB,sBAAuB,CACvB,cAAe,CAtFvB,iBA0FQ,YAAa,CAChB,eAID,YAAa,CAChB,aAGG,iBAAkB,CAClB,UAAW,CACX,WAAY,CACZ,aAAc,CACd,iBAAkB,CAClB,UAAW,CACd,SAGG,YAAa,CAChB,cAGG,wBAxOiB,CAyOjB,iBAAkB,CAFtB,yBAKQ,aAAc,CALtB,uDAUQ,YAAa,CAVrB,uBAcQ,aAAc,CACd,YAAa,CACb,QAAS,CACT,mBAAoB,CACpB,WAAY,CACZ,wBA1Pa,CAuOrB,qCAuBQ,aAhQW,CAiQX,gBAAiB,CACjB,eAAgB,CAChB,qBAAsB,CA1B9B,4BA8BQ,cAAe,CA9BvB,yBAkCQ,cAAe,CACf,WAAY,CACZ,aA/QiB,CAgRjB,iBAAkB,CAClB,wBAhRY,CA0OpB,+BAyCY,wBAAyB,CAC5B,kBAKL,YAAa,CACb,kBAAmB,CACnB,WAAY,CACZ,WAAY,CACZ,cAAe,CALnB,yCAQQ,iBAAkB,CAClB,WAAY,CATpB,+BAaQ,iBAAkB,CAClB,QAAS,CACT,YArSe,CAsSf,qBAAqB,CAhB7B,6BAoBQ,aA1Se,CA2Sf,mBAAoB,CACpB,eAAgB,CAChB,qBAAsB,CACzB,yBAID,YAAa,CAChB,gBAGG,YAAa,CACb,YAAa,CACb,aAAc,CACd,mCAAoC,CACpC,iBAAkB,CAClB,4BAA6B,CANjC,4BASQ,aAAc,CATtB,8BAaQ,cAAe,CAbvB,uBAiBQ,wBArUa,CAoTrB,4BAqBQ,WAAY,CACf,UAID,YAAa,CACb,YAAa,CACb,iBAAkB,CAClB,SAAU,CACV,mBAAoB,CACpB,WAAY,CACZ,iBAAkB,CAClB,gBAAiB,CACjB,eAAgB,CAChB,wCAA4C,CAC5C,aA5VqB,CA6VrB,sBAAuB,CACvB,mCAAoC,CACpC,eAAgB,CAChB,eAAgB,CAChB,cAAe,CAhBnB,iBAmBQ,wBAhWa,CAiWhB,6BAID,QAAS,CACZ,wBAGG,SAAU,CACV,UAAW,CACX,SAAU,CACb,6BAGG,WAAY,CACZ,SAAU,CAFd,yCAKQ,QAAS,CACT,QAAS,CACZ,iBAID,eAAgB,CAChB,eAAgB,CAChB,aAAc,CACd,qBAAsB,CACtB,cAAe,CALnB,uBAQQ,sBAAuB,CAC1B,kBAID,yBAA0B,CAC7B,4BAGG,yBAA0B,CAD9B,wCAIQ,QAAS,CACT,QAAS,CALjB,+CASQ,YAAa,CAChB,OAID,iBAAkB,CAClB,YAAa,CACb,sBAAuB,CACvB,kBAAmB,CACnB,SAAU,CACV,MAAO,CACP,KAAM,CACN,WAAY,CACZ,YAAa,CACb,gCAAiC,CAVrC,sBAaQ,YAAa,CACb,qBAAsB,CACtB,sBAAuB,CACvB,QAAS,CACT,WAAY,CACZ,YAAa,CACb,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CArB/B,oBAyBQ,eAAgB,CAzBxB,sBA6BQ,YAAa,CACb,QAAS,CACT,mBAAoB,CACpB,oBAAqB,CAhC7B,aAoCQ,aAAc,CACd,YAAa,CACb,eAAgB,CAChB,mBAAoB,CACpB,wBA7ba,CA8bb,qBAAoC,CACpC,+BA9bM,CA+bN,iBAAkB,CACrB,QAID,YAAa,CAChB,QAGG,eAAgB,CAChB,cAAe,CAClB,oCAIG,aA9cU,CA+cb,WAGG,YAAa,CACb,iBAAkB,CACrB,YAGG,WAAY,CACZ,QAAS,CACT,4BAAwC,CACxC,kBAAmB,CACtB,qBAGG,iBAAkB,CAClB,WAAY,CACZ,UAAW,CACd,8DAOG,oBAAoB,CACvB,YAGG,oBAAoB,CACvB,mCAKG,YArfe,CAsflB,wBAIG,iBAAkB,CAClB,SAAU,CACb,mBAGG,YAAa,CAChB,WAGG,iBAAkB,CAClB,QAAS,CACT,QAAS,CACZ,iBAGG,YAzgBe,CA0gBf,oBAAoB,CACpB,qBAAsB,CACzB,QAGG,cAAe,CAClB,kBAGG,YAAa,CAChB,qBAGG,4BAAgC,CACnC,wBAGG,+BAAmC",sourcesContent:["$dark-font-color: #202124;\n$light-gray: #e0e0e0;\n$dark-gray: #5f6368;\n$finished-gray: #707070;\n$hover-color: #f6f7f8;\n$blue: #1a73e8;\n\n@mixin date-nofocus-style {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    min-height: 24px;\n    width: 150px;\n    font-size: .77rem;\n    color: $blue;\n    border: solid 1px $light-gray;\n    border-radius: 15px;\n    margin: 7px 0 0 52px;\n    cursor: pointer;\n}\n\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n    font-size: medium;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 63px 40px 1fr 41px ;\n\n    position: relative;\n    width: 300px;\n    height: 100vh;\n    box-shadow: 0px 0px 25px -3px rgb(194, 194, 194);\n}\n\n.list-name-container {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    height: 63px;\n    padding: 0 6px 0 16px;\n\n    #task-header {\n        grid-area: 1 / 1 / 2 / 2;\n        align-self: end;\n        color: #80868b;\n        font-size: .6rem;\n        font-weight: 500;\n        letter-spacing: 1.5px;\n        padding-bottom: 7px;\n    }\n\n    #list-name {\n        display: flex;\n        align-items: flex-start;\n        grid-area: 2 / 1 / 3 / 2;\n        color: $dark-gray;\n        overflow: hidden;\n        white-space: nowrap;\n        font-size: 1.05rem;\n        margin-top: -3px;\n\n        :hover {\n            cursor: pointer;\n        }\n    }\n}\n\n.add-task {\n    display: flex;\n    align-items: center;\n    height: 32px;\n    font-size: .9rem;\n    color: $blue;\n    border-top: solid #f1f3f4 1px;\n    margin-bottom: 10px;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    > * {\n        margin-top: 7px;\n    }\n\n    #add-task-text {\n        flex-grow: 1;\n        margin-left: 3px;\n    }\n\n    #add-task-icon {\n        fill: $blue;\n    }\n\n    #more-icon {\n        fill: $dark-gray;\n    }\n}\n\n.tasks-container {\n    display: grid;\n    grid-template-rows: min-content;\n    grid-auto-rows: min-content;\n    border-bottom: solid #e0e0e0 1px;\n    flex-grow: 1;\n    overflow: auto;\n\n    :hover {\n        background-color: $hover-color;\n\n        .more-icon {\n            visibility: visible;\n        }\n    }\n}\n\n.task {\n    display: flex;\n    flex-direction: column;\n    padding: 11px 0 5px 0;\n    overflow: hidden;\n\n    .check-icon {\n        display: none;\n    }\n\n    .task-value,\n    .details-value {\n        display: block;\n    }\n\n    .task-main {\n        display: flex;\n        align-items: flex-start;\n\n        .circle-container {\n            position: relative;\n            width: 46px;\n            height: 20px;\n        }\n\n        .circle-container:hover {\n\n            .circle-icon {\n                display: none;\n            }\n\n            .check-icon {\n                display: block;\n            }\n        }\n\n        .circle-icon {\n            position: absolute;\n            top: -15px;\n        }\n\n        .more-icon {\n            position: absolute;\n            top: -14px;\n            right: -44px;\n        } \n\n        .task-content {\n            width: 172px;\n            margin: 0 0 0 6px;\n            color: $dark-font-color;\n            word-wrap: break-word;\n            font-size: .84rem;\n            letter-spacing: .02rem;\n            line-height: 1.1rem;\n        }\n    }\n\n    .more-icon {\n        visibility: visible;\n        margin-right: -12px;\n    }\n\n    .task-details {\n        margin: 2px 0 0 52px;\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n        overflow-wrap: anywhere;\n        width: 140px;      \n    }\n\n    .task-date {\n        display: block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        min-height: 24px;\n        width: 140px;\n        font-size: .77rem;\n        color: $blue;\n        border: solid 1px $light-gray;\n        border-radius: 15px;\n        margin: 7px 0 10px 52px;\n        cursor: pointer;\n    }\n\n    .drag-icon {\n        display: none;\n    }\n}\n\n.task-template {\n    display: none;\n}\n\n.time-picker {\n    position: absolute;\n    right: 10px;\n    bottom: -7px;\n    display: block;\n    visibility: hidden;\n    width: 20px;\n}\n\ntextarea {\n    display: none;\n}\n\n.task-clicked {\n    background-color: $hover-color;\n    position: relative;\n\n    .more-icon {\n        display: block;\n    }\n\n    .task-value,\n    .details-value {\n        display: none;\n    }\n\n    textarea {\n        display: block;\n        outline: none;\n        border: 0;\n        font-family: inherit;\n        resize: none;\n        background-color: $hover-color;\n    }\n\n    .task-details textarea {\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n    }\n\n    .task-details {\n        margin-top: 6px;\n    }\n\n    .task-date {\n        margin-top: 9px;\n        border: none;\n        color: $dark-font-color;\n        font-size: 0.73rem;\n        border: solid 1px $light-gray;\n\n        &:hover {\n            background-color: #f0f2f3;\n        }\n    }\n}\n\n.completed-button {\n    display: flex;\n    align-items: center;\n    height: 41px;\n    width: 300px;\n    cursor: pointer;\n\n    .arrow-right-container {\n        position: relative;\n        height: 41px;\n    }\n\n    #arrow-right {\n        position: absolute;\n        top: -4px;\n        fill: $finished-gray;\n        transform: scale(.45);\n    }\n\n    #completed {\n        color: $finished-gray;\n        margin: 0 0 1px 48px;\n        font-size: .9rem;\n        letter-spacing: .03rem;\n    }\n}\n\n.completed-task-template {\n    display: none;\n}\n\n.completed-list {\n    display: none;\n    max-height: 0;\n    overflow: auto;\n    transition: max-height 0.2s ease-out;\n    margin-bottom: 4px;\n    text-decoration: line-through;\n\n    .check-icon {\n        display: block;\n    }\n    \n    .task-details {\n        margin-top: 0px;\n    }\n\n    :hover {\n        background-color: $hover-color;\n    }\n\n    .trash-icon {\n        right: -55px;\n    }\n}\n\n.dropdown {\n    display: none;\n    max-height: 0;\n    position: absolute;\n    z-index: 1;\n    padding: 9px 0 9px 0;\n    width: 243px;\n    border-radius: 4px;\n    font-size: .87rem;\n    font-weight: 400;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 10px;\n    color: $dark-font-color;\n    background-color: white;\n    transition: max-height 0.2s ease-out;\n    overflow-x: clip;\n    overflow-y: auto;\n    cursor: pointer;\n\n    :hover {\n        background-color: $hover-color;\n    }\n}\n\n.dropdown.dropdown-task-list {\n    top: 62px;\n}\n\n.dropdown.dropdown-menu {\n    top: 105px;\n    right: 15px;\n    z-index: 1;\n}\n\n.dropdown.dropdown-task-menu {\n    width: 192px;\n    left: 65px;\n\n    .trash-icon {\n        left: 0px;\n        top: -7px;\n    }\n}\n\n#dropdown-header {\n    font-size: .8rem;\n    font-weight: 400;\n    color: #80868b;\n    margin: 9px 0 5px 20px;\n    cursor: default;\n\n    &:hover {\n        background-color: white;\n    }\n}\n\n.dropdown-element {\n    padding: 9px 20px 9px 20px;\n}\n\n.dropdown-element.with-icon {\n    padding: 9px 20px 9px 42px;\n\n    .check-icon {\n        top: -7px;\n        left: 1px;\n    }\n\n    &.list-text-template {\n        display: none;\n    }\n}\n\n.modal {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 300px;\n    height: 100vh;\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n\n    .modal-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        gap: 15px;\n        width: 200px;\n        height: 100px;\n        padding: 20px;\n        border-radius: 10px;\n        background-color: white;\n    }\n\n    .modal-title {\n        font-size: .9rem;\n    }\n\n    .modal-buttons {\n        display: flex;\n        gap: 20px;\n        justify-content: end;\n        padding: 5px 10px 0 0;\n    }\n\n    input {\n        height: 1.7rem;\n        outline: none;\n        font-size: .9rem;\n        font-family: inherit;\n        background-color: $hover-color;\n        border: rgb(238, 238, 238) 1px solid;\n        border-bottom: 2px solid $blue;\n        padding-left: 10px;\n    }\n}\n\n.hidden {\n    display: none;\n}\n\n.button {\n    font-size: .9rem;\n    cursor: pointer;\n}\n\n#add-list-done-btn,\n#rename-done-btn {\n    color: $blue;\n}\n\n.with-icon {\n    display: flex;\n    position: relative;\n}\n\n.break-line {\n    width: 243px;\n    height: 0;\n    border-top: 1px solid rgb(197, 197, 197);\n    margin: 9px 0 9px 0;\n}\n\n.task-icon-container {\n    position: relative;\n    height: 20px;\n    width: 20px;\n}\n\n#add-task-icon, \n.more-icon, \n.circle-icon, \n.trash-icon,\n.plus-icon {\n    transform: scale(.4);\n}\n\n.check-icon {\n    transform: scale(.5);\n}\n\n.more-icon,\n.trash-icon,\n.check-icon {\n    fill: $dark-gray;\n}\n\n.check-icon,\n.trash-icon {\n    position: absolute;\n    top: -15px;\n}\n\n.check-icon.hidden {\n    display: none;\n}\n\n.plus-icon {\n    position: absolute;\n    top: -7px;\n    left: 0px;\n}\n\n#arrow-down-icon {\n    fill: $dark-gray;\n    transform: scale(.5);\n    margin: -9px 0 0 -11px;\n}\n\nsvg, img {\n    cursor: pointer;\n}\n\n.task-date.hidden {\n    display: none;\n}\n\n.dragover-top-border {\n    border-top: $dark-gray solid 2px;\n}\n\n.dragover-bottom-border {\n    border-bottom: $dark-gray solid 2px;\n}"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&a[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s],c=o.base?l[0]+o.base:l[0],d=r[c]||0,A="".concat(c," ").concat(d);r[c]=d+1;var p=n(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=i(u,o);o.byIndex=s,t.splice(s,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=n(r[a]);t[s].references--}for(var l=o(e,i),c=0;c<r.length;c++){var d=n(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},636:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{const e=n.p+"5c00f1557b5580ac8d23.png";Math.pow(10,8);var t=36e5;function o(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function i(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}var r={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},a=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,s=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,l=/^([+-])(\d{2})(?::?(\d{2}))?$/;function c(e){var t,n={},o=e.split(r.dateTimeDelimiter);if(o.length>2)return n;if(/:/.test(o[0])?t=o[0]:(n.date=o[0],t=o[1],r.timeZoneDelimiter.test(n.date)&&(n.date=e.split(r.timeZoneDelimiter)[0],t=e.substr(n.date.length,e.length))),t){var i=r.timezone.exec(t);i?(n.time=t.replace(i[1],""),n.timezone=i[1]):n.time=t}return n}function d(e,t){var n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),o=e.match(n);if(!o)return{year:NaN,restDateString:""};var i=o[1]?parseInt(o[1]):null,r=o[2]?parseInt(o[2]):null;return{year:null===r?i:100*r,restDateString:e.slice((o[1]||o[2]).length)}}function A(e,t){if(null===t)return new Date(NaN);var n=e.match(a);if(!n)return new Date(NaN);var o=!!n[4],i=p(n[1]),r=p(n[2])-1,s=p(n[3]),l=p(n[4]),c=p(n[5])-1;if(o)return function(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}(0,l,c)?function(e,t,n){var o=new Date(0);o.setUTCFullYear(e,0,4);var i=7*(t-1)+n+1-(o.getUTCDay()||7);return o.setUTCDate(o.getUTCDate()+i),o}(t,l,c):new Date(NaN);var d=new Date(0);return function(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(h[t]||(f(e)?29:28))}(t,r,s)&&function(e,t){return t>=1&&t<=(f(e)?366:365)}(t,i)?(d.setUTCFullYear(t,r,Math.max(i,s)),d):new Date(NaN)}function p(e){return e?parseInt(e):1}function u(e){var n=e.match(s);if(!n)return NaN;var o=m(n[1]),i=m(n[2]),r=m(n[3]);return function(e,t,n){return 24===e?0===t&&0===n:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}(o,i,r)?o*t+6e4*i+1e3*r:NaN}function m(e){return e&&parseFloat(e.replace(",","."))||0}function C(e){if("Z"===e)return 0;var n=e.match(l);if(!n)return 0;var o="+"===n[1]?-1:1,i=parseInt(n[2]),r=n[3]&&parseInt(n[3])||0;return function(e,t){return t>=0&&t<=59}(0,r)?o*(i*t+6e4*r):NaN}var h=[31,null,31,30,31,30,31,31,30,31,30,31];function f(e){return e%400==0||e%4==0&&e%100!=0}let B,g;function k(){B&&B&&(localStorage.clear(),localStorage.setItem("taskLists",JSON.stringify(y)),localStorage.setItem("currentListName",JSON.stringify(v.name)))}B=!!function(e){let t;try{t=window.localStorage;const e="__storage_test__";return t.setItem(e,e),t.removeItem(e),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&t&&0!==t.length}}();const x=e=>({name:e,sortMethod:"custom",tasks:{}}),b=(e,t,n,o,i,r)=>({id:e,name:t,details:n,dateTime:o,position:i,completed:r});let v,y=[];function w(e){v=e}if(function(){if(localStorage.getItem("taskLists")){g=!1,y=JSON.parse(localStorage.getItem("taskLists"));let e=JSON.parse(localStorage.getItem("currentListName"));y.forEach((t=>{t.name===e&&(v=t)}))}else g=!0}(),g){let e=x("Weekend"),t=b(0,"Dance","Samba","2022-12-03T10:00",3,!1),n=b(1,"Sleep","Deep","",2,!1),o=b(2,"Eat","Sushi","2022-12-03T11:11",1,!1),i=b(3,"Cook","Sushi","",4,!1),r=b(4,"Laze","As much as you can","2022-12-04T12:00",5,!1),a=x("Week"),s=b(0,"Work","On a highway","2022-11-23T17:33",1,!1),l=b(1,"Lay down ","The blacktop","2022-09-26T10:11",2,!1),c=b(2,"Cry","Your eyes out","2022-12-26T11:51",3,!1);y.push(e),e.tasks.dance=t,e.tasks.sleep=n,e.tasks.eat=o,e.tasks.cook=i,e.tasks.laze=r,y.push(a),a.tasks.work=s,a.tasks.layDown=l,a.tasks.cry=c}v||(v=y[0]);const S=document.querySelectorAll(".modal"),L=document.querySelector("#rename-list-input");function E(e){let t=!0;for(let n in y)for(let o in n.tasks)v.tasks[o].name===e&&(t=!1);return t}function T(){let e="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let n=0;n<5;n++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}function Y(e){let t;for(let n in v.tasks)v.tasks[n].id===+e&&(t=n);for(let e in v.tasks)v.tasks[e].position>v.tasks[t].position&&v.tasks[e].position--;delete v.tasks[t],N(),k()}function N(){y.forEach((e=>{let t=0;for(let n in e.tasks)e.tasks[n].id=t,t++}))}document.querySelector("#rename-done-btn").addEventListener("click",(()=>{L.value&&(v.name=L.value,L.value="",K(),te(),k(),S.forEach((e=>e.classList.add("hidden"))))})),document.querySelector("#delete-list-button").onclick=()=>{let e=y.indexOf(v);y.splice(e,1),v=y[0],K(),te(),k()},[document.querySelector("#add-task-icon"),document.querySelector("#add-task-text")].forEach((e=>e.addEventListener("click",(()=>{let e=T(),t=E(e);for(;!1===t;)e=T(),t=E(e);!function(){for(let e in v.tasks)e&&"object"==typeof v.tasks[e]&&!v.tasks[e].completed&&v.tasks[e].position++;k()}(),v.tasks[e]=b("","","","",1,!1),N(),te(),setTimeout(ne,10),k()})))),document.querySelector("#delete-completed-tasks").onclick=function(){for(let e in v.tasks)!0===v.tasks[e].completed&&delete v.tasks[e];te(),k()};const q=document.querySelector("#sort-name-btn"),D=document.querySelector("#sort-date-btn");function M(){!function(){const e=document.querySelectorAll(".sort-btn");let t=v.sortMethod;"custom"===t?t="sort-custom-btn":"date"===t?t="sort-date-btn":"name"===t&&(t="sort-name-btn"),e.forEach((e=>{e.id===t?e.firstChild.classList.remove("hidden"):e.firstChild.classList.add("hidden")}))}(),oe(Q())}function Q(){let e=Object.entries(v.tasks),t=v.sortMethod;return"name"===t?(e.sort(((e,t)=>{let n=e[1].name.toLowerCase(),o=t[1].name.toLowerCase();return n<o?-1:n>o?1:0})),z(e)):"date"===t?(e.sort(((e,t)=>{let n;return n=e[1].dateTime?new Date(e[1].dateTime):new Date("January 1, 1500 00:00:00"),n-new Date(t[1].dateTime)})),z(e)):"custom"===t?(e.sort(((e,t)=>e[1].position-t[1].position)),z(e)):void 0}function z(e){let t=[];return e.forEach((e=>{e[1].completed||t.push(e)})),t}function G(e,t,n){let o,i,r,a=Q();for(let e in v.tasks)v.tasks[e].id===+t?(o=v.tasks[e],i=v.tasks[e].position):v.tasks[e].id===+n&&(r=v.tasks[e].position);if("before"===e)a.forEach((e=>{i>r?e[1].position>=r&&e[1].position<i&&(e[1].position++,o.position=r):i<r&&e[1].position>i&&e[1].position<r&&(e[1].position--,o.position=r-1)})),a=Q();else if("end"===e)for(let e in v.tasks)if(v.tasks[e].position===i){a.forEach((e=>{e[1].position>i&&e[1].position--})),v.tasks[e].position=Q().length;break}k()}let $,W,j;document.querySelector("#sort-custom-btn").onclick=()=>{v.sortMethod="custom",M()},D.onclick=()=>{v.sortMethod="date",M()},q.onclick=()=>{v.sortMethod="name",M()},document.querySelectorAll(".circle-icon").forEach((t=>{t.src=e}));const U=(()=>{let e,t;function n(){const n=document.querySelectorAll(".time-picker");document.querySelectorAll(".task-date").forEach((o=>{o.addEventListener("click",(()=>{n.forEach((n=>{o.contains(n)&&(n.showPicker(),e=n,t=e.previousElementSibling)}))})),o.addEventListener("change",(()=>r(e.value,t))),o.addEventListener("change",a)}))}function r(e,t){let n,r=function(e,t){var n;o(1,arguments);var r=i(null!==(n=null==t?void 0:t.additionalDigits)&&void 0!==n?n:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var a,s=c(e);if(s.date){var l=d(s.date,r);a=A(l.restDateString,l.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var p,m=a.getTime(),h=0;if(s.time&&(h=u(s.time),isNaN(h)))return new Date(NaN);if(!s.timezone){var f=new Date(m+h),B=new Date(0);return B.setFullYear(f.getUTCFullYear(),f.getUTCMonth(),f.getUTCDate()),B.setHours(f.getUTCHours(),f.getUTCMinutes(),f.getUTCSeconds(),f.getUTCMilliseconds()),B}return p=C(s.timezone),isNaN(p)?new Date(NaN):new Date(m+h+p)}(e).toString().split(" "),a=new Date(e).toLocaleTimeString("en",{timeStyle:"short",hour12:!0}),s=`${r[0]}, ${r[1]} ${r[2]}, ${a}`,l=t.parentNode.parentNode.dataset.id;for(const e in v.tasks)v.tasks[e].id==l&&(n=v.tasks[e]);n.dateTime=e,k(),s.includes("Invalid")?t.innerHTML="Date / time":t.innerHTML=s,oe(Q())}function a(){document.querySelectorAll(".date-value").forEach((e=>{"Date / time"!==e.innerHTML||e.parentNode.parentNode.classList.contains("task-clicked")?e.parentNode.classList.remove("hidden"):e.parentNode.classList.add("hidden")}))}return n(),a(),{addDateListeners:n,toggleDate:a,convertDate:r}})(),H=(()=>{function e(){this.style.height=0,this.style.height=this.scrollHeight+"px"}return{addTextAreasListeners:function(){const t=document.getElementsByTagName("textarea");for(let n=0;n<t.length;n++){let o;o=0==+t[n].scrollHeight?"auto":t[n].scrollHeight,t[n].setAttribute("style","height:"+o+"px;overflow-y:hidden;"),t[n].addEventListener("input",e),t[n].addEventListener("change",(()=>{let e,o,i;t[n].parentNode.classList.contains("task-content")?(e=t[n].parentNode.parentNode.parentNode.dataset.id,o="task-content"):t[n].parentNode.classList.contains("task-details")&&(e=t[n].parentNode.parentNode.dataset.id,o="task-details");for(const t in v.tasks)v.tasks[t].id===+e&&(i=v.tasks[t]);"task-content"===o?i.name=t[n].value:"task-details"===o&&(i.details=t[n].value),k(),t[n].innerHTML=t[n].value,t[n].previousElementSibling.innerHTML=t[n].value,oe(Q())}))}}}})(),Z=(()=>{const e=document.querySelector("#list-name"),t=document.querySelectorAll(".dropdown"),n=document.querySelector(".dropdown-task-menu"),o=document.querySelector(".completed-button"),i=document.querySelector(".completed-list"),r=document.querySelector("#arrow-right"),a=document.querySelector("#main-menu-btn");let s;function l(){document.querySelectorAll(".task-menu-button").forEach((e=>e.addEventListener("click",(t=>{s=e,$=e.parentNode.parentNode.parentNode,W=$.dataset.id;let o=s.getBoundingClientRect().y;document.body.scrollHeight-o<n.scrollHeight?n.style.top=document.body.scrollHeight-n.scrollHeight+"px":n.style.top=s.getBoundingClientRect().y+"px",d(n,t)}))))}function c(e){for(let n=0;n<t.length;n++)if(t[n].classList.contains(e))return t[n]}function d(e,t){t&&e.classList.contains("active")||(e.classList.contains("active")?(e.classList.remove("active"),e.style.maxHeight="0",e.style.display="none",e.classList.contains("completed-list")&&(r.style.transform="scale(.45)")):(e.style.display="block",e.style.maxHeight=e.scrollHeight+"px",e.classList.add("active"),e.classList.contains("completed-list")&&(r.style.transform="scale(.45) rotate(90deg)")))}return e.onclick=()=>d(c("dropdown-task-list")),a.onclick=()=>d(c("dropdown-menu")),o.onclick=()=>d(i),l(),document.onclick=n=>{t.forEach((t=>{t.classList.contains("active")&&(!e.contains(n.target)&&t.classList.contains("dropdown-task-list")||!a.contains(n.target)&&t.classList.contains("dropdown-menu")||s&&!s.contains(n.target)&&t.classList.contains("dropdown-task-menu"))&&d(t)}))},{addTaskMenuListeners:l,addResizeTaskListener:function(){const e=document.querySelectorAll(".task");document.addEventListener("click",(t=>{e.forEach((e=>{!e.contains(t.target)||e.classList.contains("completed")||t.target.classList.contains("more-icon")?e.classList.remove("task-clicked"):e.classList.add("task-clicked"),U.toggleDate()}))}))},taskMenu:n,expandElement:d}})(),I=(()=>{let e;function t(){"custom"===v.sortMethod&&(this.style.opacity=".5",e=this)}function n(t){if("custom"!==v.sortMethod)return;t.preventDefault();let n=a();return t.target.classList.contains("task")&&this!==e&&(this.classList.add("dragover-top-border"),n.classList.remove("dragover-bottom-border")),!1}function o(){if("custom"!==v.sortMethod)return;let t=a();this.classList.remove("dragover-top-border"),e!==t&&t.classList.add("dragover-bottom-border")}function i(t){if("custom"!==v.sortMethod)return;let n=a(),o=+e.dataset.id,i=+this.dataset.id;return t.stopPropagation(),e===this||n.classList.contains("dragover-bottom-border")||G("before",o,i),!1}function r(){if("custom"!==v.sortMethod)return;let t=a();e.style.opacity="1",e!==t&&t.classList.contains("dragover-bottom-border")&&G("end",+e.dataset.id),te()}function a(){const e=document.querySelectorAll(".task");let t,n=function(){let e=Object.entries(v.tasks);return e.sort(((e,t)=>{let n=e[1].position;return t[1].position-n})),e[0][1].id}();return e.forEach((e=>{+e.dataset.id===n&&(t=e)})),t}return{addDragDropListeners:function(){document.querySelectorAll(".task").forEach((e=>{e.addEventListener("dragstart",t),e.addEventListener("dragover",n),e.addEventListener("dragleave",o),e.addEventListener("dragend",r),e.addEventListener("drop",i)}))}}})();const O=document.querySelector(".list-text-template"),R=document.querySelector("#prepend-with-list"),F=document.querySelector("#append-list"),V=document.querySelector("#list-name-text");let P;function K(){for(y[0]||(y.push(x("List")),v=y[0]);R.previousSibling;)R.previousSibling.remove();for(;F.nextSibling;)F.nextSibling.remove();y.forEach((e=>{let t=O.cloneNode(!0),n=O.cloneNode(!0);t.classList.remove("list-text-template"),t.classList.add("switch-list"),n.classList.remove("list-text-template"),n.classList.add("move-task-btn"),R.before(t),Z.taskMenu.append(n),t.lastChild.innerHTML=e.name,n.lastChild.innerHTML=e.name,e===v&&t.firstChild.classList.remove("hidden"),e===v&&n.firstChild.classList.remove("hidden")})),P=document.querySelectorAll(".switch-list"),j=document.querySelectorAll(".move-task-btn"),P.forEach((e=>{e.addEventListener("click",(function(){!function(e){let t=e.lastChild.innerHTML;v.tasks.name!==t&&y.forEach((e=>{e.name===t&&(w(e),k(),K(),te())}))}(e)}))})),function(e){V.innerHTML=e.name}(v),j.forEach((e=>e.addEventListener("click",(()=>{let t=e.lastChild.innerHTML;!function(e,t){let n;for(let e=0;e<y.length;e++)y[e].name===t&&(n=e);if(v!==y[n]){for(let t in v.tasks)if(v.tasks[t].id===+e){let e=v.tasks[t].position,o=0;Object.entries(y[n].tasks).forEach((e=>{e[1].completed||o++}));for(let t in v.tasks)v.tasks[t].position>e&&v.tasks[t].position--;y[n].tasks[t]=v.tasks[t],y[n].tasks[t].position=o+1,delete v.tasks[t]}N(),te(),k()}}(W,t)}))))}K();const _=document.querySelector(".tasks-container"),J=document.querySelector(".task-template"),X=document.querySelector(".completed-list"),ee=document.querySelector(".completed-task-template");function te(){_.innerHTML="",X.innerHTML="";for(const e in v.tasks){if(!e)return;if(e&&"object"==typeof v.tasks[e]&&!1===v.tasks[e].completed){let t=J.cloneNode(!0);if(t.classList.remove("task-template"),_.append(t),t.style.order=v.tasks[e].position,t.dataset.id=v.tasks[e].id,t.children[0].children[1].children[0].innerHTML=v.tasks[e].name,t.children[0].children[1].children[0].nextElementSibling.value=v.tasks[e].name,t.children[1].children[0].innerHTML=v.tasks[e].details,t.children[1].children[0].nextElementSibling.value=v.tasks[e].details,v.tasks[e].dateTime){let n=t.children[2].children[1],o=v.tasks[e].dateTime,i=n.previousElementSibling;n.setAttribute("value",o),U.convertDate(o,i),U.toggleDate()}}else if(e&&"object"==typeof v.tasks[e]&&!0===v.tasks[e].completed){let t=ee.cloneNode(!0);t.classList.remove("completed-task-template"),X.append(t),t.dataset.id=v.tasks[e].id,t.children[0].children[1].children[0].innerHTML=v.tasks[e].name,t.children[1].children[0].innerHTML=v.tasks[e].details}}U.addDateListeners(),H.addTextAreasListeners(),Z.addTaskMenuListeners(),Z.addResizeTaskListener(),I.addDragDropListeners(),document.querySelectorAll(".toggle-completed-btn").forEach((e=>e.addEventListener("click",(()=>{!function(e){for(let t in v.tasks)if(v.tasks[t].id==e)if(!1===v.tasks[t].completed){for(let e in v.tasks)v.tasks[e].position>v.tasks[t].position&&v.tasks[e].position--;v.tasks[t].completed=!0,v.tasks[t].position=""}else!0===v.tasks[t].completed&&(v.tasks[t].position=Q().length+1,v.tasks[t].completed=!1);k()}(e.parentNode.parentNode.parentNode.dataset.id),te(),Z.expandElement(X),Z.expandElement(X)})))),document.querySelectorAll(".delete-task").forEach((e=>e.addEventListener("click",(t=>{if(e.parentNode.parentNode.parentNode.classList.contains("task")){let t=e.parentNode.parentNode.parentNode,n=t.dataset.id;t.remove(),Y(n),te()}})))),M()}function ne(){document.querySelectorAll(".task").forEach((e=>{const t=e.children[0].children[1].children[0].innerHTML,n=e.children[1].children[0].innerHTML,o=e.children[2],i=e.style.order,r=e.children[0].children[1].children[1];1==+i&&""===t&&""===n&&o.classList.contains("hidden")&&(e.classList.add("task-clicked"),r.focus())}))}function oe(e){const t=document.querySelectorAll(".task");for(let n=0;n<e.length;n++)t.forEach((t=>{let o=t.dataset.id;e[n][1].id===+o&&(t.style.order=n+1)}))}te(),document.querySelector("#add-list-done-btn").addEventListener("click",(()=>{if(de.value){let e=!0;if(y.forEach((t=>{t.name===de.value&&(e=!1,de.setCustomValidity("Choose unique list name."),de.reportValidity())})),!0===e){let e=x(de.value);de.value="",y.push(e),w(e),k(),K(),te(),k(),le.forEach((e=>e.classList.add("hidden")))}}})),document.querySelector("#delete-task-menu-button").onclick=()=>{Y(W),te()};const ie=document.querySelector("#create-list-btn"),re=document.querySelector("#rename-list-btn"),ae=document.querySelector("#add-list-modal"),se=document.querySelector("#rename-list-modal"),le=document.querySelectorAll(".modal"),ce=document.querySelectorAll(".cancel-btn"),de=document.querySelector("#new-list-input"),Ae=document.querySelector("#rename-list-input");ce.forEach((e=>e.addEventListener("click",(()=>{le.forEach((e=>e.classList.add("hidden")))})))),ie.onclick=()=>{ae.classList.remove("hidden"),de.focus()},re.onclick=()=>{se.classList.remove("hidden"),Ae.focus()};var pe=n(379),ue=n.n(pe),me=n(795),Ce=n.n(me),he=n(569),fe=n.n(he),Be=n(636),ge=n.n(Be),ke=n(216),xe=n.n(ke),be=n(589),ve=n.n(be),ye=n(192),we={};we.styleTagTransform=ve(),we.setAttributes=ge(),we.insert=fe().bind(null,"head"),we.domAPI=Ce(),we.insertStyleElement=xe(),ue()(ye.Z,we),ye.Z&&ye.Z.locals&&ye.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,