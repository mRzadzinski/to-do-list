(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>s});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,"body{display:flex;justify-content:center;align-items:center;margin:0;padding:0;width:100vw;height:100vh;font-family:Roboto, RobotoDraft, Helvetica, Arial, sans-serif;font-size:medium}.container{display:grid;grid-template-rows:63px 40px 1fr 41px;position:relative;width:300px;height:100vh;box-shadow:0px 0px 25px -3px #c2c2c2}.list-name-container{display:grid;grid-template-rows:1fr 1fr;height:63px;padding:0 6px 0 16px}.list-name-container #task-header{grid-area:1 / 1 / 2 / 2;align-self:end;color:#80868b;font-size:.6rem;font-weight:500;letter-spacing:1.5px;padding-bottom:7px}.list-name-container #list-name{display:flex;align-items:flex-start;grid-area:2 / 1 / 3 / 2;color:#5f6368;overflow:hidden;white-space:nowrap;font-size:1.05rem;margin-top:-3px}.list-name-container #list-name :hover{cursor:pointer}.add-task{display:flex;align-items:center;height:32px;font-size:.9rem;color:#1a73e8;border-top:solid #f1f3f4 1px;margin-bottom:10px}.add-task :hover{cursor:pointer}.add-task>*{margin-top:7px}.add-task #add-task-text{flex-grow:1;margin-left:3px}.add-task #add-task-icon{fill:#1a73e8}.add-task #more-icon{fill:#5f6368}.tasks-container{display:grid;grid-template-rows:min-content;grid-auto-rows:min-content;border-bottom:solid #e0e0e0 1px;flex-grow:1;overflow:auto}.tasks-container :hover{background-color:#f6f7f8}.tasks-container :hover .more-icon{visibility:visible}.task{display:flex;flex-direction:column;padding:11px 0 5px 0;overflow:hidden}.task .check-icon{display:none}.task .task-value,.task .details-value{display:block}.task .task-main{display:flex;align-items:flex-start}.task .task-main .circle-container{position:relative;width:46px;height:20px}.task .task-main .circle-container:hover .circle-icon{display:none}.task .task-main .circle-container:hover .check-icon{display:block}.task .task-main .circle-icon{position:absolute;top:-15px}.task .task-main .more-icon{position:absolute;top:-14px;right:-44px}.task .task-main .task-content{width:172px;margin:0 0 0 6px;color:#202124;word-wrap:break-word;font-size:.84rem;letter-spacing:.02rem;line-height:1.1rem}.task .more-icon{visibility:visible;margin-right:-12px}.task .task-details{margin:2px 0 0 52px;color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem;overflow-wrap:anywhere;width:140px}.task .task-date{display:block;display:flex;align-items:center;justify-content:center;position:relative;min-height:24px;width:140px;font-size:.77rem;color:#1a73e8;border:solid 1px #e0e0e0;border-radius:15px;margin:7px 0 10px 52px;cursor:pointer}.task .drag-icon{display:none}.task-template{display:none}.time-picker{position:absolute;right:10px;bottom:-7px;display:block;visibility:hidden;width:20px}textarea{display:none}.task-clicked{background-color:#f6f7f8;position:relative}.task-clicked .more-icon{display:block}.task-clicked .task-value,.task-clicked .details-value{display:none}.task-clicked textarea{display:block;outline:none;border:0;font-family:inherit;resize:none;background-color:#f6f7f8}.task-clicked .task-details textarea{color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem}.task-clicked .task-details{margin-top:6px}.task-clicked .task-date{margin-top:9px;border:none;color:#202124;font-size:0.73rem;border:solid 1px #e0e0e0}.task-clicked .task-date:hover{background-color:#f0f2f3}.completed-button{display:flex;align-items:center;height:41px;width:300px;cursor:pointer}.completed-button .arrow-right-container{position:relative;height:41px}.completed-button #arrow-right{position:absolute;top:-4px;fill:#707070;transform:scale(0.45)}.completed-button #completed{color:#707070;margin:0 0 1px 48px;font-size:.9rem;letter-spacing:.03rem}.completed-task-template{display:none}.completed-list{display:none;max-height:0;overflow:auto;transition:max-height 0.2s ease-out;margin-bottom:4px;text-decoration:line-through}.completed-list .check-icon{display:block}.completed-list .task-details{margin-top:0px}.completed-list :hover{background-color:#f6f7f8}.completed-list .trash-icon{right:-55px}.dropdown{display:none;max-height:0;position:absolute;z-index:1;padding:9px 0 9px 0;width:243px;border-radius:4px;font-size:.87rem;font-weight:400;box-shadow:rgba(0,0,0,0.35) 0px 5px 10px;color:#202124;background-color:white;transition:max-height 0.2s ease-out;overflow-x:clip;overflow-y:auto;cursor:pointer}.dropdown :hover{background-color:#f6f7f8}.dropdown.dropdown-task-list{top:62px}.dropdown.dropdown-menu{top:105px;right:15px;z-index:1}.dropdown.dropdown-task-menu{width:192px;left:65px}.dropdown.dropdown-task-menu .trash-icon{left:0px;top:-7px}#dropdown-header{font-size:.8rem;font-weight:400;color:#80868b;margin:9px 0 5px 20px;cursor:default}#dropdown-header:hover{background-color:white}.dropdown-element{padding:9px 20px 9px 20px}.dropdown-element.with-icon{padding:9px 20px 9px 42px}.dropdown-element.with-icon .check-icon{top:-7px;left:1px}.dropdown-element.with-icon.list-text-template{display:none}.modal{position:absolute;display:flex;justify-content:center;align-items:center;z-index:1;left:0;top:0;width:300px;height:100vh;background-color:rgba(0,0,0,0.4)}.modal .modal-content{display:flex;flex-direction:column;justify-content:center;gap:15px;width:200px;height:100px;padding:20px;border-radius:10px;background-color:white}.modal .modal-title{font-size:.9rem}.modal .modal-buttons{display:flex;gap:20px;justify-content:end;padding:5px 10px 0 0}.modal input{height:1.7rem;outline:none;font-size:.9rem;font-family:inherit;background-color:#f6f7f8;border:#eee 1px solid;border-bottom:2px solid #1a73e8;padding-left:10px}.hidden{display:none}.button{font-size:.9rem;cursor:pointer}#add-list-done-btn,#rename-done-btn{color:#1a73e8}.with-icon{display:flex;position:relative}.break-line{width:243px;height:0;border-top:1px solid #c5c5c5;margin:9px 0 9px 0}.task-icon-container{position:relative;height:20px;width:20px}#add-task-icon,.more-icon,.circle-icon,.trash-icon,.plus-icon{transform:scale(0.4)}.check-icon{transform:scale(0.5)}.more-icon,.trash-icon,.check-icon{fill:#5f6368}.check-icon,.trash-icon{position:absolute;top:-15px}.check-icon.hidden{display:none}.plus-icon{position:absolute;top:-7px;left:0px}#arrow-down-icon{fill:#5f6368;transform:scale(0.5);margin:-9px 0 0 -11px}svg,img{cursor:pointer}.task-date.hidden{display:none}.dragover-top-border{border-top:#5f6368 solid 2px}.dragover-bottom-border{border-bottom:#5f6368 solid 2px}#github-link{display:flex;flex-direction:column;align-items:center;justify-content:center;gap:3px;position:absolute;bottom:14px;right:15px;color:#5f6368;font-size:.85rem}#github{height:35px;width:35px;padding-bottom:0.2vh;transition:0.2s;fill:#e0e0e0}#github:hover{transform:scale(1.1)}\n","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"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",sourcesContent:["$dark-font-color: #202124;\n$light-gray: #e0e0e0;\n$dark-gray: #5f6368;\n$finished-gray: #707070;\n$hover-color: #f6f7f8;\n$blue: #1a73e8;\n\n@mixin date-nofocus-style {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    min-height: 24px;\n    width: 150px;\n    font-size: .77rem;\n    color: $blue;\n    border: solid 1px $light-gray;\n    border-radius: 15px;\n    margin: 7px 0 0 52px;\n    cursor: pointer;\n}\n\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n    font-size: medium;\n}\n\n.container {\n    display: grid;\n    grid-template-rows: 63px 40px 1fr 41px ;\n\n    position: relative;\n    width: 300px;\n    height: 100vh;\n    box-shadow: 0px 0px 25px -3px rgb(194, 194, 194);\n}\n\n.list-name-container {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    height: 63px;\n    padding: 0 6px 0 16px;\n\n    #task-header {\n        grid-area: 1 / 1 / 2 / 2;\n        align-self: end;\n        color: #80868b;\n        font-size: .6rem;\n        font-weight: 500;\n        letter-spacing: 1.5px;\n        padding-bottom: 7px;\n    }\n\n    #list-name {\n        display: flex;\n        align-items: flex-start;\n        grid-area: 2 / 1 / 3 / 2;\n        color: $dark-gray;\n        overflow: hidden;\n        white-space: nowrap;\n        font-size: 1.05rem;\n        margin-top: -3px;\n\n        :hover {\n            cursor: pointer;\n        }\n    }\n}\n\n.add-task {\n    display: flex;\n    align-items: center;\n    height: 32px;\n    font-size: .9rem;\n    color: $blue;\n    border-top: solid #f1f3f4 1px;\n    margin-bottom: 10px;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    > * {\n        margin-top: 7px;\n    }\n\n    #add-task-text {\n        flex-grow: 1;\n        margin-left: 3px;\n    }\n\n    #add-task-icon {\n        fill: $blue;\n    }\n\n    #more-icon {\n        fill: $dark-gray;\n    }\n}\n\n.tasks-container {\n    display: grid;\n    grid-template-rows: min-content;\n    grid-auto-rows: min-content;\n    border-bottom: solid #e0e0e0 1px;\n    flex-grow: 1;\n    overflow: auto;\n\n    :hover {\n        background-color: $hover-color;\n\n        .more-icon {\n            visibility: visible;\n        }\n    }\n}\n\n.task {\n    display: flex;\n    flex-direction: column;\n    padding: 11px 0 5px 0;\n    overflow: hidden;\n\n    .check-icon {\n        display: none;\n    }\n\n    .task-value,\n    .details-value {\n        display: block;\n    }\n\n    .task-main {\n        display: flex;\n        align-items: flex-start;\n\n        .circle-container {\n            position: relative;\n            width: 46px;\n            height: 20px;\n        }\n\n        .circle-container:hover {\n\n            .circle-icon {\n                display: none;\n            }\n\n            .check-icon {\n                display: block;\n            }\n        }\n\n        .circle-icon {\n            position: absolute;\n            top: -15px;\n        }\n\n        .more-icon {\n            position: absolute;\n            top: -14px;\n            right: -44px;\n        } \n\n        .task-content {\n            width: 172px;\n            margin: 0 0 0 6px;\n            color: $dark-font-color;\n            word-wrap: break-word;\n            font-size: .84rem;\n            letter-spacing: .02rem;\n            line-height: 1.1rem;\n        }\n    }\n\n    .more-icon {\n        visibility: visible;\n        margin-right: -12px;\n    }\n\n    .task-details {\n        margin: 2px 0 0 52px;\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n        overflow-wrap: anywhere;\n        width: 140px;      \n    }\n\n    .task-date {\n        display: block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        min-height: 24px;\n        width: 140px;\n        font-size: .77rem;\n        color: $blue;\n        border: solid 1px $light-gray;\n        border-radius: 15px;\n        margin: 7px 0 10px 52px;\n        cursor: pointer;\n    }\n\n    .drag-icon {\n        display: none;\n    }\n}\n\n.task-template {\n    display: none;\n}\n\n.time-picker {\n    position: absolute;\n    right: 10px;\n    bottom: -7px;\n    display: block;\n    visibility: hidden;\n    width: 20px;\n}\n\ntextarea {\n    display: none;\n}\n\n.task-clicked {\n    background-color: $hover-color;\n    position: relative;\n\n    .more-icon {\n        display: block;\n    }\n\n    .task-value,\n    .details-value {\n        display: none;\n    }\n\n    textarea {\n        display: block;\n        outline: none;\n        border: 0;\n        font-family: inherit;\n        resize: none;\n        background-color: $hover-color;\n    }\n\n    .task-details textarea {\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n    }\n\n    .task-details {\n        margin-top: 6px;\n    }\n\n    .task-date {\n        margin-top: 9px;\n        border: none;\n        color: $dark-font-color;\n        font-size: 0.73rem;\n        border: solid 1px $light-gray;\n\n        &:hover {\n            background-color: #f0f2f3;\n        }\n    }\n}\n\n.completed-button {\n    display: flex;\n    align-items: center;\n    height: 41px;\n    width: 300px;\n    cursor: pointer;\n\n    .arrow-right-container {\n        position: relative;\n        height: 41px;\n    }\n\n    #arrow-right {\n        position: absolute;\n        top: -4px;\n        fill: $finished-gray;\n        transform: scale(.45);\n    }\n\n    #completed {\n        color: $finished-gray;\n        margin: 0 0 1px 48px;\n        font-size: .9rem;\n        letter-spacing: .03rem;\n    }\n}\n\n.completed-task-template {\n    display: none;\n}\n\n.completed-list {\n    display: none;\n    max-height: 0;\n    overflow: auto;\n    transition: max-height 0.2s ease-out;\n    margin-bottom: 4px;\n    text-decoration: line-through;\n\n    .check-icon {\n        display: block;\n    }\n    \n    .task-details {\n        margin-top: 0px;\n    }\n\n    :hover {\n        background-color: $hover-color;\n    }\n\n    .trash-icon {\n        right: -55px;\n    }\n}\n\n.dropdown {\n    display: none;\n    max-height: 0;\n    position: absolute;\n    z-index: 1;\n    padding: 9px 0 9px 0;\n    width: 243px;\n    border-radius: 4px;\n    font-size: .87rem;\n    font-weight: 400;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 10px;\n    color: $dark-font-color;\n    background-color: white;\n    transition: max-height 0.2s ease-out;\n    overflow-x: clip;\n    overflow-y: auto;\n    cursor: pointer;\n\n    :hover {\n        background-color: $hover-color;\n    }\n}\n\n.dropdown.dropdown-task-list {\n    top: 62px;\n}\n\n.dropdown.dropdown-menu {\n    top: 105px;\n    right: 15px;\n    z-index: 1;\n}\n\n.dropdown.dropdown-task-menu {\n    width: 192px;\n    left: 65px;\n\n    .trash-icon {\n        left: 0px;\n        top: -7px;\n    }\n}\n\n#dropdown-header {\n    font-size: .8rem;\n    font-weight: 400;\n    color: #80868b;\n    margin: 9px 0 5px 20px;\n    cursor: default;\n\n    &:hover {\n        background-color: white;\n    }\n}\n\n.dropdown-element {\n    padding: 9px 20px 9px 20px;\n}\n\n.dropdown-element.with-icon {\n    padding: 9px 20px 9px 42px;\n\n    .check-icon {\n        top: -7px;\n        left: 1px;\n    }\n\n    &.list-text-template {\n        display: none;\n    }\n}\n\n.modal {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 300px;\n    height: 100vh;\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n\n    .modal-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        gap: 15px;\n        width: 200px;\n        height: 100px;\n        padding: 20px;\n        border-radius: 10px;\n        background-color: white;\n    }\n\n    .modal-title {\n        font-size: .9rem;\n    }\n\n    .modal-buttons {\n        display: flex;\n        gap: 20px;\n        justify-content: end;\n        padding: 5px 10px 0 0;\n    }\n\n    input {\n        height: 1.7rem;\n        outline: none;\n        font-size: .9rem;\n        font-family: inherit;\n        background-color: $hover-color;\n        border: rgb(238, 238, 238) 1px solid;\n        border-bottom: 2px solid $blue;\n        padding-left: 10px;\n    }\n}\n\n.hidden {\n    display: none;\n}\n\n.button {\n    font-size: .9rem;\n    cursor: pointer;\n}\n\n#add-list-done-btn,\n#rename-done-btn {\n    color: $blue;\n}\n\n.with-icon {\n    display: flex;\n    position: relative;\n}\n\n.break-line {\n    width: 243px;\n    height: 0;\n    border-top: 1px solid rgb(197, 197, 197);\n    margin: 9px 0 9px 0;\n}\n\n.task-icon-container {\n    position: relative;\n    height: 20px;\n    width: 20px;\n}\n\n#add-task-icon, \n.more-icon, \n.circle-icon, \n.trash-icon,\n.plus-icon {\n    transform: scale(.4);\n}\n\n.check-icon {\n    transform: scale(.5);\n}\n\n.more-icon,\n.trash-icon,\n.check-icon {\n    fill: $dark-gray;\n}\n\n.check-icon,\n.trash-icon {\n    position: absolute;\n    top: -15px;\n}\n\n.check-icon.hidden {\n    display: none;\n}\n\n.plus-icon {\n    position: absolute;\n    top: -7px;\n    left: 0px;\n}\n\n#arrow-down-icon {\n    fill: $dark-gray;\n    transform: scale(.5);\n    margin: -9px 0 0 -11px;\n}\n\nsvg, img {\n    cursor: pointer;\n}\n\n.task-date.hidden {\n    display: none;\n}\n\n.dragover-top-border {\n    border-top: $dark-gray solid 2px;\n}\n\n.dragover-bottom-border {\n    border-bottom: $dark-gray solid 2px;\n}\n\n#github-link {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 3px;\n    position: absolute;\n    bottom: 14px;\n    right: 15px;\n    color: $dark-gray;\n    font-size: .85rem;\n}\n\n#github {\n    height: 35px;\n    width: 35px;\n    padding-bottom: 0.2vh;\n    transition: 0.2s;\n    fill: $light-gray;\n}\n\n#github:hover {\n    transform: scale(1.1);\n}"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&a[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s],c=o.base?l[0]+o.base:l[0],d=r[c]||0,A="".concat(c," ").concat(d);r[c]=d+1;var p=n(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var C=i(u,o);o.byIndex=s,t.splice(s,0,{identifier:A,updater:C,references:1})}a.push(A)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=n(r[a]);t[s].references--}for(var l=o(e,i),c=0;c<r.length;c++){var d=n(r[c]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},636:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{const e=n.p+"5c00f1557b5580ac8d23.png",t=n.p+"e776d509a33b49d1179c.png";Math.pow(10,8);var o=36e5;function i(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function r(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}var a={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},s=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,l=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,c=/^([+-])(\d{2})(?::?(\d{2}))?$/;function d(e){var t,n={},o=e.split(a.dateTimeDelimiter);if(o.length>2)return n;if(/:/.test(o[0])?t=o[0]:(n.date=o[0],t=o[1],a.timeZoneDelimiter.test(n.date)&&(n.date=e.split(a.timeZoneDelimiter)[0],t=e.substr(n.date.length,e.length))),t){var i=a.timezone.exec(t);i?(n.time=t.replace(i[1],""),n.timezone=i[1]):n.time=t}return n}function A(e,t){var n=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+t)+"})|(\\d{2}|[+-]\\d{"+(2+t)+"})$)"),o=e.match(n);if(!o)return{year:NaN,restDateString:""};var i=o[1]?parseInt(o[1]):null,r=o[2]?parseInt(o[2]):null;return{year:null===r?i:100*r,restDateString:e.slice((o[1]||o[2]).length)}}function p(e,t){if(null===t)return new Date(NaN);var n=e.match(s);if(!n)return new Date(NaN);var o=!!n[4],i=u(n[1]),r=u(n[2])-1,a=u(n[3]),l=u(n[4]),c=u(n[5])-1;if(o)return function(e,t,n){return t>=1&&t<=53&&n>=0&&n<=6}(0,l,c)?function(e,t,n){var o=new Date(0);o.setUTCFullYear(e,0,4);var i=7*(t-1)+n+1-(o.getUTCDay()||7);return o.setUTCDate(o.getUTCDate()+i),o}(t,l,c):new Date(NaN);var d=new Date(0);return function(e,t,n){return t>=0&&t<=11&&n>=1&&n<=(f[t]||(B(e)?29:28))}(t,r,a)&&function(e,t){return t>=1&&t<=(B(e)?366:365)}(t,i)?(d.setUTCFullYear(t,r,Math.max(i,a)),d):new Date(NaN)}function u(e){return e?parseInt(e):1}function C(e){var t=e.match(l);if(!t)return NaN;var n=m(t[1]),i=m(t[2]),r=m(t[3]);return function(e,t,n){return 24===e?0===t&&0===n:n>=0&&n<60&&t>=0&&t<60&&e>=0&&e<25}(n,i,r)?n*o+6e4*i+1e3*r:NaN}function m(e){return e&&parseFloat(e.replace(",","."))||0}function h(e){if("Z"===e)return 0;var t=e.match(c);if(!t)return 0;var n="+"===t[1]?-1:1,i=parseInt(t[2]),r=t[3]&&parseInt(t[3])||0;return function(e,t){return t>=0&&t<=59}(0,r)?n*(i*o+6e4*r):NaN}var f=[31,null,31,30,31,30,31,31,30,31,30,31];function B(e){return e%400==0||e%4==0&&e%100!=0}let g,k;function x(){g&&g&&(localStorage.clear(),localStorage.setItem("taskLists",JSON.stringify(w)),localStorage.setItem("currentListName",JSON.stringify(y.name)))}g=!!function(e){let t;try{t=window.localStorage;const e="__storage_test__";return t.setItem(e,e),t.removeItem(e),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&t&&0!==t.length}}();const b=e=>({name:e,sortMethod:"custom",tasks:{}}),v=(e,t,n,o,i,r)=>({id:e,name:t,details:n,dateTime:o,position:i,completed:r});let y,w=[];function S(e){y=e}if(function(){if(localStorage.getItem("taskLists")){k=!1,w=JSON.parse(localStorage.getItem("taskLists"));let e=JSON.parse(localStorage.getItem("currentListName"));w.forEach((t=>{t.name===e&&(y=t)}))}else k=!0}(),k){let e=b("Weekend"),t=v(0,"Dance","Samba","2022-12-03T10:00",3,!1),n=v(1,"Sleep","Deep","",2,!1),o=v(2,"Eat","Sushi","2022-12-03T11:11",1,!1),i=v(3,"Cook","Sushi","",4,!1),r=v(4,"Laze","As much as you can","2022-12-04T12:00",5,!1),a=b("Week"),s=v(0,"Work","On a highway","2022-11-23T17:33",1,!1),l=v(1,"Lay down ","The blacktop","2022-09-26T10:11",2,!1),c=v(2,"Cry","Your eyes out","2022-12-26T11:51",3,!1);w.push(e),e.tasks.dance=t,e.tasks.sleep=n,e.tasks.eat=o,e.tasks.cook=i,e.tasks.laze=r,w.push(a),a.tasks.work=s,a.tasks.layDown=l,a.tasks.cry=c}y||(y=w[0]);const L=document.querySelectorAll(".modal"),Y=document.querySelector("#rename-list-input");function E(e){let t=!0;for(let n in w)for(let o in n.tasks)y.tasks[o].name===e&&(t=!1);return t}function T(){let e="",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let n=0;n<5;n++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}function q(e){let t;for(let n in y.tasks)y.tasks[n].id===+e&&(t=n);for(let e in y.tasks)y.tasks[e].position>y.tasks[t].position&&y.tasks[e].position--;delete y.tasks[t],N(),x()}function N(){w.forEach((e=>{let t=0;for(let n in e.tasks)e.tasks[n].id=t,t++}))}document.querySelector("#rename-done-btn").addEventListener("click",(()=>{Y.value&&(y.name=Y.value,Y.value="",_(),ne(),x(),L.forEach((e=>e.classList.add("hidden"))))})),document.querySelector("#delete-list-button").onclick=()=>{let e=w.indexOf(y);w.splice(e,1),y=w[0],_(),ne(),x()},[document.querySelector("#add-task-icon"),document.querySelector("#add-task-text")].forEach((e=>e.addEventListener("click",(()=>{let e=T(),t=E(e);for(;!1===t;)e=T(),t=E(e);!function(){for(let e in y.tasks)e&&"object"==typeof y.tasks[e]&&!y.tasks[e].completed&&y.tasks[e].position++;x()}(),y.tasks[e]=v("","","","",1,!1),N(),ne(),setTimeout(oe,10),x()})))),document.querySelector("#delete-completed-tasks").onclick=function(){for(let e in y.tasks)!0===y.tasks[e].completed&&delete y.tasks[e];ne(),x()};const D=document.querySelector("#sort-name-btn"),M=document.querySelector("#sort-date-btn");function Q(){!function(){const e=document.querySelectorAll(".sort-btn");let t=y.sortMethod;"custom"===t?t="sort-custom-btn":"date"===t?t="sort-date-btn":"name"===t&&(t="sort-name-btn"),e.forEach((e=>{e.id===t?e.firstChild.classList.remove("hidden"):e.firstChild.classList.add("hidden")}))}(),ie(z())}function z(){let e=Object.entries(y.tasks),t=y.sortMethod;return"name"===t?(e.sort(((e,t)=>{let n=e[1].name.toLowerCase(),o=t[1].name.toLowerCase();return n<o?-1:n>o?1:0})),G(e)):"date"===t?(e.sort(((e,t)=>{let n;return n=e[1].dateTime?new Date(e[1].dateTime):new Date("January 1, 1500 00:00:00"),n-new Date(t[1].dateTime)})),G(e)):"custom"===t?(e.sort(((e,t)=>e[1].position-t[1].position)),G(e)):void 0}function G(e){let t=[];return e.forEach((e=>{e[1].completed||t.push(e)})),t}function $(e,t,n){let o,i,r,a=z();for(let e in y.tasks)y.tasks[e].id===+t?(o=y.tasks[e],i=y.tasks[e].position):y.tasks[e].id===+n&&(r=y.tasks[e].position);if("before"===e)a.forEach((e=>{i>r?e[1].position>=r&&e[1].position<i&&(e[1].position++,o.position=r):i<r&&e[1].position>i&&e[1].position<r&&(e[1].position--,o.position=r-1)})),a=z();else if("end"===e)for(let e in y.tasks)if(y.tasks[e].position===i){a.forEach((e=>{e[1].position>i&&e[1].position--})),y.tasks[e].position=z().length;break}x()}let W,j,U;document.querySelector("#sort-custom-btn").onclick=()=>{y.sortMethod="custom",Q()},M.onclick=()=>{y.sortMethod="date",Q()},D.onclick=()=>{y.sortMethod="name",Q()},document.querySelectorAll(".circle-icon").forEach((t=>{t.src=e})),document.querySelector("#github").src=t;const Z=(()=>{let e,t;function n(){const n=document.querySelectorAll(".time-picker");document.querySelectorAll(".task-date").forEach((i=>{i.addEventListener("click",(()=>{n.forEach((n=>{i.contains(n)&&(n.showPicker(),e=n,t=e.previousElementSibling)}))})),i.addEventListener("change",(()=>o(e.value,t))),i.addEventListener("change",a)}))}function o(e,t){let n,o=function(e,t){var n;i(1,arguments);var o=r(null!==(n=null==t?void 0:t.additionalDigits)&&void 0!==n?n:2);if(2!==o&&1!==o&&0!==o)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var a,s=d(e);if(s.date){var l=A(s.date,o);a=p(l.restDateString,l.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var c,u=a.getTime(),m=0;if(s.time&&(m=C(s.time),isNaN(m)))return new Date(NaN);if(!s.timezone){var f=new Date(u+m),B=new Date(0);return B.setFullYear(f.getUTCFullYear(),f.getUTCMonth(),f.getUTCDate()),B.setHours(f.getUTCHours(),f.getUTCMinutes(),f.getUTCSeconds(),f.getUTCMilliseconds()),B}return c=h(s.timezone),isNaN(c)?new Date(NaN):new Date(u+m+c)}(e).toString().split(" "),a=new Date(e).toLocaleTimeString("en",{timeStyle:"short",hour12:!0}),s=`${o[0]}, ${o[1]} ${o[2]}, ${a}`,l=t.parentNode.parentNode.dataset.id;for(const e in y.tasks)y.tasks[e].id==l&&(n=y.tasks[e]);n.dateTime=e,x(),s.includes("Invalid")?t.innerHTML="Date / time":t.innerHTML=s,ie(z())}function a(){document.querySelectorAll(".date-value").forEach((e=>{"Date / time"!==e.innerHTML||e.parentNode.parentNode.classList.contains("task-clicked")?e.parentNode.classList.remove("hidden"):e.parentNode.classList.add("hidden")}))}return n(),a(),{addDateListeners:n,toggleDate:a,convertDate:o}})(),H=(()=>{function e(){this.style.height=0,this.style.height=this.scrollHeight+"px"}return{addTextAreasListeners:function(){const t=document.getElementsByTagName("textarea");for(let n=0;n<t.length;n++){let o;o=0==+t[n].scrollHeight?"auto":t[n].scrollHeight,t[n].setAttribute("style","height:"+o+"px;overflow-y:hidden;"),t[n].addEventListener("input",e),t[n].addEventListener("change",(()=>{let e,o,i;t[n].parentNode.classList.contains("task-content")?(e=t[n].parentNode.parentNode.parentNode.dataset.id,o="task-content"):t[n].parentNode.classList.contains("task-details")&&(e=t[n].parentNode.parentNode.dataset.id,o="task-details");for(const t in y.tasks)y.tasks[t].id===+e&&(i=y.tasks[t]);"task-content"===o?i.name=t[n].value:"task-details"===o&&(i.details=t[n].value),x(),t[n].innerHTML=t[n].value,t[n].previousElementSibling.innerHTML=t[n].value,ie(z())}))}}}})(),I=(()=>{const e=document.querySelector("#list-name"),t=document.querySelectorAll(".dropdown"),n=document.querySelector(".dropdown-task-menu"),o=document.querySelector(".completed-button"),i=document.querySelector(".completed-list"),r=document.querySelector("#arrow-right"),a=document.querySelector("#main-menu-btn");let s;function l(){document.querySelectorAll(".task-menu-button").forEach((e=>e.addEventListener("click",(t=>{s=e,W=e.parentNode.parentNode.parentNode,j=W.dataset.id;let o=s.getBoundingClientRect().y;document.body.scrollHeight-o<n.scrollHeight?n.style.top=document.body.scrollHeight-n.scrollHeight+"px":n.style.top=s.getBoundingClientRect().y+"px",d(n,t)}))))}function c(e){for(let n=0;n<t.length;n++)if(t[n].classList.contains(e))return t[n]}function d(e,t){t&&e.classList.contains("active")||(e.classList.contains("active")?(e.classList.remove("active"),e.style.maxHeight="0",e.style.display="none",e.classList.contains("completed-list")&&(r.style.transform="scale(.45)")):(e.style.display="block",e.style.maxHeight=e.scrollHeight+"px",e.classList.add("active"),e.classList.contains("completed-list")&&(r.style.transform="scale(.45) rotate(90deg)")))}return e.onclick=()=>d(c("dropdown-task-list")),a.onclick=()=>d(c("dropdown-menu")),o.onclick=()=>d(i),l(),document.onclick=n=>{t.forEach((t=>{t.classList.contains("active")&&(!e.contains(n.target)&&t.classList.contains("dropdown-task-list")||!a.contains(n.target)&&t.classList.contains("dropdown-menu")||s&&!s.contains(n.target)&&t.classList.contains("dropdown-task-menu"))&&d(t)}))},{addTaskMenuListeners:l,addResizeTaskListener:function(){const e=document.querySelectorAll(".task");document.addEventListener("click",(t=>{e.forEach((e=>{!e.contains(t.target)||e.classList.contains("completed")||t.target.classList.contains("more-icon")?e.classList.remove("task-clicked"):e.classList.add("task-clicked"),Z.toggleDate()}))}))},taskMenu:n,expandElement:d}})(),O=(()=>{let e;function t(){"custom"===y.sortMethod&&(this.style.opacity=".5",e=this)}function n(t){if("custom"!==y.sortMethod)return;t.preventDefault();let n=a();return t.target.classList.contains("task")&&this!==e&&(this.classList.add("dragover-top-border"),n.classList.remove("dragover-bottom-border")),!1}function o(){if("custom"!==y.sortMethod)return;let t=a();this.classList.remove("dragover-top-border"),e!==t&&t.classList.add("dragover-bottom-border")}function i(t){if("custom"!==y.sortMethod)return;let n=a(),o=+e.dataset.id,i=+this.dataset.id;return t.stopPropagation(),e===this||n.classList.contains("dragover-bottom-border")||$("before",o,i),!1}function r(){if("custom"!==y.sortMethod)return;let t=a();e.style.opacity="1",e!==t&&t.classList.contains("dragover-bottom-border")&&$("end",+e.dataset.id),ne()}function a(){const e=document.querySelectorAll(".task");let t,n=function(){let e=Object.entries(y.tasks);return e.sort(((e,t)=>{let n=e[1].position;return t[1].position-n})),e[0][1].id}();return e.forEach((e=>{+e.dataset.id===n&&(t=e)})),t}return{addDragDropListeners:function(){document.querySelectorAll(".task").forEach((e=>{e.addEventListener("dragstart",t),e.addEventListener("dragover",n),e.addEventListener("dragleave",o),e.addEventListener("dragend",r),e.addEventListener("drop",i)}))}}})();const R=document.querySelector(".list-text-template"),F=document.querySelector("#prepend-with-list"),V=document.querySelector("#append-list"),P=document.querySelector("#list-name-text");let K;function _(){for(w[0]||(w.push(b("List")),y=w[0]);F.previousSibling;)F.previousSibling.remove();for(;V.nextSibling;)V.nextSibling.remove();w.forEach((e=>{let t=R.cloneNode(!0),n=R.cloneNode(!0);t.classList.remove("list-text-template"),t.classList.add("switch-list"),n.classList.remove("list-text-template"),n.classList.add("move-task-btn"),F.before(t),I.taskMenu.append(n),t.lastChild.innerHTML=e.name,n.lastChild.innerHTML=e.name,e===y&&t.firstChild.classList.remove("hidden"),e===y&&n.firstChild.classList.remove("hidden")})),K=document.querySelectorAll(".switch-list"),U=document.querySelectorAll(".move-task-btn"),K.forEach((e=>{e.addEventListener("click",(function(){!function(e){let t=e.lastChild.innerHTML;y.tasks.name!==t&&w.forEach((e=>{e.name===t&&(S(e),x(),_(),ne())}))}(e)}))})),function(e){P.innerHTML=e.name}(y),U.forEach((e=>e.addEventListener("click",(()=>{let t=e.lastChild.innerHTML;!function(e,t){let n;for(let e=0;e<w.length;e++)w[e].name===t&&(n=e);if(y!==w[n]){for(let t in y.tasks)if(y.tasks[t].id===+e){let e=y.tasks[t].position,o=0;Object.entries(w[n].tasks).forEach((e=>{e[1].completed||o++}));for(let t in y.tasks)y.tasks[t].position>e&&y.tasks[t].position--;w[n].tasks[t]=y.tasks[t],w[n].tasks[t].position=o+1,delete y.tasks[t]}N(),ne(),x()}}(j,t)}))))}_();const J=document.querySelector(".tasks-container"),X=document.querySelector(".task-template"),ee=document.querySelector(".completed-list"),te=document.querySelector(".completed-task-template");function ne(){J.innerHTML="",ee.innerHTML="";for(const e in y.tasks){if(!e)return;if(e&&"object"==typeof y.tasks[e]&&!1===y.tasks[e].completed){let t=X.cloneNode(!0);if(t.classList.remove("task-template"),J.append(t),t.style.order=y.tasks[e].position,t.dataset.id=y.tasks[e].id,t.children[0].children[1].children[0].innerHTML=y.tasks[e].name,t.children[0].children[1].children[0].nextElementSibling.value=y.tasks[e].name,t.children[1].children[0].innerHTML=y.tasks[e].details,t.children[1].children[0].nextElementSibling.value=y.tasks[e].details,y.tasks[e].dateTime){let n=t.children[2].children[1],o=y.tasks[e].dateTime,i=n.previousElementSibling;n.setAttribute("value",o),Z.convertDate(o,i),Z.toggleDate()}}else if(e&&"object"==typeof y.tasks[e]&&!0===y.tasks[e].completed){let t=te.cloneNode(!0);t.classList.remove("completed-task-template"),ee.append(t),t.dataset.id=y.tasks[e].id,t.children[0].children[1].children[0].innerHTML=y.tasks[e].name,t.children[1].children[0].innerHTML=y.tasks[e].details}}Z.addDateListeners(),H.addTextAreasListeners(),I.addTaskMenuListeners(),I.addResizeTaskListener(),O.addDragDropListeners(),document.querySelectorAll(".toggle-completed-btn").forEach((e=>e.addEventListener("click",(()=>{!function(e){for(let t in y.tasks)if(y.tasks[t].id==e)if(!1===y.tasks[t].completed){for(let e in y.tasks)y.tasks[e].position>y.tasks[t].position&&y.tasks[e].position--;y.tasks[t].completed=!0,y.tasks[t].position=""}else!0===y.tasks[t].completed&&(y.tasks[t].position=z().length+1,y.tasks[t].completed=!1);x()}(e.parentNode.parentNode.parentNode.dataset.id),ne(),I.expandElement(ee),I.expandElement(ee)})))),document.querySelectorAll(".delete-task").forEach((e=>e.addEventListener("click",(t=>{if(e.parentNode.parentNode.parentNode.classList.contains("task")){let t=e.parentNode.parentNode.parentNode,n=t.dataset.id;t.remove(),q(n),ne()}})))),Q()}function oe(){document.querySelectorAll(".task").forEach((e=>{const t=e.children[0].children[1].children[0].innerHTML,n=e.children[1].children[0].innerHTML,o=e.children[2],i=e.style.order,r=e.children[0].children[1].children[1];1==+i&&""===t&&""===n&&o.classList.contains("hidden")&&(e.classList.add("task-clicked"),r.focus())}))}function ie(e){const t=document.querySelectorAll(".task");for(let n=0;n<e.length;n++)t.forEach((t=>{let o=t.dataset.id;e[n][1].id===+o&&(t.style.order=n+1)}))}ne(),document.querySelector("#add-list-done-btn").addEventListener("click",(()=>{if(Ae.value){let e=!0;if(w.forEach((t=>{t.name===Ae.value&&(e=!1,Ae.setCustomValidity("Choose unique list name."),Ae.reportValidity())})),!0===e){let e=b(Ae.value);Ae.value="",w.push(e),S(e),x(),_(),ne(),x(),ce.forEach((e=>e.classList.add("hidden")))}}})),document.querySelector("#delete-task-menu-button").onclick=()=>{q(j),ne()};const re=document.querySelector("#create-list-btn"),ae=document.querySelector("#rename-list-btn"),se=document.querySelector("#add-list-modal"),le=document.querySelector("#rename-list-modal"),ce=document.querySelectorAll(".modal"),de=document.querySelectorAll(".cancel-btn"),Ae=document.querySelector("#new-list-input"),pe=document.querySelector("#rename-list-input");de.forEach((e=>e.addEventListener("click",(()=>{ce.forEach((e=>e.classList.add("hidden")))})))),re.onclick=()=>{se.classList.remove("hidden"),Ae.focus()},ae.onclick=()=>{le.classList.remove("hidden"),pe.focus()};var ue=n(379),Ce=n.n(ue),me=n(795),he=n.n(me),fe=n(569),Be=n.n(fe),ge=n(636),ke=n.n(ge),xe=n(216),be=n.n(xe),ve=n(589),ye=n.n(ve),we=n(192),Se={};Se.styleTagTransform=ye(),Se.setAttributes=ke(),Se.insert=Be().bind(null,"head"),Se.domAPI=he(),Se.insertStyleElement=be(),Ce()(we.Z,Se),we.Z&&we.Z.locals&&we.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGNBQWMsbUJBQ3RDb1gsR0FBa0JyWCxTQUFTQyxjQUFjLHNCQUN6QyxHQUFTRCxTQUFTc0wsaUJBQWlCLFVBQ25DZ00sR0FBcUJ0WCxTQUFTc0wsaUJBQWlCLGVBQy9DeUwsR0FBZS9XLFNBQVNDLGNBQWMsbUJBQ3RDLEdBQWtCRCxTQUFTQyxjQUFjLHNCQUUvQ3FYLEdBQW1CNU0sU0FBUTJDLEdBQVVBLEVBQU9oQixpQkFBaUIsU0FBUyxLQUNsRSxHQUFPM0IsU0FBUThCLEdBQVNBLEVBQU1DLFVBQVVDLElBQUksV0FBVSxNQUcxRHdLLEdBQWN2SyxRQUFVLEtBQ3BCeUssR0FBYTNLLFVBQVVyTixPQUFPLFVBQzlCMlgsR0FBYUosT0FBTyxFQUV4QlEsR0FBY3hLLFFBQVUsS0FDcEIwSyxHQUFnQjVLLFVBQVVyTixPQUFPLFVBQ2pDLEdBQWdCdVgsT0FBTyxFLDRJQzlsQnZCelksR0FBVSxDQUFDLEVBRWZBLEdBQVFnRCxrQkFBb0IsS0FDNUJoRCxHQUFRMEMsY0FBZ0IsS0FFbEIxQyxHQUFRMEIsT0FBUyxVQUFjLEtBQU0sUUFFM0MxQixHQUFRZSxPQUFTLEtBQ2pCZixHQUFRK0MsbUJBQXFCLEtBRWhCLEtBQUksS0FBUy9DLElBS0osTUFBVyxhQUFpQixXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9zdHlsZS5zY3NzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90by1kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90by1kby1saXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vY29uc3RhbnRzL2luZGV4LmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvcmVxdWlyZWRBcmdzL2luZGV4LmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvdG9JbnRlZ2VyL2luZGV4LmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL3BhcnNlSVNPL2luZGV4LmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvbW9kdWxlcy9sb2dpYy5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL21vZHVsZXMvRE9NbWFuaXB1bGF0aW9uLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvc3R5bGUuc2Nzcz83NWJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keXtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7bWFyZ2luOjA7cGFkZGluZzowO3dpZHRoOjEwMHZ3O2hlaWdodDoxMDB2aDtmb250LWZhbWlseTpSb2JvdG8sIFJvYm90b0RyYWZ0LCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO2ZvbnQtc2l6ZTptZWRpdW19LmNvbnRhaW5lcntkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1yb3dzOjYzcHggNDBweCAxZnIgNDFweDtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDozMDBweDtoZWlnaHQ6MTAwdmg7Ym94LXNoYWRvdzowcHggMHB4IDI1cHggLTNweCAjYzJjMmMyfS5saXN0LW5hbWUtY29udGFpbmVye2Rpc3BsYXk6Z3JpZDtncmlkLXRlbXBsYXRlLXJvd3M6MWZyIDFmcjtoZWlnaHQ6NjNweDtwYWRkaW5nOjAgNnB4IDAgMTZweH0ubGlzdC1uYW1lLWNvbnRhaW5lciAjdGFzay1oZWFkZXJ7Z3JpZC1hcmVhOjEgLyAxIC8gMiAvIDI7YWxpZ24tc2VsZjplbmQ7Y29sb3I6IzgwODY4Yjtmb250LXNpemU6LjZyZW07Zm9udC13ZWlnaHQ6NTAwO2xldHRlci1zcGFjaW5nOjEuNXB4O3BhZGRpbmctYm90dG9tOjdweH0ubGlzdC1uYW1lLWNvbnRhaW5lciAjbGlzdC1uYW1le2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O2dyaWQtYXJlYToyIC8gMSAvIDMgLyAyO2NvbG9yOiM1ZjYzNjg7b3ZlcmZsb3c6aGlkZGVuO3doaXRlLXNwYWNlOm5vd3JhcDtmb250LXNpemU6MS4wNXJlbTttYXJnaW4tdG9wOi0zcHh9Lmxpc3QtbmFtZS1jb250YWluZXIgI2xpc3QtbmFtZSA6aG92ZXJ7Y3Vyc29yOnBvaW50ZXJ9LmFkZC10YXNre2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7aGVpZ2h0OjMycHg7Zm9udC1zaXplOi45cmVtO2NvbG9yOiMxYTczZTg7Ym9yZGVyLXRvcDpzb2xpZCAjZjFmM2Y0IDFweDttYXJnaW4tYm90dG9tOjEwcHh9LmFkZC10YXNrIDpob3ZlcntjdXJzb3I6cG9pbnRlcn0uYWRkLXRhc2s+KnttYXJnaW4tdG9wOjdweH0uYWRkLXRhc2sgI2FkZC10YXNrLXRleHR7ZmxleC1ncm93OjE7bWFyZ2luLWxlZnQ6M3B4fS5hZGQtdGFzayAjYWRkLXRhc2staWNvbntmaWxsOiMxYTczZTh9LmFkZC10YXNrICNtb3JlLWljb257ZmlsbDojNWY2MzY4fS50YXNrcy1jb250YWluZXJ7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtcm93czptaW4tY29udGVudDtncmlkLWF1dG8tcm93czptaW4tY29udGVudDtib3JkZXItYm90dG9tOnNvbGlkICNlMGUwZTAgMXB4O2ZsZXgtZ3JvdzoxO292ZXJmbG93OmF1dG99LnRhc2tzLWNvbnRhaW5lciA6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4fS50YXNrcy1jb250YWluZXIgOmhvdmVyIC5tb3JlLWljb257dmlzaWJpbGl0eTp2aXNpYmxlfS50YXNre2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47cGFkZGluZzoxMXB4IDAgNXB4IDA7b3ZlcmZsb3c6aGlkZGVufS50YXNrIC5jaGVjay1pY29ue2Rpc3BsYXk6bm9uZX0udGFzayAudGFzay12YWx1ZSwudGFzayAuZGV0YWlscy12YWx1ZXtkaXNwbGF5OmJsb2NrfS50YXNrIC50YXNrLW1haW57ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnR9LnRhc2sgLnRhc2stbWFpbiAuY2lyY2xlLWNvbnRhaW5lcntwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDo0NnB4O2hlaWdodDoyMHB4fS50YXNrIC50YXNrLW1haW4gLmNpcmNsZS1jb250YWluZXI6aG92ZXIgLmNpcmNsZS1pY29ue2Rpc3BsYXk6bm9uZX0udGFzayAudGFzay1tYWluIC5jaXJjbGUtY29udGFpbmVyOmhvdmVyIC5jaGVjay1pY29ue2Rpc3BsYXk6YmxvY2t9LnRhc2sgLnRhc2stbWFpbiAuY2lyY2xlLWljb257cG9zaXRpb246YWJzb2x1dGU7dG9wOi0xNXB4fS50YXNrIC50YXNrLW1haW4gLm1vcmUtaWNvbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTE0cHg7cmlnaHQ6LTQ0cHh9LnRhc2sgLnRhc2stbWFpbiAudGFzay1jb250ZW50e3dpZHRoOjE3MnB4O21hcmdpbjowIDAgMCA2cHg7Y29sb3I6IzIwMjEyNDt3b3JkLXdyYXA6YnJlYWstd29yZDtmb250LXNpemU6Ljg0cmVtO2xldHRlci1zcGFjaW5nOi4wMnJlbTtsaW5lLWhlaWdodDoxLjFyZW19LnRhc2sgLm1vcmUtaWNvbnt2aXNpYmlsaXR5OnZpc2libGU7bWFyZ2luLXJpZ2h0Oi0xMnB4fS50YXNrIC50YXNrLWRldGFpbHN7bWFyZ2luOjJweCAwIDAgNTJweDtjb2xvcjojNWY2MzY4O2ZvbnQtc2l6ZTouNzNyZW07Zm9udC13ZWlnaHQ6MzAwO2xldHRlci1zcGFjaW5nOi4wMnJlbTtvdmVyZmxvdy13cmFwOmFueXdoZXJlO3dpZHRoOjE0MHB4fS50YXNrIC50YXNrLWRhdGV7ZGlzcGxheTpibG9jaztkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmU7bWluLWhlaWdodDoyNHB4O3dpZHRoOjE0MHB4O2ZvbnQtc2l6ZTouNzdyZW07Y29sb3I6IzFhNzNlODtib3JkZXI6c29saWQgMXB4ICNlMGUwZTA7Ym9yZGVyLXJhZGl1czoxNXB4O21hcmdpbjo3cHggMCAxMHB4IDUycHg7Y3Vyc29yOnBvaW50ZXJ9LnRhc2sgLmRyYWctaWNvbntkaXNwbGF5Om5vbmV9LnRhc2stdGVtcGxhdGV7ZGlzcGxheTpub25lfS50aW1lLXBpY2tlcntwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxMHB4O2JvdHRvbTotN3B4O2Rpc3BsYXk6YmxvY2s7dmlzaWJpbGl0eTpoaWRkZW47d2lkdGg6MjBweH10ZXh0YXJlYXtkaXNwbGF5Om5vbmV9LnRhc2stY2xpY2tlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmNmY3Zjg7cG9zaXRpb246cmVsYXRpdmV9LnRhc2stY2xpY2tlZCAubW9yZS1pY29ue2Rpc3BsYXk6YmxvY2t9LnRhc2stY2xpY2tlZCAudGFzay12YWx1ZSwudGFzay1jbGlja2VkIC5kZXRhaWxzLXZhbHVle2Rpc3BsYXk6bm9uZX0udGFzay1jbGlja2VkIHRleHRhcmVhe2Rpc3BsYXk6YmxvY2s7b3V0bGluZTpub25lO2JvcmRlcjowO2ZvbnQtZmFtaWx5OmluaGVyaXQ7cmVzaXplOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4fS50YXNrLWNsaWNrZWQgLnRhc2stZGV0YWlscyB0ZXh0YXJlYXtjb2xvcjojNWY2MzY4O2ZvbnQtc2l6ZTouNzNyZW07Zm9udC13ZWlnaHQ6MzAwO2xldHRlci1zcGFjaW5nOi4wMnJlbX0udGFzay1jbGlja2VkIC50YXNrLWRldGFpbHN7bWFyZ2luLXRvcDo2cHh9LnRhc2stY2xpY2tlZCAudGFzay1kYXRle21hcmdpbi10b3A6OXB4O2JvcmRlcjpub25lO2NvbG9yOiMyMDIxMjQ7Zm9udC1zaXplOjAuNzNyZW07Ym9yZGVyOnNvbGlkIDFweCAjZTBlMGUwfS50YXNrLWNsaWNrZWQgLnRhc2stZGF0ZTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmMGYyZjN9LmNvbXBsZXRlZC1idXR0b257ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6NDFweDt3aWR0aDozMDBweDtjdXJzb3I6cG9pbnRlcn0uY29tcGxldGVkLWJ1dHRvbiAuYXJyb3ctcmlnaHQtY29udGFpbmVye3Bvc2l0aW9uOnJlbGF0aXZlO2hlaWdodDo0MXB4fS5jb21wbGV0ZWQtYnV0dG9uICNhcnJvdy1yaWdodHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTRweDtmaWxsOiM3MDcwNzA7dHJhbnNmb3JtOnNjYWxlKDAuNDUpfS5jb21wbGV0ZWQtYnV0dG9uICNjb21wbGV0ZWR7Y29sb3I6IzcwNzA3MDttYXJnaW46MCAwIDFweCA0OHB4O2ZvbnQtc2l6ZTouOXJlbTtsZXR0ZXItc3BhY2luZzouMDNyZW19LmNvbXBsZXRlZC10YXNrLXRlbXBsYXRle2Rpc3BsYXk6bm9uZX0uY29tcGxldGVkLWxpc3R7ZGlzcGxheTpub25lO21heC1oZWlnaHQ6MDtvdmVyZmxvdzphdXRvO3RyYW5zaXRpb246bWF4LWhlaWdodCAwLjJzIGVhc2Utb3V0O21hcmdpbi1ib3R0b206NHB4O3RleHQtZGVjb3JhdGlvbjpsaW5lLXRocm91Z2h9LmNvbXBsZXRlZC1saXN0IC5jaGVjay1pY29ue2Rpc3BsYXk6YmxvY2t9LmNvbXBsZXRlZC1saXN0IC50YXNrLWRldGFpbHN7bWFyZ2luLXRvcDowcHh9LmNvbXBsZXRlZC1saXN0IDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNmY3Zjh9LmNvbXBsZXRlZC1saXN0IC50cmFzaC1pY29ue3JpZ2h0Oi01NXB4fS5kcm9wZG93bntkaXNwbGF5Om5vbmU7bWF4LWhlaWdodDowO3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTtwYWRkaW5nOjlweCAwIDlweCAwO3dpZHRoOjI0M3B4O2JvcmRlci1yYWRpdXM6NHB4O2ZvbnQtc2l6ZTouODdyZW07Zm9udC13ZWlnaHQ6NDAwO2JveC1zaGFkb3c6cmdiYSgwLDAsMCwwLjM1KSAwcHggNXB4IDEwcHg7Y29sb3I6IzIwMjEyNDtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlO3RyYW5zaXRpb246bWF4LWhlaWdodCAwLjJzIGVhc2Utb3V0O292ZXJmbG93LXg6Y2xpcDtvdmVyZmxvdy15OmF1dG87Y3Vyc29yOnBvaW50ZXJ9LmRyb3Bkb3duIDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmNmY3Zjh9LmRyb3Bkb3duLmRyb3Bkb3duLXRhc2stbGlzdHt0b3A6NjJweH0uZHJvcGRvd24uZHJvcGRvd24tbWVudXt0b3A6MTA1cHg7cmlnaHQ6MTVweDt6LWluZGV4OjF9LmRyb3Bkb3duLmRyb3Bkb3duLXRhc2stbWVudXt3aWR0aDoxOTJweDtsZWZ0OjY1cHh9LmRyb3Bkb3duLmRyb3Bkb3duLXRhc2stbWVudSAudHJhc2gtaWNvbntsZWZ0OjBweDt0b3A6LTdweH0jZHJvcGRvd24taGVhZGVye2ZvbnQtc2l6ZTouOHJlbTtmb250LXdlaWdodDo0MDA7Y29sb3I6IzgwODY4YjttYXJnaW46OXB4IDAgNXB4IDIwcHg7Y3Vyc29yOmRlZmF1bHR9I2Ryb3Bkb3duLWhlYWRlcjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOndoaXRlfS5kcm9wZG93bi1lbGVtZW50e3BhZGRpbmc6OXB4IDIwcHggOXB4IDIwcHh9LmRyb3Bkb3duLWVsZW1lbnQud2l0aC1pY29ue3BhZGRpbmc6OXB4IDIwcHggOXB4IDQycHh9LmRyb3Bkb3duLWVsZW1lbnQud2l0aC1pY29uIC5jaGVjay1pY29ue3RvcDotN3B4O2xlZnQ6MXB4fS5kcm9wZG93bi1lbGVtZW50LndpdGgtaWNvbi5saXN0LXRleHQtdGVtcGxhdGV7ZGlzcGxheTpub25lfS5tb2RhbHtwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmZsZXg7anVzdGlmeS1jb250ZW50OmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7ei1pbmRleDoxO2xlZnQ6MDt0b3A6MDt3aWR0aDozMDBweDtoZWlnaHQ6MTAwdmg7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDAuNCl9Lm1vZGFsIC5tb2RhbC1jb250ZW50e2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47anVzdGlmeS1jb250ZW50OmNlbnRlcjtnYXA6MTVweDt3aWR0aDoyMDBweDtoZWlnaHQ6MTAwcHg7cGFkZGluZzoyMHB4O2JvcmRlci1yYWRpdXM6MTBweDtiYWNrZ3JvdW5kLWNvbG9yOndoaXRlfS5tb2RhbCAubW9kYWwtdGl0bGV7Zm9udC1zaXplOi45cmVtfS5tb2RhbCAubW9kYWwtYnV0dG9uc3tkaXNwbGF5OmZsZXg7Z2FwOjIwcHg7anVzdGlmeS1jb250ZW50OmVuZDtwYWRkaW5nOjVweCAxMHB4IDAgMH0ubW9kYWwgaW5wdXR7aGVpZ2h0OjEuN3JlbTtvdXRsaW5lOm5vbmU7Zm9udC1zaXplOi45cmVtO2ZvbnQtZmFtaWx5OmluaGVyaXQ7YmFja2dyb3VuZC1jb2xvcjojZjZmN2Y4O2JvcmRlcjojZWVlIDFweCBzb2xpZDtib3JkZXItYm90dG9tOjJweCBzb2xpZCAjMWE3M2U4O3BhZGRpbmctbGVmdDoxMHB4fS5oaWRkZW57ZGlzcGxheTpub25lfS5idXR0b257Zm9udC1zaXplOi45cmVtO2N1cnNvcjpwb2ludGVyfSNhZGQtbGlzdC1kb25lLWJ0biwjcmVuYW1lLWRvbmUtYnRue2NvbG9yOiMxYTczZTh9LndpdGgtaWNvbntkaXNwbGF5OmZsZXg7cG9zaXRpb246cmVsYXRpdmV9LmJyZWFrLWxpbmV7d2lkdGg6MjQzcHg7aGVpZ2h0OjA7Ym9yZGVyLXRvcDoxcHggc29saWQgI2M1YzVjNTttYXJnaW46OXB4IDAgOXB4IDB9LnRhc2staWNvbi1jb250YWluZXJ7cG9zaXRpb246cmVsYXRpdmU7aGVpZ2h0OjIwcHg7d2lkdGg6MjBweH0jYWRkLXRhc2staWNvbiwubW9yZS1pY29uLC5jaXJjbGUtaWNvbiwudHJhc2gtaWNvbiwucGx1cy1pY29ue3RyYW5zZm9ybTpzY2FsZSgwLjQpfS5jaGVjay1pY29ue3RyYW5zZm9ybTpzY2FsZSgwLjUpfS5tb3JlLWljb24sLnRyYXNoLWljb24sLmNoZWNrLWljb257ZmlsbDojNWY2MzY4fS5jaGVjay1pY29uLC50cmFzaC1pY29ue3Bvc2l0aW9uOmFic29sdXRlO3RvcDotMTVweH0uY2hlY2staWNvbi5oaWRkZW57ZGlzcGxheTpub25lfS5wbHVzLWljb257cG9zaXRpb246YWJzb2x1dGU7dG9wOi03cHg7bGVmdDowcHh9I2Fycm93LWRvd24taWNvbntmaWxsOiM1ZjYzNjg7dHJhbnNmb3JtOnNjYWxlKDAuNSk7bWFyZ2luOi05cHggMCAwIC0xMXB4fXN2ZyxpbWd7Y3Vyc29yOnBvaW50ZXJ9LnRhc2stZGF0ZS5oaWRkZW57ZGlzcGxheTpub25lfS5kcmFnb3Zlci10b3AtYm9yZGVye2JvcmRlci10b3A6IzVmNjM2OCBzb2xpZCAycHh9LmRyYWdvdmVyLWJvdHRvbS1ib3JkZXJ7Ym9yZGVyLWJvdHRvbTojNWY2MzY4IHNvbGlkIDJweH0jZ2l0aHViLWxpbmt7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjthbGlnbi1pdGVtczpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtnYXA6M3B4O3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbToxNHB4O3JpZ2h0OjE1cHg7Y29sb3I6IzVmNjM2ODtmb250LXNpemU6Ljg1cmVtfSNnaXRodWJ7aGVpZ2h0OjM1cHg7d2lkdGg6MzVweDtwYWRkaW5nLWJvdHRvbTowLjJ2aDt0cmFuc2l0aW9uOjAuMnM7ZmlsbDojZTBlMGUwfSNnaXRodWI6aG92ZXJ7dHJhbnNmb3JtOnNjYWxlKDEuMSl9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLnNjc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBc0JBLEtBQ0ksWUFBYSxDQUNiLHNCQUF1QixDQUN2QixrQkFBbUIsQ0FDbkIsUUFBUyxDQUNULFNBQVUsQ0FDVixXQUFZLENBQ1osWUFBYSxDQUNiLDZEQUE4RCxDQUM5RCxnQkFBaUIsQ0FDcEIsV0FHRyxZQUFhLENBQ2IscUNBQXVDLENBRXZDLGlCQUFrQixDQUNsQixXQUFZLENBQ1osWUFBYSxDQUNiLG9DQUFnRCxDQUNuRCxxQkFHRyxZQUFhLENBQ2IsMEJBQTJCLENBQzNCLFdBQVksQ0FDWixvQkFBcUIsQ0FKekIsa0NBT1EsdUJBQXdCLENBQ3hCLGNBQWUsQ0FDZixhQUFjLENBQ2QsZUFBZ0IsQ0FDaEIsZUFBZ0IsQ0FDaEIsb0JBQXFCLENBQ3JCLGtCQUFtQixDQWIzQixnQ0FpQlEsWUFBYSxDQUNiLHNCQUF1QixDQUN2Qix1QkFBd0IsQ0FDeEIsYUE5RFcsQ0ErRFgsZUFBZ0IsQ0FDaEIsa0JBQW1CLENBQ25CLGlCQUFrQixDQUNsQixlQUFnQixDQXhCeEIsdUNBMkJZLGNBQWUsQ0FDbEIsVUFLTCxZQUFhLENBQ2Isa0JBQW1CLENBQ25CLFdBQVksQ0FDWixlQUFnQixDQUNoQixhQTVFVSxDQTZFViw0QkFBNkIsQ0FDN0Isa0JBQW1CLENBUHZCLGlCQVVRLGNBQWUsQ0FWdkIsWUFjUSxjQUFlLENBZHZCLHlCQWtCUSxXQUFZLENBQ1osZUFBZ0IsQ0FuQnhCLHlCQXVCUSxZQTlGTSxDQXVFZCxxQkEyQlEsWUFyR1csQ0FzR2QsaUJBSUQsWUFBYSxDQUNiLDhCQUErQixDQUMvQiwwQkFBMkIsQ0FDM0IsK0JBQWdDLENB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a0IsQ0FDbEIsUUFBUyxDQUNULFFBQVMsQ0FDWixpQkFHRyxZQXpnQmUsQ0EwZ0JmLG9CQUFvQixDQUNwQixxQkFBc0IsQ0FDekIsUUFHRyxjQUFlLENBQ2xCLGtCQUdHLFlBQWEsQ0FDaEIscUJBR0csNEJBQWdDLENBQ25DLHdCQUdHLCtCQUFtQyxDQUN0QyxhQUdHLFlBQWEsQ0FDYixxQkFBc0IsQ0FDdEIsa0JBQW1CLENBQ25CLHNCQUF1QixDQUN2QixPQUFRLENBQ1IsaUJBQWtCLENBQ2xCLFdBQVksQ0FDWixVQUFXLENBQ1gsYUF2aUJlLENBd2lCZixnQkFBaUIsQ0FDcEIsUUFHRyxXQUFZLENBQ1osVUFBVyxDQUNYLG9CQUFxQixDQUNyQixlQUFnQixDQUNoQixZQWpqQmdCLENBa2pCbkIsY0FHRyxvQkFBcUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiJGRhcmstZm9udC1jb2xvcjogIzIwMjEyNDtcXG4kbGlnaHQtZ3JheTogI2UwZTBlMDtcXG4kZGFyay1ncmF5OiAjNWY2MzY4O1xcbiRmaW5pc2hlZC1ncmF5OiAjNzA3MDcwO1xcbiRob3Zlci1jb2xvcjogI2Y2ZjdmODtcXG4kYmx1ZTogIzFhNzNlODtcXG5cXG5AbWl4aW4gZGF0ZS1ub2ZvY3VzLXN0eWxlIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgbWluLWhlaWdodDogMjRweDtcXG4gICAgd2lkdGg6IDE1MHB4O1xcbiAgICBmb250LXNpemU6IC43N3JlbTtcXG4gICAgY29sb3I6ICRibHVlO1xcbiAgICBib3JkZXI6IHNvbGlkIDFweCAkbGlnaHQtZ3JheTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgbWFyZ2luOiA3cHggMCAwIDUycHg7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuYm9keSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgUm9ib3RvRHJhZnQsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xcbn1cXG5cXG4uY29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA2M3B4IDQwcHggMWZyIDQxcHggO1xcblxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgIHdpZHRoOiAzMDBweDtcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAyNXB4IC0zcHggcmdiKDE5NCwgMTk0LCAxOTQpO1xcbn1cXG5cXG4ubGlzdC1uYW1lLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjtcXG4gICAgaGVpZ2h0OiA2M3B4O1xcbiAgICBwYWRkaW5nOiAwIDZweCAwIDE2cHg7XFxuXFxuICAgICN0YXNrLWhlYWRlciB7XFxuICAgICAgICBncmlkLWFyZWE6IDEgLyAxIC8gMiAvIDI7XFxuICAgICAgICBhbGlnbi1zZWxmOiBlbmQ7XFxuICAgICAgICBjb2xvcjogIzgwODY4YjtcXG4gICAgICAgIGZvbnQtc2l6ZTogLjZyZW07XFxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuNXB4O1xcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDdweDtcXG4gICAgfVxcblxcbiAgICAjbGlzdC1uYW1lIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gICAgICAgIGdyaWQtYXJlYTogMiAvIDEgLyAzIC8gMjtcXG4gICAgICAgIGNvbG9yOiAkZGFyay1ncmF5O1xcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICAgICAgICBmb250LXNpemU6IDEuMDVyZW07XFxuICAgICAgICBtYXJnaW4tdG9wOiAtM3B4O1xcblxcbiAgICAgICAgOmhvdmVyIHtcXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgICAgICB9XFxuICAgIH1cXG59XFxuXFxuLmFkZC10YXNrIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiAzMnB4O1xcbiAgICBmb250LXNpemU6IC45cmVtO1xcbiAgICBjb2xvcjogJGJsdWU7XFxuICAgIGJvcmRlci10b3A6IHNvbGlkICNmMWYzZjQgMXB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcblxcbiAgICA6aG92ZXIge1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB9XFxuXFxuICAgID4gKiB7XFxuICAgICAgICBtYXJnaW4tdG9wOiA3cHg7XFxuICAgIH1cXG5cXG4gICAgI2FkZC10YXNrLXRleHQge1xcbiAgICAgICAgZmxleC1ncm93OiAxO1xcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDNweDtcXG4gICAgfVxcblxcbiAgICAjYWRkLXRhc2staWNvbiB7XFxuICAgICAgICBmaWxsOiAkYmx1ZTtcXG4gICAgfVxcblxcbiAgICAjbW9yZS1pY29uIHtcXG4gICAgICAgIGZpbGw6ICRkYXJrLWdyYXk7XFxuICAgIH1cXG59XFxuXFxuLnRhc2tzLWNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWluLWNvbnRlbnQ7XFxuICAgIGdyaWQtYXV0by1yb3dzOiBtaW4tY29udGVudDtcXG4gICAgYm9yZGVyLWJvdHRvbTogc29saWQgI2UwZTBlMCAxcHg7XFxuICAgIGZsZXgtZ3JvdzogMTtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuXFxuICAgIDpob3ZlciB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaG92ZXItY29sb3I7XFxuXFxuICAgICAgICAubW9yZS1pY29uIHtcXG4gICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xcbiAgICAgICAgfVxcbiAgICB9XFxufVxcblxcbi50YXNrIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgcGFkZGluZzogMTFweCAwIDVweCAwO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcblxcbiAgICAuY2hlY2staWNvbiB7XFxuICAgICAgICBkaXNwbGF5OiBub25lO1xcbiAgICB9XFxuXFxuICAgIC50YXNrLXZhbHVlLFxcbiAgICAuZGV0YWlscy12YWx1ZSB7XFxuICAgICAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgfVxcblxcbiAgICAudGFzay1tYWluIHtcXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG5cXG4gICAgICAgIC5jaXJjbGUtY29udGFpbmVyIHtcXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAgICAgICAgICAgd2lkdGg6IDQ2cHg7XFxuICAgICAgICAgICAgaGVpZ2h0OiAyMHB4O1xcbiAgICAgICAgfVxcblxcbiAgICAgICAgLmNpcmNsZS1jb250YWluZXI6aG92ZXIge1xcblxcbiAgICAgICAgICAgIC5jaXJjbGUtaWNvbiB7XFxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgICAgICAgICAgfVxcblxcbiAgICAgICAgICAgIC5jaGVjay1pY29uIHtcXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfVxcblxcbiAgICAgICAgLmNpcmNsZS1pY29uIHtcXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgICAgICAgICAgdG9wOiAtMTVweDtcXG4gICAgICAgIH1cXG5cXG4gICAgICAgIC5tb3JlLWljb24ge1xcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgICAgICAgICB0b3A6IC0xNHB4O1xcbiAgICAgICAgICAgIHJpZ2h0OiAtNDRweDtcXG4gICAgICAgIH0gXFxuXFxuICAgICAgICAudGFzay1jb250ZW50IHtcXG4gICAgICAgICAgICB3aWR0aDogMTcycHg7XFxuICAgICAgICAgICAgbWFyZ2luOiAwIDAgMCA2cHg7XFxuICAgICAgICAgICAgY29sb3I6ICRkYXJrLWZvbnQtY29sb3I7XFxuICAgICAgICAgICAgd29yZC13cmFwOiBicmVhay13b3JkO1xcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjg0cmVtO1xcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOiAuMDJyZW07XFxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuMXJlbTtcXG4gICAgICAgIH1cXG4gICAgfVxcblxcbiAgICAubW9yZS1pY29uIHtcXG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XFxuICAgICAgICBtYXJnaW4tcmlnaHQ6IC0xMnB4O1xcbiAgICB9XFxuXFxuICAgIC50YXNrLWRldGFpbHMge1xcbiAgICAgICAgbWFyZ2luOiAycHggMCAwIDUycHg7XFxuICAgICAgICBjb2xvcjogJGRhcmstZ3JheTtcXG4gICAgICAgIGZvbnQtc2l6ZTogLjczcmVtO1xcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAuMDJyZW07XFxuICAgICAgICBvdmVyZmxvdy13cmFwOiBhbnl3aGVyZTtcXG4gICAgICAgIHdpZHRoOiAxNDBweDsgICAgICBcXG4gICAgfVxcblxcbiAgICAudGFzay1kYXRlIHtcXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgIG1pbi1oZWlnaHQ6IDI0cHg7XFxuICAgICAgICB3aWR0aDogMTQwcHg7XFxuICAgICAgICBmb250LXNpemU6IC43N3JlbTtcXG4gICAgICAgIGNvbG9yOiAkYmx1ZTtcXG4gICAgICAgIGJvcmRlcjogc29saWQgMXB4ICRsaWdodC1ncmF5O1xcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcXG4gICAgICAgIG1hcmdpbjogN3B4IDAgMTBweCA1MnB4O1xcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB9XFxuXFxuICAgIC5kcmFnLWljb24ge1xcbiAgICAgICAgZGlzcGxheTogbm9uZTtcXG4gICAgfVxcbn1cXG5cXG4udGFzay10ZW1wbGF0ZSB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi50aW1lLXBpY2tlciB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgcmlnaHQ6IDEwcHg7XFxuICAgIGJvdHRvbTogLTdweDtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gICAgd2lkdGg6IDIwcHg7XFxufVxcblxcbnRleHRhcmVhIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnRhc2stY2xpY2tlZCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICRob3Zlci1jb2xvcjtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcblxcbiAgICAubW9yZS1pY29uIHtcXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICB9XFxuXFxuICAgIC50YXNrLXZhbHVlLFxcbiAgICAuZGV0YWlscy12YWx1ZSB7XFxuICAgICAgICBkaXNwbGF5OiBub25lO1xcbiAgICB9XFxuXFxuICAgIHRleHRhcmVhIHtcXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICAgICAgb3V0bGluZTogbm9uZTtcXG4gICAgICAgIGJvcmRlcjogMDtcXG4gICAgICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xcbiAgICAgICAgcmVzaXplOiBub25lO1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGhvdmVyLWNvbG9yO1xcbiAgICB9XFxuXFxuICAgIC50YXNrLWRldGFpbHMgdGV4dGFyZWEge1xcbiAgICAgICAgY29sb3I6ICRkYXJrLWdyYXk7XFxuICAgICAgICBmb250LXNpemU6IC43M3JlbTtcXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICAgICAgICBsZXR0ZXItc3BhY2luZzogLjAycmVtO1xcbiAgICB9XFxuXFxuICAgIC50YXNrLWRldGFpbHMge1xcbiAgICAgICAgbWFyZ2luLXRvcDogNnB4O1xcbiAgICB9XFxuXFxuICAgIC50YXNrLWRhdGUge1xcbiAgICAgICAgbWFyZ2luLXRvcDogOXB4O1xcbiAgICAgICAgYm9yZGVyOiBub25lO1xcbiAgICAgICAgY29sb3I6ICRkYXJrLWZvbnQtY29sb3I7XFxuICAgICAgICBmb250LXNpemU6IDAuNzNyZW07XFxuICAgICAgICBib3JkZXI6IHNvbGlkIDFweCAkbGlnaHQtZ3JheTtcXG5cXG4gICAgICAgICY6aG92ZXIge1xcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYyZjM7XFxuICAgICAgICB9XFxuICAgIH1cXG59XFxuXFxuLmNvbXBsZXRlZC1idXR0b24ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBoZWlnaHQ6IDQxcHg7XFxuICAgIHdpZHRoOiAzMDBweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcblxcbiAgICAuYXJyb3ctcmlnaHQtY29udGFpbmVyIHtcXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgICAgIGhlaWdodDogNDFweDtcXG4gICAgfVxcblxcbiAgICAjYXJyb3ctcmlnaHQge1xcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICAgICAgdG9wOiAtNHB4O1xcbiAgICAgICAgZmlsbDogJGZpbmlzaGVkLWdyYXk7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKC40NSk7XFxuICAgIH1cXG5cXG4gICAgI2NvbXBsZXRlZCB7XFxuICAgICAgICBjb2xvcjogJGZpbmlzaGVkLWdyYXk7XFxuICAgICAgICBtYXJnaW46IDAgMCAxcHggNDhweDtcXG4gICAgICAgIGZvbnQtc2l6ZTogLjlyZW07XFxuICAgICAgICBsZXR0ZXItc3BhY2luZzogLjAzcmVtO1xcbiAgICB9XFxufVxcblxcbi5jb21wbGV0ZWQtdGFzay10ZW1wbGF0ZSB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi5jb21wbGV0ZWQtbGlzdCB7XFxuICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIG1heC1oZWlnaHQ6IDA7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICB0cmFuc2l0aW9uOiBtYXgtaGVpZ2h0IDAuMnMgZWFzZS1vdXQ7XFxuICAgIG1hcmdpbi1ib3R0b206IDRweDtcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxuXFxuICAgIC5jaGVjay1pY29uIHtcXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICB9XFxuICAgIFxcbiAgICAudGFzay1kZXRhaWxzIHtcXG4gICAgICAgIG1hcmdpbi10b3A6IDBweDtcXG4gICAgfVxcblxcbiAgICA6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGhvdmVyLWNvbG9yO1xcbiAgICB9XFxuXFxuICAgIC50cmFzaC1pY29uIHtcXG4gICAgICAgIHJpZ2h0OiAtNTVweDtcXG4gICAgfVxcbn1cXG5cXG4uZHJvcGRvd24ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgICBtYXgtaGVpZ2h0OiAwO1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIHBhZGRpbmc6IDlweCAwIDlweCAwO1xcbiAgICB3aWR0aDogMjQzcHg7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gICAgZm9udC1zaXplOiAuODdyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XFxuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4zNSkgMHB4IDVweCAxMHB4O1xcbiAgICBjb2xvcjogJGRhcmstZm9udC1jb2xvcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgMC4ycyBlYXNlLW91dDtcXG4gICAgb3ZlcmZsb3cteDogY2xpcDtcXG4gICAgb3ZlcmZsb3cteTogYXV0bztcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcblxcbiAgICA6aG92ZXIge1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGhvdmVyLWNvbG9yO1xcbiAgICB9XFxufVxcblxcbi5kcm9wZG93bi5kcm9wZG93bi10YXNrLWxpc3Qge1xcbiAgICB0b3A6IDYycHg7XFxufVxcblxcbi5kcm9wZG93bi5kcm9wZG93bi1tZW51IHtcXG4gICAgdG9wOiAxMDVweDtcXG4gICAgcmlnaHQ6IDE1cHg7XFxuICAgIHotaW5kZXg6IDE7XFxufVxcblxcbi5kcm9wZG93bi5kcm9wZG93bi10YXNrLW1lbnUge1xcbiAgICB3aWR0aDogMTkycHg7XFxuICAgIGxlZnQ6IDY1cHg7XFxuXFxuICAgIC50cmFzaC1pY29uIHtcXG4gICAgICAgIGxlZnQ6IDBweDtcXG4gICAgICAgIHRvcDogLTdweDtcXG4gICAgfVxcbn1cXG5cXG4jZHJvcGRvd24taGVhZGVyIHtcXG4gICAgZm9udC1zaXplOiAuOHJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gICAgY29sb3I6ICM4MDg2OGI7XFxuICAgIG1hcmdpbjogOXB4IDAgNXB4IDIwcHg7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG5cXG4gICAgJjpob3ZlciB7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gICAgfVxcbn1cXG5cXG4uZHJvcGRvd24tZWxlbWVudCB7XFxuICAgIHBhZGRpbmc6IDlweCAyMHB4IDlweCAyMHB4O1xcbn1cXG5cXG4uZHJvcGRvd24tZWxlbWVudC53aXRoLWljb24ge1xcbiAgICBwYWRkaW5nOiA5cHggMjBweCA5cHggNDJweDtcXG5cXG4gICAgLmNoZWNrLWljb24ge1xcbiAgICAgICAgdG9wOiAtN3B4O1xcbiAgICAgICAgbGVmdDogMXB4O1xcbiAgICB9XFxuXFxuICAgICYubGlzdC10ZXh0LXRlbXBsYXRlIHtcXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XFxuICAgIH1cXG59XFxuXFxuLm1vZGFsIHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgei1pbmRleDogMTtcXG4gICAgbGVmdDogMDtcXG4gICAgdG9wOiAwO1xcbiAgICB3aWR0aDogMzAwcHg7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC40KTsgLyogQmxhY2sgdy8gb3BhY2l0eSAqL1xcblxcbiAgICAubW9kYWwtY29udGVudCB7XFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICAgICAgZ2FwOiAxNXB4O1xcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcXG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICAgIH1cXG5cXG4gICAgLm1vZGFsLXRpdGxlIHtcXG4gICAgICAgIGZvbnQtc2l6ZTogLjlyZW07XFxuICAgIH1cXG5cXG4gICAgLm1vZGFsLWJ1dHRvbnMge1xcbiAgICAgICAgZGlzcGxheTogZmxleDtcXG4gICAgICAgIGdhcDogMjBweDtcXG4gICAgICAgIGp1c3RpZnktY29udGVudDogZW5kO1xcbiAgICAgICAgcGFkZGluZzogNXB4IDEwcHggMCAwO1xcbiAgICB9XFxuXFxuICAgIGlucHV0IHtcXG4gICAgICAgIGhlaWdodDogMS43cmVtO1xcbiAgICAgICAgb3V0bGluZTogbm9uZTtcXG4gICAgICAgIGZvbnQtc2l6ZTogLjlyZW07XFxuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRob3Zlci1jb2xvcjtcXG4gICAgICAgIGJvcmRlcjogcmdiKDIzOCwgMjM4LCAyMzgpIDFweCBzb2xpZDtcXG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYmx1ZTtcXG4gICAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcXG4gICAgfVxcbn1cXG5cXG4uaGlkZGVuIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmJ1dHRvbiB7XFxuICAgIGZvbnQtc2l6ZTogLjlyZW07XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuI2FkZC1saXN0LWRvbmUtYnRuLFxcbiNyZW5hbWUtZG9uZS1idG4ge1xcbiAgICBjb2xvcjogJGJsdWU7XFxufVxcblxcbi53aXRoLWljb24ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcblxcbi5icmVhay1saW5lIHtcXG4gICAgd2lkdGg6IDI0M3B4O1xcbiAgICBoZWlnaHQ6IDA7XFxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2IoMTk3LCAxOTcsIDE5Nyk7XFxuICAgIG1hcmdpbjogOXB4IDAgOXB4IDA7XFxufVxcblxcbi50YXNrLWljb24tY29udGFpbmVyIHtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBoZWlnaHQ6IDIwcHg7XFxuICAgIHdpZHRoOiAyMHB4O1xcbn1cXG5cXG4jYWRkLXRhc2staWNvbiwgXFxuLm1vcmUtaWNvbiwgXFxuLmNpcmNsZS1pY29uLCBcXG4udHJhc2gtaWNvbixcXG4ucGx1cy1pY29uIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSguNCk7XFxufVxcblxcbi5jaGVjay1pY29uIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSguNSk7XFxufVxcblxcbi5tb3JlLWljb24sXFxuLnRyYXNoLWljb24sXFxuLmNoZWNrLWljb24ge1xcbiAgICBmaWxsOiAkZGFyay1ncmF5O1xcbn1cXG5cXG4uY2hlY2staWNvbixcXG4udHJhc2gtaWNvbiB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAtMTVweDtcXG59XFxuXFxuLmNoZWNrLWljb24uaGlkZGVuIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLnBsdXMtaWNvbiB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiAtN3B4O1xcbiAgICBsZWZ0OiAwcHg7XFxufVxcblxcbiNhcnJvdy1kb3duLWljb24ge1xcbiAgICBmaWxsOiAkZGFyay1ncmF5O1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKC41KTtcXG4gICAgbWFyZ2luOiAtOXB4IDAgMCAtMTFweDtcXG59XFxuXFxuc3ZnLCBpbWcge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi50YXNrLWRhdGUuaGlkZGVuIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLmRyYWdvdmVyLXRvcC1ib3JkZXIge1xcbiAgICBib3JkZXItdG9wOiAkZGFyay1ncmF5IHNvbGlkIDJweDtcXG59XFxuXFxuLmRyYWdvdmVyLWJvdHRvbS1ib3JkZXIge1xcbiAgICBib3JkZXItYm90dG9tOiAkZGFyay1ncmF5IHNvbGlkIDJweDtcXG59XFxuXFxuI2dpdGh1Yi1saW5rIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogM3B4O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGJvdHRvbTogMTRweDtcXG4gICAgcmlnaHQ6IDE1cHg7XFxuICAgIGNvbG9yOiAkZGFyay1ncmF5O1xcbiAgICBmb250LXNpemU6IC44NXJlbTtcXG59XFxuXFxuI2dpdGh1YiB7XFxuICAgIGhlaWdodDogMzVweDtcXG4gICAgd2lkdGg6IDM1cHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAwLjJ2aDtcXG4gICAgdHJhbnNpdGlvbjogMC4ycztcXG4gICAgZmlsbDogJGxpZ2h0LWdyYXk7XFxufVxcblxcbiNnaXRodWI6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIi8qKlxuICogRGF5cyBpbiAxIHdlZWsuXG4gKlxuICogQG5hbWUgZGF5c0luV2Vla1xuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuZXhwb3J0IHZhciBkYXlzSW5XZWVrID0gNztcbi8qKlxuICogRGF5cyBpbiAxIHllYXJcbiAqIE9uZSB5ZWFycyBlcXVhbHMgMzY1LjI0MjUgZGF5cyBhY2NvcmRpbmcgdG8gdGhlIGZvcm11bGE6XG4gKlxuICogPiBMZWFwIHllYXIgb2NjdXJlcyBldmVyeSA0IHllYXJzLCBleGNlcHQgZm9yIHllYXJzIHRoYXQgYXJlIGRpdmlzYWJsZSBieSAxMDAgYW5kIG5vdCBkaXZpc2FibGUgYnkgNDAwLlxuICogPiAxIG1lYW4geWVhciA9ICgzNjUrMS80LTEvMTAwKzEvNDAwKSBkYXlzID0gMzY1LjI0MjUgZGF5c1xuICpcbiAqIEBuYW1lIGRheXNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBkYXlzSW5ZZWFyID0gMzY1LjI0MjU7XG4vKipcbiAqIE1heGltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBuYW1lIG1heFRpbWVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtYXhUaW1lID0gTWF0aC5wb3coMTAsIDgpICogMjQgKiA2MCAqIDYwICogMTAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgbWludXRlXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5NaW51dGVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDYwMDAwO1xuLyoqXG4gKiBNaWxsaXNlY29uZHMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5Ib3VyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWlsbGlzZWNvbmRzSW5Ib3VyID0gMzYwMDAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgc2Vjb25kXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5TZWNvbmRcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaWxsaXNlY29uZHNJblNlY29uZCA9IDEwMDA7XG4vKipcbiAqIE1pbmltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBuYW1lIG1pblRpbWVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaW5UaW1lID0gLW1heFRpbWU7XG4vKipcbiAqIE1pbnV0ZXMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgbWludXRlc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1pbnV0ZXNJbkhvdXIgPSA2MDtcbi8qKlxuICogTW9udGhzIGluIDEgcXVhcnRlclxuICpcbiAqIEBuYW1lIG1vbnRoc0luUXVhcnRlclxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1vbnRoc0luUXVhcnRlciA9IDM7XG4vKipcbiAqIE1vbnRocyBpbiAxIHllYXJcbiAqXG4gKiBAbmFtZSBtb250aHNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtb250aHNJblllYXIgPSAxMjtcbi8qKlxuICogUXVhcnRlcnMgaW4gMSB5ZWFyXG4gKlxuICogQG5hbWUgcXVhcnRlcnNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBxdWFydGVyc0luWWVhciA9IDQ7XG4vKipcbiAqIFNlY29uZHMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgc2Vjb25kc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIHNlY29uZHNJbkhvdXIgPSAzNjAwO1xuLyoqXG4gKiBTZWNvbmRzIGluIDEgbWludXRlXG4gKlxuICogQG5hbWUgc2Vjb25kc0luTWludXRlXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgc2Vjb25kc0luTWludXRlID0gNjA7XG4vKipcbiAqIFNlY29uZHMgaW4gMSBkYXlcbiAqXG4gKiBAbmFtZSBzZWNvbmRzSW5EYXlcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5EYXkgPSBzZWNvbmRzSW5Ib3VyICogMjQ7XG4vKipcbiAqIFNlY29uZHMgaW4gMSB3ZWVrXG4gKlxuICogQG5hbWUgc2Vjb25kc0luV2Vla1xuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIHNlY29uZHNJbldlZWsgPSBzZWNvbmRzSW5EYXkgKiA3O1xuLyoqXG4gKiBTZWNvbmRzIGluIDEgeWVhclxuICpcbiAqIEBuYW1lIHNlY29uZHNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5ZZWFyID0gc2Vjb25kc0luRGF5ICogZGF5c0luWWVhcjtcbi8qKlxuICogU2Vjb25kcyBpbiAxIG1vbnRoXG4gKlxuICogQG5hbWUgc2Vjb25kc0luTW9udGhcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBzZWNvbmRzSW5Nb250aCA9IHNlY29uZHNJblllYXIgLyAxMjtcbi8qKlxuICogU2Vjb25kcyBpbiAxIHF1YXJ0ZXJcbiAqXG4gKiBAbmFtZSBzZWNvbmRzSW5RdWFydGVyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgc2Vjb25kc0luUXVhcnRlciA9IHNlY29uZHNJbk1vbnRoICogMzsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1aXJlZEFyZ3MocmVxdWlyZWQsIGFyZ3MpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoIDwgcmVxdWlyZWQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHJlcXVpcmVkICsgJyBhcmd1bWVudCcgKyAocmVxdWlyZWQgPiAxID8gJ3MnIDogJycpICsgJyByZXF1aXJlZCwgYnV0IG9ubHkgJyArIGFyZ3MubGVuZ3RoICsgJyBwcmVzZW50Jyk7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b0ludGVnZXIoZGlydHlOdW1iZXIpIHtcbiAgaWYgKGRpcnR5TnVtYmVyID09PSBudWxsIHx8IGRpcnR5TnVtYmVyID09PSB0cnVlIHx8IGRpcnR5TnVtYmVyID09PSBmYWxzZSkge1xuICAgIHJldHVybiBOYU47XG4gIH1cblxuICB2YXIgbnVtYmVyID0gTnVtYmVyKGRpcnR5TnVtYmVyKTtcblxuICBpZiAoaXNOYU4obnVtYmVyKSkge1xuICAgIHJldHVybiBudW1iZXI7XG4gIH1cblxuICByZXR1cm4gbnVtYmVyIDwgMCA/IE1hdGguY2VpbChudW1iZXIpIDogTWF0aC5mbG9vcihudW1iZXIpO1xufSIsImltcG9ydCB7IG1pbGxpc2Vjb25kc0luSG91ciwgbWlsbGlzZWNvbmRzSW5NaW51dGUgfSBmcm9tIFwiLi4vY29uc3RhbnRzL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuaW1wb3J0IHRvSW50ZWdlciBmcm9tIFwiLi4vX2xpYi90b0ludGVnZXIvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgcGFyc2VJU09cbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgUGFyc2UgSVNPIHN0cmluZ1xuICpcbiAqIEBkZXNjcmlwdGlvblxuICogUGFyc2UgdGhlIGdpdmVuIHN0cmluZyBpbiBJU08gODYwMSBmb3JtYXQgYW5kIHJldHVybiBhbiBpbnN0YW5jZSBvZiBEYXRlLlxuICpcbiAqIEZ1bmN0aW9uIGFjY2VwdHMgY29tcGxldGUgSVNPIDg2MDEgZm9ybWF0cyBhcyB3ZWxsIGFzIHBhcnRpYWwgaW1wbGVtZW50YXRpb25zLlxuICogSVNPIDg2MDE6IGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSVNPXzg2MDFcbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXNuJ3QgYSBzdHJpbmcsIHRoZSBmdW5jdGlvbiBjYW5ub3QgcGFyc2UgdGhlIHN0cmluZyBvclxuICogdGhlIHZhbHVlcyBhcmUgaW52YWxpZCwgaXQgcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGFyZ3VtZW50IC0gdGhlIHZhbHVlIHRvIGNvbnZlcnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gLSBhbiBvYmplY3Qgd2l0aCBvcHRpb25zLlxuICogQHBhcmFtIHswfDF8Mn0gW29wdGlvbnMuYWRkaXRpb25hbERpZ2l0cz0yXSAtIHRoZSBhZGRpdGlvbmFsIG51bWJlciBvZiBkaWdpdHMgaW4gdGhlIGV4dGVuZGVkIHllYXIgZm9ybWF0XG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIHBhcnNlZCBkYXRlIGluIHRoZSBsb2NhbCB0aW1lIHpvbmVcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYG9wdGlvbnMuYWRkaXRpb25hbERpZ2l0c2AgbXVzdCBiZSAwLCAxIG9yIDJcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCBzdHJpbmcgJzIwMTQtMDItMTFUMTE6MzA6MzAnIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSBwYXJzZUlTTygnMjAxNC0wMi0xMVQxMTozMDozMCcpXG4gKiAvLz0+IFR1ZSBGZWIgMTEgMjAxNCAxMTozMDozMFxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb252ZXJ0IHN0cmluZyAnKzAyMDE0MTAxJyB0byBkYXRlLFxuICogLy8gaWYgdGhlIGFkZGl0aW9uYWwgbnVtYmVyIG9mIGRpZ2l0cyBpbiB0aGUgZXh0ZW5kZWQgeWVhciBmb3JtYXQgaXMgMTpcbiAqIGNvbnN0IHJlc3VsdCA9IHBhcnNlSVNPKCcrMDIwMTQxMDEnLCB7IGFkZGl0aW9uYWxEaWdpdHM6IDEgfSlcbiAqIC8vPT4gRnJpIEFwciAxMSAyMDE0IDAwOjAwOjAwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VJU08oYXJndW1lbnQsIG9wdGlvbnMpIHtcbiAgdmFyIF9vcHRpb25zJGFkZGl0aW9uYWxEaTtcblxuICByZXF1aXJlZEFyZ3MoMSwgYXJndW1lbnRzKTtcbiAgdmFyIGFkZGl0aW9uYWxEaWdpdHMgPSB0b0ludGVnZXIoKF9vcHRpb25zJGFkZGl0aW9uYWxEaSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hZGRpdGlvbmFsRGlnaXRzKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyRhZGRpdGlvbmFsRGkgIT09IHZvaWQgMCA/IF9vcHRpb25zJGFkZGl0aW9uYWxEaSA6IDIpO1xuXG4gIGlmIChhZGRpdGlvbmFsRGlnaXRzICE9PSAyICYmIGFkZGl0aW9uYWxEaWdpdHMgIT09IDEgJiYgYWRkaXRpb25hbERpZ2l0cyAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdhZGRpdGlvbmFsRGlnaXRzIG11c3QgYmUgMCwgMSBvciAyJyk7XG4gIH1cblxuICBpZiAoISh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudCkgPT09ICdbb2JqZWN0IFN0cmluZ10nKSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgdmFyIGRhdGVTdHJpbmdzID0gc3BsaXREYXRlU3RyaW5nKGFyZ3VtZW50KTtcbiAgdmFyIGRhdGU7XG5cbiAgaWYgKGRhdGVTdHJpbmdzLmRhdGUpIHtcbiAgICB2YXIgcGFyc2VZZWFyUmVzdWx0ID0gcGFyc2VZZWFyKGRhdGVTdHJpbmdzLmRhdGUsIGFkZGl0aW9uYWxEaWdpdHMpO1xuICAgIGRhdGUgPSBwYXJzZURhdGUocGFyc2VZZWFyUmVzdWx0LnJlc3REYXRlU3RyaW5nLCBwYXJzZVllYXJSZXN1bHQueWVhcik7XG4gIH1cblxuICBpZiAoIWRhdGUgfHwgaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIH1cblxuICB2YXIgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gIHZhciB0aW1lID0gMDtcbiAgdmFyIG9mZnNldDtcblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZSkge1xuICAgIHRpbWUgPSBwYXJzZVRpbWUoZGF0ZVN0cmluZ3MudGltZSk7XG5cbiAgICBpZiAoaXNOYU4odGltZSkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkYXRlU3RyaW5ncy50aW1lem9uZSkge1xuICAgIG9mZnNldCA9IHBhcnNlVGltZXpvbmUoZGF0ZVN0cmluZ3MudGltZXpvbmUpO1xuXG4gICAgaWYgKGlzTmFOKG9mZnNldCkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgZGlydHlEYXRlID0gbmV3IERhdGUodGltZXN0YW1wICsgdGltZSk7IC8vIGpzIHBhcnNlZCBzdHJpbmcgYXNzdW1pbmcgaXQncyBpbiBVVEMgdGltZXpvbmVcbiAgICAvLyBidXQgd2UgbmVlZCBpdCB0byBiZSBwYXJzZWQgaW4gb3VyIHRpbWV6b25lXG4gICAgLy8gc28gd2UgdXNlIHV0YyB2YWx1ZXMgdG8gYnVpbGQgZGF0ZSBpbiBvdXIgdGltZXpvbmUuXG4gICAgLy8gWWVhciB2YWx1ZXMgZnJvbSAwIHRvIDk5IG1hcCB0byB0aGUgeWVhcnMgMTkwMCB0byAxOTk5XG4gICAgLy8gc28gc2V0IHllYXIgZXhwbGljaXRseSB3aXRoIHNldEZ1bGxZZWFyLlxuXG4gICAgdmFyIHJlc3VsdCA9IG5ldyBEYXRlKDApO1xuICAgIHJlc3VsdC5zZXRGdWxsWWVhcihkaXJ0eURhdGUuZ2V0VVRDRnVsbFllYXIoKSwgZGlydHlEYXRlLmdldFVUQ01vbnRoKCksIGRpcnR5RGF0ZS5nZXRVVENEYXRlKCkpO1xuICAgIHJlc3VsdC5zZXRIb3VycyhkaXJ0eURhdGUuZ2V0VVRDSG91cnMoKSwgZGlydHlEYXRlLmdldFVUQ01pbnV0ZXMoKSwgZGlydHlEYXRlLmdldFVUQ1NlY29uZHMoKSwgZGlydHlEYXRlLmdldFVUQ01pbGxpc2Vjb25kcygpKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlKHRpbWVzdGFtcCArIHRpbWUgKyBvZmZzZXQpO1xufVxudmFyIHBhdHRlcm5zID0ge1xuICBkYXRlVGltZURlbGltaXRlcjogL1tUIF0vLFxuICB0aW1lWm9uZURlbGltaXRlcjogL1taIF0vaSxcbiAgdGltZXpvbmU6IC8oW1orLV0uKikkL1xufTtcbnZhciBkYXRlUmVnZXggPSAvXi0/KD86KFxcZHszfSl8KFxcZHsyfSkoPzotPyhcXGR7Mn0pKT98VyhcXGR7Mn0pKD86LT8oXFxkezF9KSk/fCkkLztcbnZhciB0aW1lUmVnZXggPSAvXihcXGR7Mn0oPzpbLixdXFxkKik/KSg/Ojo/KFxcZHsyfSg/OlsuLF1cXGQqKT8pKT8oPzo6PyhcXGR7Mn0oPzpbLixdXFxkKik/KSk/JC87XG52YXIgdGltZXpvbmVSZWdleCA9IC9eKFsrLV0pKFxcZHsyfSkoPzo6PyhcXGR7Mn0pKT8kLztcblxuZnVuY3Rpb24gc3BsaXREYXRlU3RyaW5nKGRhdGVTdHJpbmcpIHtcbiAgdmFyIGRhdGVTdHJpbmdzID0ge307XG4gIHZhciBhcnJheSA9IGRhdGVTdHJpbmcuc3BsaXQocGF0dGVybnMuZGF0ZVRpbWVEZWxpbWl0ZXIpO1xuICB2YXIgdGltZVN0cmluZzsgLy8gVGhlIHJlZ2V4IG1hdGNoIHNob3VsZCBvbmx5IHJldHVybiBhdCBtYXhpbXVtIHR3byBhcnJheSBlbGVtZW50cy5cbiAgLy8gW2RhdGVdLCBbdGltZV0sIG9yIFtkYXRlLCB0aW1lXS5cblxuICBpZiAoYXJyYXkubGVuZ3RoID4gMikge1xuICAgIHJldHVybiBkYXRlU3RyaW5ncztcbiAgfVxuXG4gIGlmICgvOi8udGVzdChhcnJheVswXSkpIHtcbiAgICB0aW1lU3RyaW5nID0gYXJyYXlbMF07XG4gIH0gZWxzZSB7XG4gICAgZGF0ZVN0cmluZ3MuZGF0ZSA9IGFycmF5WzBdO1xuICAgIHRpbWVTdHJpbmcgPSBhcnJheVsxXTtcblxuICAgIGlmIChwYXR0ZXJucy50aW1lWm9uZURlbGltaXRlci50ZXN0KGRhdGVTdHJpbmdzLmRhdGUpKSB7XG4gICAgICBkYXRlU3RyaW5ncy5kYXRlID0gZGF0ZVN0cmluZy5zcGxpdChwYXR0ZXJucy50aW1lWm9uZURlbGltaXRlcilbMF07XG4gICAgICB0aW1lU3RyaW5nID0gZGF0ZVN0cmluZy5zdWJzdHIoZGF0ZVN0cmluZ3MuZGF0ZS5sZW5ndGgsIGRhdGVTdHJpbmcubGVuZ3RoKTtcbiAgICB9XG4gIH1cblxuICBpZiAodGltZVN0cmluZykge1xuICAgIHZhciB0b2tlbiA9IHBhdHRlcm5zLnRpbWV6b25lLmV4ZWModGltZVN0cmluZyk7XG5cbiAgICBpZiAodG9rZW4pIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nLnJlcGxhY2UodG9rZW5bMV0sICcnKTtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWV6b25lID0gdG9rZW5bMV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYXRlU3RyaW5ncztcbn1cblxuZnVuY3Rpb24gcGFyc2VZZWFyKGRhdGVTdHJpbmcsIGFkZGl0aW9uYWxEaWdpdHMpIHtcbiAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCgnXig/OihcXFxcZHs0fXxbKy1dXFxcXGR7JyArICg0ICsgYWRkaXRpb25hbERpZ2l0cykgKyAnfSl8KFxcXFxkezJ9fFsrLV1cXFxcZHsnICsgKDIgKyBhZGRpdGlvbmFsRGlnaXRzKSArICd9KSQpJyk7XG4gIHZhciBjYXB0dXJlcyA9IGRhdGVTdHJpbmcubWF0Y2gocmVnZXgpOyAvLyBJbnZhbGlkIElTTy1mb3JtYXR0ZWQgeWVhclxuXG4gIGlmICghY2FwdHVyZXMpIHJldHVybiB7XG4gICAgeWVhcjogTmFOLFxuICAgIHJlc3REYXRlU3RyaW5nOiAnJ1xuICB9O1xuICB2YXIgeWVhciA9IGNhcHR1cmVzWzFdID8gcGFyc2VJbnQoY2FwdHVyZXNbMV0pIDogbnVsbDtcbiAgdmFyIGNlbnR1cnkgPSBjYXB0dXJlc1syXSA/IHBhcnNlSW50KGNhcHR1cmVzWzJdKSA6IG51bGw7IC8vIGVpdGhlciB5ZWFyIG9yIGNlbnR1cnkgaXMgbnVsbCwgbm90IGJvdGhcblxuICByZXR1cm4ge1xuICAgIHllYXI6IGNlbnR1cnkgPT09IG51bGwgPyB5ZWFyIDogY2VudHVyeSAqIDEwMCxcbiAgICByZXN0RGF0ZVN0cmluZzogZGF0ZVN0cmluZy5zbGljZSgoY2FwdHVyZXNbMV0gfHwgY2FwdHVyZXNbMl0pLmxlbmd0aClcbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VEYXRlKGRhdGVTdHJpbmcsIHllYXIpIHtcbiAgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHllYXJcbiAgaWYgKHllYXIgPT09IG51bGwpIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB2YXIgY2FwdHVyZXMgPSBkYXRlU3RyaW5nLm1hdGNoKGRhdGVSZWdleCk7IC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCBzdHJpbmdcblxuICBpZiAoIWNhcHR1cmVzKSByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgdmFyIGlzV2Vla0RhdGUgPSAhIWNhcHR1cmVzWzRdO1xuICB2YXIgZGF5T2ZZZWFyID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1sxXSk7XG4gIHZhciBtb250aCA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMl0pIC0gMTtcbiAgdmFyIGRheSA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbM10pO1xuICB2YXIgd2VlayA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbNF0pO1xuICB2YXIgZGF5T2ZXZWVrID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1s1XSkgLSAxO1xuXG4gIGlmIChpc1dlZWtEYXRlKSB7XG4gICAgaWYgKCF2YWxpZGF0ZVdlZWtEYXRlKHllYXIsIHdlZWssIGRheU9mV2VlaykpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cblxuICAgIHJldHVybiBkYXlPZklTT1dlZWtZZWFyKHllYXIsIHdlZWssIGRheU9mV2Vlayk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKTtcblxuICAgIGlmICghdmFsaWRhdGVEYXRlKHllYXIsIG1vbnRoLCBkYXkpIHx8ICF2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgfVxuXG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcih5ZWFyLCBtb250aCwgTWF0aC5tYXgoZGF5T2ZZZWFyLCBkYXkpKTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwYXJzZURhdGVVbml0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA/IHBhcnNlSW50KHZhbHVlKSA6IDE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZSh0aW1lU3RyaW5nKSB7XG4gIHZhciBjYXB0dXJlcyA9IHRpbWVTdHJpbmcubWF0Y2godGltZVJlZ2V4KTtcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIE5hTjsgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHRpbWVcblxuICB2YXIgaG91cnMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzFdKTtcbiAgdmFyIG1pbnV0ZXMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzJdKTtcbiAgdmFyIHNlY29uZHMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzNdKTtcblxuICBpZiAoIXZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgcmV0dXJuIGhvdXJzICogbWlsbGlzZWNvbmRzSW5Ib3VyICsgbWludXRlcyAqIG1pbGxpc2Vjb25kc0luTWludXRlICsgc2Vjb25kcyAqIDEwMDA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZVVuaXQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHBhcnNlRmxvYXQodmFsdWUucmVwbGFjZSgnLCcsICcuJykpIHx8IDA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZXpvbmUodGltZXpvbmVTdHJpbmcpIHtcbiAgaWYgKHRpbWV6b25lU3RyaW5nID09PSAnWicpIHJldHVybiAwO1xuICB2YXIgY2FwdHVyZXMgPSB0aW1lem9uZVN0cmluZy5tYXRjaCh0aW1lem9uZVJlZ2V4KTtcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIDA7XG4gIHZhciBzaWduID0gY2FwdHVyZXNbMV0gPT09ICcrJyA/IC0xIDogMTtcbiAgdmFyIGhvdXJzID0gcGFyc2VJbnQoY2FwdHVyZXNbMl0pO1xuICB2YXIgbWludXRlcyA9IGNhcHR1cmVzWzNdICYmIHBhcnNlSW50KGNhcHR1cmVzWzNdKSB8fCAwO1xuXG4gIGlmICghdmFsaWRhdGVUaW1lem9uZShob3VycywgbWludXRlcykpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgcmV0dXJuIHNpZ24gKiAoaG91cnMgKiBtaWxsaXNlY29uZHNJbkhvdXIgKyBtaW51dGVzICogbWlsbGlzZWNvbmRzSW5NaW51dGUpO1xufVxuXG5mdW5jdGlvbiBkYXlPZklTT1dlZWtZZWFyKGlzb1dlZWtZZWFyLCB3ZWVrLCBkYXkpIHtcbiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihpc29XZWVrWWVhciwgMCwgNCk7XG4gIHZhciBmb3VydGhPZkphbnVhcnlEYXkgPSBkYXRlLmdldFVUQ0RheSgpIHx8IDc7XG4gIHZhciBkaWZmID0gKHdlZWsgLSAxKSAqIDcgKyBkYXkgKyAxIC0gZm91cnRoT2ZKYW51YXJ5RGF5O1xuICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBkaWZmKTtcbiAgcmV0dXJuIGRhdGU7XG59IC8vIFZhbGlkYXRpb24gZnVuY3Rpb25zXG4vLyBGZWJydWFyeSBpcyBudWxsIHRvIGhhbmRsZSB0aGUgbGVhcCB5ZWFyICh1c2luZyB8fClcblxuXG52YXIgZGF5c0luTW9udGhzID0gWzMxLCBudWxsLCAzMSwgMzAsIDMxLCAzMCwgMzEsIDMxLCAzMCwgMzEsIDMwLCAzMV07XG5cbmZ1bmN0aW9uIGlzTGVhcFllYXJJbmRleCh5ZWFyKSB7XG4gIHJldHVybiB5ZWFyICUgNDAwID09PSAwIHx8IHllYXIgJSA0ID09PSAwICYmIHllYXIgJSAxMDAgIT09IDA7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRGF0ZSh5ZWFyLCBtb250aCwgZGF0ZSkge1xuICByZXR1cm4gbW9udGggPj0gMCAmJiBtb250aCA8PSAxMSAmJiBkYXRlID49IDEgJiYgZGF0ZSA8PSAoZGF5c0luTW9udGhzW21vbnRoXSB8fCAoaXNMZWFwWWVhckluZGV4KHllYXIpID8gMjkgOiAyOCkpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSB7XG4gIHJldHVybiBkYXlPZlllYXIgPj0gMSAmJiBkYXlPZlllYXIgPD0gKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDM2NiA6IDM2NSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlV2Vla0RhdGUoX3llYXIsIHdlZWssIGRheSkge1xuICByZXR1cm4gd2VlayA+PSAxICYmIHdlZWsgPD0gNTMgJiYgZGF5ID49IDAgJiYgZGF5IDw9IDY7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICBpZiAoaG91cnMgPT09IDI0KSB7XG4gICAgcmV0dXJuIG1pbnV0ZXMgPT09IDAgJiYgc2Vjb25kcyA9PT0gMDtcbiAgfVxuXG4gIHJldHVybiBzZWNvbmRzID49IDAgJiYgc2Vjb25kcyA8IDYwICYmIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDwgNjAgJiYgaG91cnMgPj0gMCAmJiBob3VycyA8IDI1O1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZVRpbWV6b25lKF9ob3VycywgbWludXRlcykge1xuICByZXR1cm4gbWludXRlcyA+PSAwICYmIG1pbnV0ZXMgPD0gNTk7XG59IiwiaW1wb3J0IHsgc2VsZWN0TmV3VGFzaywgcmVuZGVyVGFza0xpc3RzLCByZW5kZXJUYXNrcywgc2V0U29ydENoZWNrSWNvbiwgdXBkYXRlVGFza3NPcmRlciB9IGZyb20gJy4vRE9NbWFuaXB1bGF0aW9uJztcblxuLy8gTG9jYWwgc3RvcmFnZVxubGV0IGxvY2FsU3RvcmFnZVdvcmtzO1xuaWYgKHN0b3JhZ2VBdmFpbGFibGUoJ2xvY2FsU3RvcmFnZScpKSB7XG4gICAgbG9jYWxTdG9yYWdlV29ya3MgPSB0cnVlO1xuICB9XG4gIGVsc2Uge1xuICAgIGxvY2FsU3RvcmFnZVdvcmtzID0gZmFsc2U7XG4gIH1cblxuZnVuY3Rpb24gc3RvcmFnZUF2YWlsYWJsZSh0eXBlKSB7XG4gICAgbGV0IHN0b3JhZ2U7XG4gICAgdHJ5IHtcbiAgICAgICAgc3RvcmFnZSA9IHdpbmRvd1t0eXBlXTtcbiAgICAgICAgY29uc3QgeCA9ICdfX3N0b3JhZ2VfdGVzdF9fJztcbiAgICAgICAgc3RvcmFnZS5zZXRJdGVtKHgsIHgpO1xuICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oeCk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gZSBpbnN0YW5jZW9mIERPTUV4Y2VwdGlvbiAmJiAoXG4gICAgICAgICAgICAvLyBldmVyeXRoaW5nIGV4Y2VwdCBGaXJlZm94XG4gICAgICAgICAgICBlLmNvZGUgPT09IDIyIHx8XG4gICAgICAgICAgICAvLyBGaXJlZm94XG4gICAgICAgICAgICBlLmNvZGUgPT09IDEwMTQgfHxcbiAgICAgICAgICAgIC8vIHRlc3QgbmFtZSBmaWVsZCB0b28sIGJlY2F1c2UgY29kZSBtaWdodCBub3QgYmUgcHJlc2VudFxuICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBleGNlcHQgRmlyZWZveFxuICAgICAgICAgICAgZS5uYW1lID09PSAnUXVvdGFFeGNlZWRlZEVycm9yJyB8fFxuICAgICAgICAgICAgLy8gRmlyZWZveFxuICAgICAgICAgICAgZS5uYW1lID09PSAnTlNfRVJST1JfRE9NX1FVT1RBX1JFQUNIRUQnKSAmJlxuICAgICAgICAgICAgLy8gYWNrbm93bGVkZ2UgUXVvdGFFeGNlZWRlZEVycm9yIG9ubHkgaWYgdGhlcmUncyBzb21ldGhpbmcgYWxyZWFkeSBzdG9yZWRcbiAgICAgICAgICAgIChzdG9yYWdlICYmIHN0b3JhZ2UubGVuZ3RoICE9PSAwKTtcbiAgICB9XG59XG5cbmxldCBzdG9yYWdlSXNFbXB0eTtcbmZ1bmN0aW9uIGxvYWRMb2NhbFN0b3JhZ2UoKSB7XG4gICAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFza0xpc3RzJykpIHtcbiAgICAgICAgc3RvcmFnZUlzRW1wdHkgPSB0cnVlO1xuICAgICAgICByZXR1cm47XG4gICAgfSBlbHNlIHtcbiAgICAgICAgc3RvcmFnZUlzRW1wdHkgPSBmYWxzZTtcbiAgICAgICAgdGFza0xpc3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFza0xpc3RzJykpO1xuXG4gICAgICAgIGxldCBsb2FkZWRDdXJyZW50TGlzdE5hbWUgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjdXJyZW50TGlzdE5hbWUnKSk7XG4gICAgICAgIHRhc2tMaXN0cy5mb3JFYWNoKGxpc3QgPT4ge1xuICAgICAgICAgICAgaWYgKGxpc3QubmFtZSA9PT0gbG9hZGVkQ3VycmVudExpc3ROYW1lKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudExpc3QgPSBsaXN0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNhdmVUb0xvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAoIWxvY2FsU3RvcmFnZVdvcmtzKSB7XG4gICAgICAgIHJldHVybjtcblxuICAgIH0gZWxzZSBpZiAobG9jYWxTdG9yYWdlV29ya3MpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidGFza0xpc3RzXCIsIEpTT04uc3RyaW5naWZ5KHRhc2tMaXN0cykpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImN1cnJlbnRMaXN0TmFtZVwiLCBKU09OLnN0cmluZ2lmeShjdXJyZW50TGlzdC5uYW1lKSk7XG4gICAgfVxufVxuXG5cbi8vIE9iamVjdHNcbmNvbnN0IExpc3RGYWN0b3J5ID0gKG5hbWUpID0+IHtcbiAgICBsZXQgc29ydE1ldGhvZCA9ICdjdXN0b20nO1xuICAgIGxldCB0YXNrcyA9IHt9XG4gICAgcmV0dXJuIHsgbmFtZSwgc29ydE1ldGhvZCwgdGFza3MgfVxufTtcblxuXG5jb25zdCBUYXNrRmFjdG9yeSA9IChpZCwgbmFtZSwgZGV0YWlscywgZGF0ZVRpbWUsIHBvc2l0aW9uLCBjb21wbGV0ZWQpID0+IHtcbiAgICByZXR1cm4geyBpZCwgbmFtZSwgZGV0YWlscywgZGF0ZVRpbWUsIHBvc2l0aW9uLCBjb21wbGV0ZWQgfTtcbn07XG5cbmxldCB0YXNrTGlzdHMgPSBbXTtcbmxldCBjdXJyZW50TGlzdDtcbmxvYWRMb2NhbFN0b3JhZ2UoKTtcblxuZnVuY3Rpb24gc2V0Q3VycmVudExpc3QobGlzdCkgeyBjdXJyZW50TGlzdCA9IGxpc3QgfTtcbmZ1bmN0aW9uIGNyZWF0ZURlZmF1bHRMaXN0KCkgeyB0YXNrTGlzdHMucHVzaChMaXN0RmFjdG9yeSgnTGlzdCcpKSB9XG5cbi8vIER1bW15IGNvbnRlbnQgU1RBUlRcbmlmIChzdG9yYWdlSXNFbXB0eSkge1xuICAgIGxldCB3ZWVrZW5kID0gTGlzdEZhY3RvcnkoJ1dlZWtlbmQnKTtcbiAgICBsZXQgZGFuY2UgPSBUYXNrRmFjdG9yeSgwLCAnRGFuY2UnLCAnU2FtYmEnLCAnMjAyMi0xMi0wM1QxMDowMCcsIDMsIGZhbHNlKTtcbiAgICBsZXQgc2xlZXAgPSBUYXNrRmFjdG9yeSgxLCAnU2xlZXAnLCAnRGVlcCcsICcnLCAyLCBmYWxzZSk7XG4gICAgbGV0IGVhdCA9IFRhc2tGYWN0b3J5KDIsICdFYXQnLCAnU3VzaGknLCAnMjAyMi0xMi0wM1QxMToxMScsIDEsIGZhbHNlKTtcbiAgICBsZXQgY29vayA9IFRhc2tGYWN0b3J5KDMsICdDb29rJywgJ1N1c2hpJywgJycsIDQsIGZhbHNlKTtcbiAgICBsZXQgbGF6ZSA9IFRhc2tGYWN0b3J5KDQsICdMYXplJywgJ0FzIG11Y2ggYXMgeW91IGNhbicsICcyMDIyLTEyLTA0VDEyOjAwJywgNSwgZmFsc2UpO1xuICAgIFxuICAgIGxldCB3ZWVrID0gTGlzdEZhY3RvcnkoJ1dlZWsnKTtcbiAgICBsZXQgd29yayA9IFRhc2tGYWN0b3J5KDAsICdXb3JrJywgJ09uIGEgaGlnaHdheScsICcyMDIyLTExLTIzVDE3OjMzJywgMSwgZmFsc2UpO1xuICAgIGxldCBsYXlEb3duID0gVGFza0ZhY3RvcnkoMSwgJ0xheSBkb3duICcsICdUaGUgYmxhY2t0b3AnLCAnMjAyMi0wOS0yNlQxMDoxMScsIDIsIGZhbHNlKTtcbiAgICBsZXQgY3J5ID0gVGFza0ZhY3RvcnkoMiwgJ0NyeScsICdZb3VyIGV5ZXMgb3V0JywgJzIwMjItMTItMjZUMTE6NTEnLCAzLCBmYWxzZSk7XG5cbiAgICB0YXNrTGlzdHMucHVzaCh3ZWVrZW5kKTtcbiAgICB3ZWVrZW5kLnRhc2tzLmRhbmNlID0gZGFuY2U7XG4gICAgd2Vla2VuZC50YXNrcy5zbGVlcCA9IHNsZWVwO1xuICAgIHdlZWtlbmQudGFza3MuZWF0ID0gZWF0O1xuICAgIHdlZWtlbmQudGFza3MuY29vayA9IGNvb2s7XG4gICAgd2Vla2VuZC50YXNrcy5sYXplID0gbGF6ZTtcbiAgICBcbiAgICB0YXNrTGlzdHMucHVzaCh3ZWVrKTtcbiAgICB3ZWVrLnRhc2tzLndvcmsgPSB3b3JrO1xuICAgIHdlZWsudGFza3MubGF5RG93biA9IGxheURvd247XG4gICAgd2Vlay50YXNrcy5jcnkgPSBjcnk7XG59XG4vLyBEdW1teSBjb250ZW50IEVORFxuaWYgKCFjdXJyZW50TGlzdCkge1xuICAgIGN1cnJlbnRMaXN0ID0gdGFza0xpc3RzWzBdO1xufTtcblxuLy8gUmVuYW1lIExpc3RcbmNvbnN0IG1vZGFscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbCcpO1xuY29uc3QgcmVuYW1lTGlzdElucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3JlbmFtZS1saXN0LWlucHV0Jyk7XG5jb25zdCByZW5hbWVEb25lQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3JlbmFtZS1kb25lLWJ0bicpO1xuXG5yZW5hbWVEb25lQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGlmIChyZW5hbWVMaXN0SW5wdXQudmFsdWUpIHtcbiAgICAgICAgY3VycmVudExpc3QubmFtZSA9IHJlbmFtZUxpc3RJbnB1dC52YWx1ZTtcbiAgICAgICAgcmVuYW1lTGlzdElucHV0LnZhbHVlID0gJyc7XG5cbiAgICAgICAgcmVuZGVyVGFza0xpc3RzKCk7XG4gICAgICAgIHJlbmRlclRhc2tzKCk7XG4gICAgICAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xuICAgICAgICBtb2RhbHMuZm9yRWFjaChtb2RhbCA9PiBtb2RhbC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKSk7XG4gICAgfVxufSk7XG5cbi8vIERlbGV0ZSBsaXN0XG5jb25zdCBkZWxldGVMaXN0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RlbGV0ZS1saXN0LWJ1dHRvbicpO1xuZGVsZXRlTGlzdEJ1dHRvbi5vbmNsaWNrID0gKCkgPT4ge1xuICAgIGxldCBpbmRleCA9IHRhc2tMaXN0cy5pbmRleE9mKGN1cnJlbnRMaXN0KTtcbiAgICB0YXNrTGlzdHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICBjdXJyZW50TGlzdCA9IHRhc2tMaXN0c1swXTtcblxuICAgIHJlbmRlclRhc2tMaXN0cygpO1xuICAgIHJlbmRlclRhc2tzKCk7XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG59O1xuXG4vLyBDcmVhdGUgbmV3IHRhc2tcbmNvbnN0IGFkZFRhc2tJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZC10YXNrLWljb24nKTtcbmNvbnN0IGFkZFRhc2tUZXh0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZC10YXNrLXRleHQnKTtcblxuW2FkZFRhc2tJY29uLCBhZGRUYXNrVGV4dF0uZm9yRWFjaChlbGVtZW50ID0+IGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgbGV0IG5ld1Rhc2tOYW1lID0gZ2VuZXJhdGVSYW5kb21TdHJpbmcoKTtcbiAgICBsZXQgdW5pcXVlQ2hlY2sgPSBnZXRVbmlxdWVOYW1lKG5ld1Rhc2tOYW1lKTtcblxuICAgIHdoaWxlICh1bmlxdWVDaGVjayA9PT0gZmFsc2UpIHtcbiAgICAgICAgbmV3VGFza05hbWUgPSBnZW5lcmF0ZVJhbmRvbVN0cmluZygpO1xuICAgICAgICB1bmlxdWVDaGVjayA9IGdldFVuaXF1ZU5hbWUobmV3VGFza05hbWUpO1xuICAgIH1cblxuICAgIGluY3JlYXNlVGFza3NQb3NpdGlvbigpO1xuICAgIGN1cnJlbnRMaXN0LnRhc2tzW25ld1Rhc2tOYW1lXSA9IFRhc2tGYWN0b3J5KCcnLCAnJywgJycsICcnLCAxLCBmYWxzZSk7XG4gICAgcmVmcmVzaFRhc2tzSUQoKTtcbiAgICByZW5kZXJUYXNrcygpO1xuICAgIHNldFRpbWVvdXQoc2VsZWN0TmV3VGFzaywgMTApO1xuICAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xufSkpO1xuXG5mdW5jdGlvbiBnZXRVbmlxdWVOYW1lKG5ld1Rhc2tOYW1lKSB7XG4gICAgbGV0IHVuaXF1ZSA9IHRydWU7XG5cbiAgICBmb3IgKGxldCBsaXN0IGluIHRhc2tMaXN0cykge1xuICAgICAgICBmb3IgKGxldCB0YXNrIGluIGxpc3QudGFza3MpIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5uYW1lID09PSBuZXdUYXNrTmFtZSkge1xuICAgICAgICAgICAgICAgIHVuaXF1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmlxdWU7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlUmFuZG9tU3RyaW5nKCkge1xuICAgIGxldCByZXN1bHQgPSAnJztcbiAgICBsZXQgY2hhcmFjdGVycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSc7XG4gICAgZm9yICggbGV0IGkgPSAwOyBpIDwgNTsgaSsrKSB7XG4gICAgICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzLmxlbmd0aCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBpbmNyZWFzZVRhc2tzUG9zaXRpb24oKSB7XG4gICAgZm9yIChsZXQgdGFzayBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICBpZiAodGFzayAmJiB0eXBlb2YgY3VycmVudExpc3QudGFza3NbdGFza10gPT09ICdvYmplY3QnICYmICFjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5jb21wbGV0ZWQpIHtcbiAgICAgICAgICAgIGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uKys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG59XG5cbi8vIERlbGV0ZSB0YXNrXG5mdW5jdGlvbiBkZWxldGVUYXNrKHRhc2tJRCkge1xuXG4gICAgLy8gRmluZCB0YXNrIHRvIGRlbGV0ZVxuICAgIGxldCB0YXNrVG9EZWxldGVOYW1lO1xuXG4gICAgZm9yIChsZXQgdGFzayBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICBpZiAoY3VycmVudExpc3QudGFza3NbdGFza10uaWQgPT09ICt0YXNrSUQpIHtcbiAgICAgICAgICAgIHRhc2tUb0RlbGV0ZU5hbWUgPSB0YXNrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEhhbmRsZSBwb3NpdGlvbmluZ1xuICAgIGZvciAobGV0IHRhc2sgaW4gY3VycmVudExpc3QudGFza3MpIHtcbiAgICAgICAgaWYgKGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uID4gY3VycmVudExpc3QudGFza3NbdGFza1RvRGVsZXRlTmFtZV0ucG9zaXRpb24pIHtcbiAgICAgICAgICAgIGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uLS07XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVsZXRlIGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tUb0RlbGV0ZU5hbWVdO1xuXG4gICAgcmVmcmVzaFRhc2tzSUQoKTtcbiAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoKTtcbn1cblxuZnVuY3Rpb24gcmVmcmVzaFRhc2tzSUQoKSB7XG4gICAgdGFza0xpc3RzLmZvckVhY2gobGlzdCA9PiB7XG4gICAgICAgIGxldCBjb3VudGVyID0gMDtcbiAgICAgICAgZm9yIChsZXQgdGFzayBpbiBsaXN0LnRhc2tzKSB7XG4gICAgICAgICAgICBsaXN0LnRhc2tzW3Rhc2tdLmlkID0gY291bnRlcjsgICAgICBcbiAgICAgICAgICAgIGNvdW50ZXIrKztcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB0b2dnbGVDb21wbGV0ZWRTdGF0dXModGFza0lEKSB7XG4gICAgZm9yIChsZXQgdGFzayBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICBpZiAoY3VycmVudExpc3QudGFza3NbdGFza10uaWQgPT0gdGFza0lEKSB7XG5cbiAgICAgICAgICAgIGlmIChjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5jb21wbGV0ZWQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgLy8gSGFuZGxlIHBvc2l0aW9uaW5nXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgdGsgaW4gY3VycmVudExpc3QudGFza3MpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRMaXN0LnRhc2tzW3RrXS5wb3NpdGlvbiA+IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50TGlzdC50YXNrc1t0a10ucG9zaXRpb24tLTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5jb21wbGV0ZWQgPSB0cnVlXG4gICAgICAgICAgICAgICAgY3VycmVudExpc3QudGFza3NbdGFza10ucG9zaXRpb24gPSAnJztcblxuICAgICAgICAgICAgfSBlbHNlIGlmIChjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5jb21wbGV0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAvLyBBZGQgdG8gb25nb2luZyBsaXN0IGFzIGxhc3QgdGFza1xuICAgICAgICAgICAgICAgIGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uID0gZ2V0U29ydGVkVGFza0FycmF5KCkubGVuZ3RoICsgMTtcbiAgICAgICAgICAgICAgICBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5jb21wbGV0ZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoKTtcbn1cblxuLy8gRGVsZXRlIGNvbXBsZXRlZCB0YXNrc1xubGV0IGRlbGV0ZUNvbXBsZXRlZFRhc2tzQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RlbGV0ZS1jb21wbGV0ZWQtdGFza3MnKTtcbmRlbGV0ZUNvbXBsZXRlZFRhc2tzQnRuLm9uY2xpY2sgPSBkZWxldGVDb21wbGV0ZWRUYXNrcztcblxuZnVuY3Rpb24gZGVsZXRlQ29tcGxldGVkVGFza3MoKSB7XG4gICAgZm9yIChsZXQgdGFzayBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICBpZiAoY3VycmVudExpc3QudGFza3NbdGFza10uY29tcGxldGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBkZWxldGUgY3VycmVudExpc3QudGFza3NbdGFza107XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyVGFza3MoKTtcbiAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoKTtcbn1cblxuLy8gTW92ZSB0YXNrIHRvIGRpZmZlcmVudCBsaXN0XG5mdW5jdGlvbiBtb3ZlVGFzayh0YXNrSUQsIGRlc3RpbmF0aW9uTGlzdE5hbWUpIHtcbiAgICBsZXQgbGlzdFBvc2l0aW9uO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFza0xpc3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICh0YXNrTGlzdHNbaV0ubmFtZSA9PT0gZGVzdGluYXRpb25MaXN0TmFtZSkge1xuICAgICAgICAgICAgbGlzdFBvc2l0aW9uID0gaTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAoY3VycmVudExpc3QgPT09IHRhc2tMaXN0c1tsaXN0UG9zaXRpb25dKSByZXR1cm47XG5cbiAgICBmb3IgKGxldCB0YXNrIGluIGN1cnJlbnRMaXN0LnRhc2tzKSB7XG4gICAgICAgIGlmIChjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5pZCA9PT0gK3Rhc2tJRCkge1xuXG4gICAgICAgICAgICBsZXQgdGFza1ByZXZQb3NpdGlvbiA9IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uO1xuXG4gICAgICAgICAgICAvLyBDb3VudCBvbmdvaW5nIHRhc2tzIGluIGRlc3RpbmF0aW9uIGxpc3RcbiAgICAgICAgICAgIGxldCBwb3NpdGlvbkNvdW50ZXIgPSAwO1xuICAgICAgICAgICAgT2JqZWN0LmVudHJpZXModGFza0xpc3RzW2xpc3RQb3NpdGlvbl0udGFza3MpLmZvckVhY2godGFzayA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCF0YXNrWzFdLmNvbXBsZXRlZCkgcG9zaXRpb25Db3VudGVyKys7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gVXBkYXRlIHBvc2l0aW9uIG9mIGVsZW1lbnRzIGluIGN1cnJlbnQgbGlzdFxuICAgICAgICAgICAgZm9yIChsZXQgdCBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50TGlzdC50YXNrc1t0XS5wb3NpdGlvbiA+IHRhc2tQcmV2UG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudExpc3QudGFza3NbdF0ucG9zaXRpb24tLTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIENvcHkgdGFzayB0byBkZXN0aW5hdGlvbiBsaXN0XG4gICAgICAgICAgICB0YXNrTGlzdHNbbGlzdFBvc2l0aW9uXS50YXNrc1t0YXNrXSA9IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdO1xuXG4gICAgICAgICAgICAvLyBQb3NpdGlvbiBhcyBsYXN0IGVsZW1lbnQgaW4gbmV3IGxvY2F0aW9uXG4gICAgICAgICAgICB0YXNrTGlzdHNbbGlzdFBvc2l0aW9uXS50YXNrc1t0YXNrXS5wb3NpdGlvbiA9IHBvc2l0aW9uQ291bnRlciArIDE7ICAgICAgICAgICAgXG5cbiAgICAgICAgICAgIGRlbGV0ZSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZWZyZXNoVGFza3NJRCgpO1xuICAgIHJlbmRlclRhc2tzKCk7XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG59XG5cbi8vIFNvcnRcbmNvbnN0IHNvcnROYW1lQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NvcnQtbmFtZS1idG4nKTtcbmNvbnN0IHNvcnREYXRlQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NvcnQtZGF0ZS1idG4nKTtcbmNvbnN0IHNvcnRDdXN0b21CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc29ydC1jdXN0b20tYnRuJyk7XG5cbnNvcnRDdXN0b21CdG4ub25jbGljayA9ICgpID0+IHtcbiAgICBjdXJyZW50TGlzdC5zb3J0TWV0aG9kID0gJ2N1c3RvbSc7XG4gICAgc29ydFRhc2tzKCk7XG59O1xuXG5zb3J0RGF0ZUJ0bi5vbmNsaWNrID0gKCkgPT4ge1xuICAgIGN1cnJlbnRMaXN0LnNvcnRNZXRob2QgPSAnZGF0ZSc7XG4gICAgc29ydFRhc2tzKCk7XG59O1xuXG5zb3J0TmFtZUJ0bi5vbmNsaWNrID0gKCkgPT4ge1xuICAgIGN1cnJlbnRMaXN0LnNvcnRNZXRob2QgPSAnbmFtZSc7XG4gICAgc29ydFRhc2tzKCk7XG59O1xuXG5mdW5jdGlvbiBzb3J0VGFza3MoKSB7XG4gICAgc2V0U29ydENoZWNrSWNvbigpO1xuICAgIGxldCBzb3J0ZWRBcnJheSA9IGdldFNvcnRlZFRhc2tBcnJheSgpO1xuICAgIHVwZGF0ZVRhc2tzT3JkZXIoc29ydGVkQXJyYXkpO1xufVxuXG5mdW5jdGlvbiBnZXRTb3J0ZWRUYXNrQXJyYXkoKSB7XG4gICAgLy8gR2V0IGFycmF5IG9mIG9iamVjdCBlbnRyaWVzXG4gICAgbGV0IGN1cnJlbnRMaXN0QXJyYXkgPSBPYmplY3QuZW50cmllcyhjdXJyZW50TGlzdC50YXNrcyk7XG4gICAgbGV0IHNvcnRNZXRob2QgPSBjdXJyZW50TGlzdC5zb3J0TWV0aG9kO1xuXG4gICAgaWYgKHNvcnRNZXRob2QgPT09ICduYW1lJykge1xuICAgICAgICBjdXJyZW50TGlzdEFycmF5LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgIGxldCBhYSA9IGFbMV0ubmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgbGV0IGJiID0gYlsxXS5uYW1lLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgICAgIHJldHVybiBhYSA8IGJiID8gLTEgOiBhYSA+IGJiID8gMSA6IDA7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBIYW5kbGUgY29tcGxldGVkIHRhc2tzXG4gICAgICAgIGxldCBvbmdvaW5nVGFza0FycmF5ID0gZXhjbHVkZUNvbXBsZXRlZChjdXJyZW50TGlzdEFycmF5KTtcbiAgICAgICAgcmV0dXJuIG9uZ29pbmdUYXNrQXJyYXk7XG5cbiAgICB9IGVsc2UgaWYgKHNvcnRNZXRob2QgPT09ICdkYXRlJykge1xuICAgICAgICBjdXJyZW50TGlzdEFycmF5LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgIGxldCBhYTtcbiAgICAgICAgICAgIC8vIEhhbmRsZSBlbXB0eSB0YXNrc1xuICAgICAgICAgICAgaWYgKCFhWzFdLmRhdGVUaW1lKSB7XG4gICAgICAgICAgICAgICAgYWEgPSBuZXcgRGF0ZSgnSmFudWFyeSAxLCAxNTAwIDAwOjAwOjAwJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFhID0gbmV3IERhdGUoYVsxXS5kYXRlVGltZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgYmIgPSBuZXcgRGF0ZShiWzFdLmRhdGVUaW1lKTtcblxuICAgICAgICAgICAgcmV0dXJuIGFhIC0gYmI7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBIYW5kbGUgY29tcGxldGVkIHRhc2tzXG4gICAgICAgIGxldCBvbmdvaW5nVGFza0FycmF5ID0gZXhjbHVkZUNvbXBsZXRlZChjdXJyZW50TGlzdEFycmF5KTtcbiAgICAgICAgcmV0dXJuIG9uZ29pbmdUYXNrQXJyYXk7XG5cbiAgICB9IGVsc2UgaWYgKHNvcnRNZXRob2QgPT09ICdjdXN0b20nKSB7XG4gICAgICAgIGN1cnJlbnRMaXN0QXJyYXkuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgbGV0IGFhID0gYVsxXS5wb3NpdGlvbjtcbiAgICAgICAgICAgIGxldCBiYiA9IGJbMV0ucG9zaXRpb247XG5cbiAgICAgICAgICAgIHJldHVybiBhYSAtIGJiO1xuICAgICAgICB9KTtcbiAgICAgICAgLy8gSGFuZGxlIGNvbXBsZXRlZCB0YXNrc1xuICAgICAgICBsZXQgb25nb2luZ1Rhc2tBcnJheSA9IGV4Y2x1ZGVDb21wbGV0ZWQoY3VycmVudExpc3RBcnJheSk7XG4gICAgICAgIHJldHVybiBvbmdvaW5nVGFza0FycmF5O1xuICAgIH1cbn1cblxuLy8gSGVscGVyIGZvciBnZXRTb3J0ZWRUYXNrQXJyYXkgZnVuY3Rpb25cbmZ1bmN0aW9uIGV4Y2x1ZGVDb21wbGV0ZWQoY3VycmVudExpc3RBcnJheSkge1xuICAgIGxldCBvbmdvaW5nVGFza0FycmF5ID0gW107XG5cbiAgICBjdXJyZW50TGlzdEFycmF5LmZvckVhY2godGFzayA9PiB7XG4gICAgICAgIGlmICghdGFza1sxXS5jb21wbGV0ZWQpIHtcbiAgICAgICAgICAgIG9uZ29pbmdUYXNrQXJyYXkucHVzaCh0YXNrKVxuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIG9uZ29pbmdUYXNrQXJyYXk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZURyb3BQb3NpdGlvbihuZXdQb3NpdGlvbiwgdGFza1RvTW92ZUlELCBkcm9wVGFyZ2V0SUQpIHtcbiAgICAvLyBBcnJheSBvZiBvbmdvaW5nIHRhc2tzIGluIGN1cnJlbnQgbGlzdFxuICAgIGxldCBzb3J0ZWRUYXNrc0FycmF5ID0gZ2V0U29ydGVkVGFza0FycmF5KCk7XG4gICAgbGV0IHRhc2tUb01vdmU7XG4gICAgbGV0IHRhc2tUb01vdmVQb3NpdGlvbjtcbiAgICBsZXQgZHJvcFRhcmdldFBvc2l0aW9uO1xuXG4gICAgZm9yIChsZXQgdGFzayBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICBpZiAoY3VycmVudExpc3QudGFza3NbdGFza10uaWQgPT09ICt0YXNrVG9Nb3ZlSUQpIHtcbiAgICAgICAgICAgIHRhc2tUb01vdmUgPSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXTtcbiAgICAgICAgICAgIHRhc2tUb01vdmVQb3NpdGlvbiA9IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uO1xuICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLmlkID09PSArZHJvcFRhcmdldElEKSB7XG4gICAgICAgICAgICBkcm9wVGFyZ2V0UG9zaXRpb24gPSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5wb3NpdGlvbjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChuZXdQb3NpdGlvbiA9PT0gJ2JlZm9yZScpIHtcbiAgICAgICAgc29ydGVkVGFza3NBcnJheS5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgaWYgKHRhc2tUb01vdmVQb3NpdGlvbiA+IGRyb3BUYXJnZXRQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIGlmICh0YXNrWzFdLnBvc2l0aW9uID49IGRyb3BUYXJnZXRQb3NpdGlvbiAmJiB0YXNrWzFdLnBvc2l0aW9uIDwgdGFza1RvTW92ZVBvc2l0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhc2tbMV0ucG9zaXRpb24rKztcbiAgICAgICAgICAgICAgICAgICAgdGFza1RvTW92ZS5wb3NpdGlvbiA9IGRyb3BUYXJnZXRQb3NpdGlvbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRhc2tUb01vdmVQb3NpdGlvbiA8IGRyb3BUYXJnZXRQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIGlmICh0YXNrWzFdLnBvc2l0aW9uID4gdGFza1RvTW92ZVBvc2l0aW9uICYmIHRhc2tbMV0ucG9zaXRpb24gPCBkcm9wVGFyZ2V0UG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGFza1sxXS5wb3NpdGlvbi0tO1xuICAgICAgICAgICAgICAgICAgICB0YXNrVG9Nb3ZlLnBvc2l0aW9uID0gZHJvcFRhcmdldFBvc2l0aW9uIC0gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBzb3J0ZWRUYXNrc0FycmF5ID0gZ2V0U29ydGVkVGFza0FycmF5KCk7XG4gICAgICAgIFxuXG4gICAgfSBlbHNlIGlmIChuZXdQb3NpdGlvbiA9PT0gJ2VuZCcpe1xuICAgICAgICBmb3IgKGxldCB0YXNrIGluIGN1cnJlbnRMaXN0LnRhc2tzKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVudExpc3QudGFza3NbdGFza10ucG9zaXRpb24gPT09IHRhc2tUb01vdmVQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIC8vIERlY3JlbWVudCBwb3NpdGlvbiBvZiB0YXNrcyBhZnRlciBtb3ZlZCBlbGVtZW50XG4gICAgICAgICAgICAgICAgc29ydGVkVGFza3NBcnJheS5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFza1sxXS5wb3NpdGlvbiA+IHRhc2tUb01vdmVQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFza1sxXS5wb3NpdGlvbi0tO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyBTZXQgaXQgYXMgbGFzdCB0YXNrXG4gICAgICAgICAgICAgICAgY3VycmVudExpc3QudGFza3NbdGFza10ucG9zaXRpb24gPSBnZXRTb3J0ZWRUYXNrQXJyYXkoKS5sZW5ndGg7ICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2F2ZVRvTG9jYWxTdG9yYWdlKCk7XG59XG5cbmZ1bmN0aW9uIGdldExhc3RUYXNrSUQoKSB7XG4gICAgbGV0IGN1cnJlbnRMaXN0QXJyYXkgPSBPYmplY3QuZW50cmllcyhjdXJyZW50TGlzdC50YXNrcyk7XG5cbiAgICBjdXJyZW50TGlzdEFycmF5LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgbGV0IGFhID0gYVsxXS5wb3NpdGlvbjtcbiAgICAgICAgbGV0IGJiID0gYlsxXS5wb3NpdGlvbjtcblxuICAgICAgICByZXR1cm4gYmIgLSBhYTtcbiAgICB9KTtcbiAgICByZXR1cm4gY3VycmVudExpc3RBcnJheVswXVsxXS5pZDtcbn1cblxuZXhwb3J0IHsgdGFza0xpc3RzLCBjdXJyZW50TGlzdCwgc2V0Q3VycmVudExpc3QsIGNyZWF0ZURlZmF1bHRMaXN0LCBkZWxldGVUYXNrLCBzb3J0VGFza3MsIG1vdmVUYXNrLCBcbiAgICAgICAgZ2V0TGFzdFRhc2tJRCwgdG9nZ2xlQ29tcGxldGVkU3RhdHVzLCBoYW5kbGVEcm9wUG9zaXRpb24sIHNhdmVUb0xvY2FsU3RvcmFnZSwgTGlzdEZhY3RvcnksIGdldFNvcnRlZFRhc2tBcnJheSB9OyIsImltcG9ydCBjaXJjbGVJY29uIGZyb20gJy4uL2ltZy9jaXJjbGUtaWNvbi5wbmcnO1xuaW1wb3J0IGdpdEljb24gZnJvbSAnLi4vaW1nL2dpdGh1Yi5wbmcnO1xuaW1wb3J0IHBhcnNlSVNPIGZyb20gJ2RhdGUtZm5zL3BhcnNlSVNPJztcbmltcG9ydCB7IHRhc2tMaXN0cywgY3VycmVudExpc3QsIHNldEN1cnJlbnRMaXN0LCBjcmVhdGVEZWZhdWx0TGlzdCwgZGVsZXRlVGFzaywgc29ydFRhc2tzLCBtb3ZlVGFzaywgXG4gICAgICAgIGdldExhc3RUYXNrSUQsIHRvZ2dsZUNvbXBsZXRlZFN0YXR1cywgaGFuZGxlRHJvcFBvc2l0aW9uLCBzYXZlVG9Mb2NhbFN0b3JhZ2UsIExpc3RGYWN0b3J5LCBnZXRTb3J0ZWRUYXNrQXJyYXkgfSBmcm9tICcuL2xvZ2ljJztcblxubGV0IGNpcmNsZUVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNpcmNsZS1pY29uJyk7XG5jaXJjbGVFbGVtZW50cy5mb3JFYWNoKGVsZW1lbnQgPT4gIHsgZWxlbWVudC5zcmMgPSBjaXJjbGVJY29uIH0pO1xubGV0IGdpdExpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZ2l0aHViJylcbmdpdExpbmsuc3JjID0gZ2l0SWNvbjtcblxubGV0IGN1cnJlbnRUYXNrSFRNTDtcbmxldCBjdXJyZW50VGFza0lEO1xubGV0IG1vdmVUYXNrQnV0dG9ucztcblxuY29uc3QgZGF0ZVRpbWVIYW5kbGVyID0gKCgpID0+IHtcbiAgICBsZXQgY3VycmVudFBpY2tlcjtcbiAgICBsZXQgZGF0ZURpc3BsYXlEaXY7XG4gICAgXG4gICAgYWRkRGF0ZUxpc3RlbmVycygpO1xuICAgIGZ1bmN0aW9uIGFkZERhdGVMaXN0ZW5lcnMoKSB7XG4gICAgICAgIGNvbnN0IHRpbWVQaWNrZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRpbWUtcGlja2VyJyk7XG4gICAgICAgIGNvbnN0IHRhc2tEYXRlRGl2cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrLWRhdGUnKTtcblxuICAgICAgICB0YXNrRGF0ZURpdnMuZm9yRWFjaChkaXYgPT4ge1xuICAgICAgICAgICAgZGl2LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRpbWVQaWNrZXJzLmZvckVhY2gocGlja2VyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRpdi5jb250YWlucyhwaWNrZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwaWNrZXIuc2hvd1BpY2tlcigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFBpY2tlciA9IHBpY2tlcjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGVEaXNwbGF5RGl2ID0gY3VycmVudFBpY2tlci5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZGl2LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IGNvbnZlcnREYXRlKGN1cnJlbnRQaWNrZXIudmFsdWUsIGRhdGVEaXNwbGF5RGl2KSk7XG4gICAgICAgICAgICBkaXYuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdG9nZ2xlRGF0ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnZlcnREYXRlKGRhdGUsIGRlc3RpbmF0aW9uKSB7XG4gICAgICAgIGxldCBkYXRlVGltZUFycmF5ID0gcGFyc2VJU08oZGF0ZSkudG9TdHJpbmcoKS5zcGxpdCgnICcpO1xuICAgICAgICBsZXQgdGltZSA9IG5ldyBEYXRlKGRhdGUpLnRvTG9jYWxlVGltZVN0cmluZygnZW4nLCB7XG4gICAgICAgICAgICB0aW1lU3R5bGU6ICdzaG9ydCcsIFxuICAgICAgICAgICAgaG91cjEyOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgZGF0ZVRpbWUgPSBgJHtkYXRlVGltZUFycmF5WzBdfSwgJHtkYXRlVGltZUFycmF5WzFdfSAke2RhdGVUaW1lQXJyYXlbMl19LCAke3RpbWV9YDtcblxuICAgICAgICAvLyBEZXRlcm1pbmUgd2hpY2ggdGFzayB0byB1cGRhdGVcbiAgICAgICAgbGV0IG15VGFza0lEID0gZGVzdGluYXRpb24ucGFyZW50Tm9kZS5wYXJlbnROb2RlLmRhdGFzZXQuaWQ7XG4gICAgICAgIGxldCBteVRhc2s7XG4gICAgICAgIGZvciAoY29uc3QgdGFzayBpbiBjdXJyZW50TGlzdC50YXNrcykge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLmlkID09IG15VGFza0lEKSB7XG4gICAgICAgICAgICAgICAgbXlUYXNrID0gY3VycmVudExpc3QudGFza3NbdGFza107XG4gICAgICAgICAgICB9IFxuICAgICAgICB9XG4gICAgICAgIG15VGFzay5kYXRlVGltZSA9IGRhdGU7XG4gICAgICAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xuXG4gICAgICAgIGlmIChkYXRlVGltZS5pbmNsdWRlcygnSW52YWxpZCcpKSB7XG4gICAgICAgICAgICBkZXN0aW5hdGlvbi5pbm5lckhUTUwgPSAnRGF0ZSAvIHRpbWUnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVzdGluYXRpb24uaW5uZXJIVE1MID0gZGF0ZVRpbWU7XG4gICAgICAgIH1cblxuICAgICAgICB1cGRhdGVUYXNrc09yZGVyKGdldFNvcnRlZFRhc2tBcnJheSgpKTtcbiAgICB9XG5cbiAgICB0b2dnbGVEYXRlKCk7XG4gICAgZnVuY3Rpb24gdG9nZ2xlRGF0ZSgpIHtcbiAgICAgICAgY29uc3QgZGF0ZVZhbHVlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kYXRlLXZhbHVlJyk7XG5cbiAgICAgICAgZGF0ZVZhbHVlcy5mb3JFYWNoKHZhbHVlID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZS5pbm5lckhUTUwgPT09ICdEYXRlIC8gdGltZScgXG4gICAgICAgICAgICAgICAgJiYgIXZhbHVlLnBhcmVudE5vZGUucGFyZW50Tm9kZS5jbGFzc0xpc3QuY29udGFpbnMoJ3Rhc2stY2xpY2tlZCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFsdWUucGFyZW50Tm9kZS5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB7IGFkZERhdGVMaXN0ZW5lcnMsIHRvZ2dsZURhdGUsIGNvbnZlcnREYXRlIH07XG59KSgpO1xuXG5cblxuY29uc3QgdGV4dElucHV0SGFuZGxlciA9ICgoKSA9PiB7XG5cbiAgICBmdW5jdGlvbiBhZGRUZXh0QXJlYXNMaXN0ZW5lcnMoKSB7XG4gICAgICAgIGNvbnN0IHRleHRBcmVhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0ZXh0YXJlYScpO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGV4dEFyZWFzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgaGVpZ2h0O1xuICAgIFxuICAgICAgICAgICAgaWYgKCt0ZXh0QXJlYXNbaV0uc2Nyb2xsSGVpZ2h0ID09PSAwKSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0ID0gJ2F1dG8nO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQgPSB0ZXh0QXJlYXNbaV0uc2Nyb2xsSGVpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGV4dEFyZWFzW2ldLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnaGVpZ2h0OicgKyBoZWlnaHQgKyAncHg7b3ZlcmZsb3cteTpoaWRkZW47Jyk7XG4gICAgICAgICAgICB0ZXh0QXJlYXNbaV0uYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB1cGRhdGVUZXh0QXJlYXMpO1xuICAgICAgICAgICAgdGV4dEFyZWFzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBEZXRlcm1pbmUgdGFzayBpZFxuICAgICAgICAgICAgICAgIGxldCBteVRhc2tJRDtcbiAgICAgICAgICAgICAgICBsZXQgZGF0YVNyYztcbiAgICAgICAgICAgICAgICBpZiAodGV4dEFyZWFzW2ldLnBhcmVudE5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCd0YXNrLWNvbnRlbnQnKSkge1xuICAgICAgICAgICAgICAgICAgICBteVRhc2tJRCA9IHRleHRBcmVhc1tpXS5wYXJlbnROb2RlLnBhcmVudE5vZGUucGFyZW50Tm9kZS5kYXRhc2V0LmlkO1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3JjID0gJ3Rhc2stY29udGVudCc7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0ZXh0QXJlYXNbaV0ucGFyZW50Tm9kZS5jbGFzc0xpc3QuY29udGFpbnMoJ3Rhc2stZGV0YWlscycpKSB7XG4gICAgICAgICAgICAgICAgICAgIG15VGFza0lEID0gdGV4dEFyZWFzW2ldLnBhcmVudE5vZGUucGFyZW50Tm9kZS5kYXRhc2V0LmlkO1xuICAgICAgICAgICAgICAgICAgICBkYXRhU3JjID0gJ3Rhc2stZGV0YWlscyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIERldGVybWluZSB3aGljaCB0YXNrIHRvIHVwZGF0ZVxuICAgICAgICAgICAgICAgIGxldCBteVRhc2s7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCB0YXNrIGluIGN1cnJlbnRMaXN0LnRhc2tzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5pZCA9PT0gK215VGFza0lEKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBteVRhc2sgPSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXTtcbiAgICAgICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRhc2sgZGF0YVxuICAgICAgICAgICAgICAgIGlmIChkYXRhU3JjID09PSAndGFzay1jb250ZW50Jykge1xuICAgICAgICAgICAgICAgICAgICBteVRhc2submFtZSA9IHRleHRBcmVhc1tpXS52YWx1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGFTcmMgPT09ICd0YXNrLWRldGFpbHMnKSB7XG4gICAgICAgICAgICAgICAgICAgIG15VGFzay5kZXRhaWxzID0gdGV4dEFyZWFzW2ldLnZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoKTtcblxuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBIVE1MXG4gICAgICAgICAgICAgICAgdGV4dEFyZWFzW2ldLmlubmVySFRNTCA9IHRleHRBcmVhc1tpXS52YWx1ZTtcbiAgICAgICAgICAgICAgICB0ZXh0QXJlYXNbaV0ucHJldmlvdXNFbGVtZW50U2libGluZy5pbm5lckhUTUwgPSB0ZXh0QXJlYXNbaV0udmFsdWU7XG5cbiAgICAgICAgICAgICAgICB1cGRhdGVUYXNrc09yZGVyKGdldFNvcnRlZFRhc2tBcnJheSgpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlVGV4dEFyZWFzKCkge1xuICAgICAgICB0aGlzLnN0eWxlLmhlaWdodCA9IDA7XG4gICAgICAgIHRoaXMuc3R5bGUuaGVpZ2h0ID0gKHRoaXMuc2Nyb2xsSGVpZ2h0KSArIFwicHhcIjtcbiAgICB9XG5cbiAgICByZXR1cm4geyBhZGRUZXh0QXJlYXNMaXN0ZW5lcnMgfTtcbn0pKCk7XG5cbmNvbnN0IGV4cGFuZEVsZW1lbnRIYW5kbGVyID0gKCgpID0+IHtcbiAgICBjb25zdCBsaXN0TmFtZUhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsaXN0LW5hbWUnKTtcbiAgICBjb25zdCBkcm9wZG93bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZHJvcGRvd24nKTtcbiAgICBjb25zdCB0YXNrTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5kcm9wZG93bi10YXNrLW1lbnUnKTtcbiAgICBjb25zdCBjb21wbGV0ZWRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29tcGxldGVkLWJ1dHRvbicpO1xuICAgIGNvbnN0IGNvbXBsZXRlZExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29tcGxldGVkLWxpc3QnKTtcbiAgICBjb25zdCBhcnJvd1JpZ2h0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Fycm93LXJpZ2h0Jyk7XG4gICAgY29uc3QgbWFpbk1lbnVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFpbi1tZW51LWJ0bicpO1xuICAgIGxldCBsYXN0VXNlZFRhc2tNZW51QnRuO1xuXG4gICAgLy8gQWRkIGxpc3RlbmVycyBmb3IgZHJvcGRvd24gbWVudXNcbiAgICBsaXN0TmFtZUhlYWRlci5vbmNsaWNrID0gKCkgPT4gZXhwYW5kRWxlbWVudChjaG9vc2VEcm9wZG93bignZHJvcGRvd24tdGFzay1saXN0JykpO1xuICAgIG1haW5NZW51QnRuLm9uY2xpY2sgPSAoKSA9PiBleHBhbmRFbGVtZW50KGNob29zZURyb3Bkb3duKCdkcm9wZG93bi1tZW51JykpO1xuICAgIGNvbXBsZXRlZEJ1dHRvbi5vbmNsaWNrID0gKCkgPT4gZXhwYW5kRWxlbWVudChjb21wbGV0ZWRMaXN0KTtcblxuICAgIGFkZFRhc2tNZW51TGlzdGVuZXJzKCk7XG4gICAgZnVuY3Rpb24gYWRkVGFza01lbnVMaXN0ZW5lcnMoKSB7XG4gICAgICAgIGNvbnN0IHRhc2tNZW51QnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrLW1lbnUtYnV0dG9uJyk7XG4gICAgICAgIHRhc2tNZW51QnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiBidXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIC8vIEJpbmQgbWVudSB0byBjbGlja2VkIHRhc2tcbiAgICAgICAgICAgIGxhc3RVc2VkVGFza01lbnVCdG4gPSBidXR0b247XG4gICAgICAgICAgICBjdXJyZW50VGFza0hUTUwgPSBidXR0b24ucGFyZW50Tm9kZS5wYXJlbnROb2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICBjdXJyZW50VGFza0lEID0gY3VycmVudFRhc2tIVE1MLmRhdGFzZXQuaWQ7XG5cbiAgICAgICAgICAgIC8vIFNldCB0YXNrIG1lbnUgcG9zaXRpb25cbiAgICAgICAgICAgIGxldCB0YXNrUG9zaXRpb25ZID0gbGFzdFVzZWRUYXNrTWVudUJ0bi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS55O1xuICAgICAgICAgICAgLy8gUHJldmVudCBtZW51IGZyb20gb3ZlcmZsb3dpbmcgc2NyZWVuXG4gICAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQgLSB0YXNrUG9zaXRpb25ZIDwgdGFza01lbnUuc2Nyb2xsSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgdGFza01lbnUuc3R5bGUudG9wID0gZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQgLSB0YXNrTWVudS5zY3JvbGxIZWlnaHQgKyAncHgnO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXNrTWVudS5zdHlsZS50b3AgPSBsYXN0VXNlZFRhc2tNZW51QnRuLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnkgKyAncHgnO1xuICAgICAgICAgICAgfSAgICAgICAgIFxuICAgICAgICAgICAgZXhwYW5kRWxlbWVudCh0YXNrTWVudSwgZXZlbnQpO1xuICAgICAgICB9KSk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjaG9vc2VEcm9wZG93bihjbGFzc05hbWUpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkcm9wZG93bnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChkcm9wZG93bnNbaV0uY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSkpIHJldHVybiBkcm9wZG93bnNbaV07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBleHBhbmRFbGVtZW50KGVsZW1lbnQsIGV2ZW50KSB7XG4gICAgICAgIC8vIElmIHRhc2sgbWVudSBpcyBhY3RpdmUgYW5kIGFub3RoZXIgb25lIGlzIGNsaWNrZWQsIHJldHVyblxuICAgICAgICBpZiAoZXZlbnQgJiYgZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAoIWVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUubWF4SGVpZ2h0ID0gZWxlbWVudC5zY3JvbGxIZWlnaHQgKyBcInB4XCI7XG4gICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgLy8gSGFuZGxlIGNvbXBsZXRlZCBsaXN0IGFycm93IHBvc2l0aW9uXG4gICAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2NvbXBsZXRlZC1saXN0JykpIHtcbiAgICAgICAgICAgICAgICBhcnJvd1JpZ2h0LnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSguNDUpIHJvdGF0ZSg5MGRlZyknO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGUubWF4SGVpZ2h0ID0gJzAnO1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgLy8gSGFuZGxlIGNvbXBsZXRlZCBsaXN0IGFycm93IHBvc2l0aW9uXG4gICAgICAgICAgICBpZiAoZWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoJ2NvbXBsZXRlZC1saXN0JykpIHtcbiAgICAgICAgICAgICAgICBhcnJvd1JpZ2h0LnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSguNDUpJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhpZGUgbWVudXNcbiAgICBkb2N1bWVudC5vbmNsaWNrID0gKGV2ZW50KSA9PiB7XG4gICAgICAgIGRyb3Bkb3ducy5mb3JFYWNoKGRyb3Bkb3duID0+IHtcbiAgICAgICAgICAgIGlmIChkcm9wZG93bi5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFsaXN0TmFtZUhlYWRlci5jb250YWlucyhldmVudC50YXJnZXQpICYmIGRyb3Bkb3duLmNsYXNzTGlzdC5jb250YWlucygnZHJvcGRvd24tdGFzay1saXN0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgZXhwYW5kRWxlbWVudChkcm9wZG93bik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICghbWFpbk1lbnVCdG4uY29udGFpbnMoZXZlbnQudGFyZ2V0KSAmJiBkcm9wZG93bi5jbGFzc0xpc3QuY29udGFpbnMoJ2Ryb3Bkb3duLW1lbnUnKSkge1xuICAgICAgICAgICAgICAgICAgICBleHBhbmRFbGVtZW50KGRyb3Bkb3duKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGxhc3RVc2VkVGFza01lbnVCdG4gJiYgIWxhc3RVc2VkVGFza01lbnVCdG4uY29udGFpbnMoZXZlbnQudGFyZ2V0KSBcbiAgICAgICAgICAgICAgICAmJiBkcm9wZG93bi5jbGFzc0xpc3QuY29udGFpbnMoJ2Ryb3Bkb3duLXRhc2stbWVudScpKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4cGFuZEVsZW1lbnQoZHJvcGRvd24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIEV4cGFuZCAvIGNvbGxhcHNlIGNsaWNrZWQgdGFza1xuICAgIGZ1bmN0aW9uIGFkZFJlc2l6ZVRhc2tMaXN0ZW5lcigpIHtcblxuICAgICAgICBjb25zdCBhbGxUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrJyk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBhbGxUYXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0YXNrLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkgJiYgIXRhc2suY2xhc3NMaXN0LmNvbnRhaW5zKCdjb21wbGV0ZWQnKSBcbiAgICAgICAgICAgICAgICAmJiAhZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9yZS1pY29uJykpIHtcbiAgICAgICAgICAgICAgICAgICAgdGFzay5jbGFzc0xpc3QuYWRkKCd0YXNrLWNsaWNrZWQnKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0YXNrLmNsYXNzTGlzdC5yZW1vdmUoJ3Rhc2stY2xpY2tlZCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkYXRlVGltZUhhbmRsZXIudG9nZ2xlRGF0ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7IGFkZFRhc2tNZW51TGlzdGVuZXJzLCBhZGRSZXNpemVUYXNrTGlzdGVuZXIsIHRhc2tNZW51LCBleHBhbmRFbGVtZW50IH07XG59KSgpO1xuXG5cbmNvbnN0IGRyYWdBbmREcm9wSGFuZGxlciA9ICgoKSA9PiB7XG4gICAgbGV0IGRyYWdFbGVtZW50O1xuXG4gICAgZnVuY3Rpb24gYWRkRHJhZ0Ryb3BMaXN0ZW5lcnMoKSB7XG5cbiAgICAgICAgY29uc3QgYWxsVGFza3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGFzaycpO1xuICAgICAgICBhbGxUYXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgdGFzay5hZGRFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCBoYW5kbGVEcmFnU3RhcnQpO1xuICAgICAgICAgICAgdGFzay5hZGRFdmVudExpc3RlbmVyKCdkcmFnb3ZlcicsIGhhbmRsZURyYWdPdmVyKTtcbiAgICAgICAgICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgaGFuZGxlRHJhZ0xlYXZlKTtcbiAgICAgICAgICAgIHRhc2suYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2VuZCcsIGhhbmRsZURyYWdFbmQpO1xuICAgICAgICAgICAgdGFzay5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgaGFuZGxlRHJvcCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyYWdTdGFydCgpIHtcbiAgICAgICAgaWYgKGN1cnJlbnRMaXN0LnNvcnRNZXRob2QgIT09ICdjdXN0b20nKSByZXR1cm47XG4gICAgICAgIFxuICAgICAgICB0aGlzLnN0eWxlLm9wYWNpdHkgPSAnLjUnXG4gICAgICAgIGRyYWdFbGVtZW50ID0gdGhpcztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVEcmFnT3ZlcihlKSB7XG4gICAgICAgIGlmIChjdXJyZW50TGlzdC5zb3J0TWV0aG9kICE9PSAnY3VzdG9tJykgcmV0dXJuO1xuXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGV0IGxhc3RUYXNrID0gZ2V0TGFzdFRhc2tIVE1MKCk7XG5cbiAgICAgICAgLy8gQWRkIC8gcmVtb3ZlIGJvcmRlcnMgaW5kaWNhdGluZyBkcm9wIHBvc2l0aW9uXG4gICAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3Rhc2snKSAmJiB0aGlzICE9PSBkcmFnRWxlbWVudCkge1xuICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdkcmFnb3Zlci10b3AtYm9yZGVyJyk7XG4gICAgICAgICAgICBsYXN0VGFzay5jbGFzc0xpc3QucmVtb3ZlKCdkcmFnb3Zlci1ib3R0b20tYm9yZGVyJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGhhbmRsZURyYWdMZWF2ZSgpIHtcbiAgICAgICAgaWYgKGN1cnJlbnRMaXN0LnNvcnRNZXRob2QgIT09ICdjdXN0b20nKSByZXR1cm47XG5cbiAgICAgICAgLy8gQWRkIGJvcmRlciB0byBsYXN0IGVsZW1lbnQgYm90dG9tIHdoZW4gb3V0c2lkZSBvZiBkcm9wcGFibGUgYXJlYVxuICAgICAgICBsZXQgbGFzdFRhc2sgPSBnZXRMYXN0VGFza0hUTUwoKTtcblxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2RyYWdvdmVyLXRvcC1ib3JkZXInKTtcbiAgICAgICAgaWYgKGRyYWdFbGVtZW50ICE9PSBsYXN0VGFzaykge1xuICAgICAgICAgICAgbGFzdFRhc2suY2xhc3NMaXN0LmFkZCgnZHJhZ292ZXItYm90dG9tLWJvcmRlcicpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlRHJvcChlKSB7XG4gICAgICAgIGlmIChjdXJyZW50TGlzdC5zb3J0TWV0aG9kICE9PSAnY3VzdG9tJykgcmV0dXJuO1xuXG4gICAgICAgIGxldCBsYXN0VGFzayA9IGdldExhc3RUYXNrSFRNTCgpO1xuICAgICAgICBsZXQgZHJhZ0VsZW1lbnRJRCA9ICtkcmFnRWxlbWVudC5kYXRhc2V0LmlkO1xuICAgICAgICBsZXQgZHJvcFRhcmdldElEID0gK3RoaXMuZGF0YXNldC5pZDtcblxuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAgIGlmIChkcmFnRWxlbWVudCAhPT0gdGhpcyAmJiAhbGFzdFRhc2suY2xhc3NMaXN0LmNvbnRhaW5zKCdkcmFnb3Zlci1ib3R0b20tYm9yZGVyJykpIHtcbiAgICAgICAgICAgIGhhbmRsZURyb3BQb3NpdGlvbignYmVmb3JlJywgZHJhZ0VsZW1lbnRJRCwgZHJvcFRhcmdldElEKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlRHJhZ0VuZCgpIHtcbiAgICAgICAgaWYgKGN1cnJlbnRMaXN0LnNvcnRNZXRob2QgIT09ICdjdXN0b20nKSByZXR1cm47XG5cbiAgICAgICAgbGV0IGxhc3RUYXNrID0gZ2V0TGFzdFRhc2tIVE1MKCk7XG4gICAgICAgIGRyYWdFbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAnMSc7XG5cbiAgICAgICAgLy8gTW92ZSB0YXNrIHRvIGVuZCB3aGVuIGRyb3BwaW5nIGl0IG91dHNpZGUgb2YgZHJvcHBhYmxlIGFyZWFcbiAgICAgICAgaWYgKGRyYWdFbGVtZW50ICE9PSBsYXN0VGFzayAmJiBsYXN0VGFzay5jbGFzc0xpc3QuY29udGFpbnMoJ2RyYWdvdmVyLWJvdHRvbS1ib3JkZXInKSkge1xuICAgICAgICAgICAgbGV0IGRyYWdFbGVtZW50SUQgPSArZHJhZ0VsZW1lbnQuZGF0YXNldC5pZDtcbiAgICAgICAgICAgIGhhbmRsZURyb3BQb3NpdGlvbignZW5kJywgZHJhZ0VsZW1lbnRJRCk7XG4gICAgICAgIH1cbiAgICAgICAgcmVuZGVyVGFza3MoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRMYXN0VGFza0hUTUwoKSB7XG4gICAgICAgIGNvbnN0IGFsbFRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2snKTtcbiAgICAgICAgbGV0IGxhc3RUYXNrSUQgPSBnZXRMYXN0VGFza0lEKCk7XG4gICAgICAgIGxldCBsYXN0VGFzaztcblxuICAgICAgICBhbGxUYXNrcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgaWYgKCt0YXNrLmRhdGFzZXQuaWQgPT09IGxhc3RUYXNrSUQpIHtcbiAgICAgICAgICAgICAgICBsYXN0VGFzayA9IHRhc2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbGFzdFRhc2s7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgYWRkRHJhZ0Ryb3BMaXN0ZW5lcnMgfTtcbn0pKCk7XG5cbmZ1bmN0aW9uIGFkZFRhc2tMaXN0ZW5lcnMoKSB7XG4gICAgZGF0ZVRpbWVIYW5kbGVyLmFkZERhdGVMaXN0ZW5lcnMoKTtcbiAgICB0ZXh0SW5wdXRIYW5kbGVyLmFkZFRleHRBcmVhc0xpc3RlbmVycygpO1xuICAgIGV4cGFuZEVsZW1lbnRIYW5kbGVyLmFkZFRhc2tNZW51TGlzdGVuZXJzKCk7XG4gICAgZXhwYW5kRWxlbWVudEhhbmRsZXIuYWRkUmVzaXplVGFza0xpc3RlbmVyKClcbiAgICBkcmFnQW5kRHJvcEhhbmRsZXIuYWRkRHJhZ0Ryb3BMaXN0ZW5lcnMoKTtcbiAgICBhZGRUb2dnbGVDb21wbGV0ZWRMaXN0ZW5lcnMoKTtcbiAgICBkZWxldGVDb21wbGV0ZWRUYXNrTGlzdGVuZXJzKCk7XG59XG5cbmNvbnN0IGxpc3ROYW1lVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdC10ZXh0LXRlbXBsYXRlJyk7XG5jb25zdCB0YXNrTGlzdEJyZWFrTGluZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcmVwZW5kLXdpdGgtbGlzdCcpO1xuY29uc3QgdGFza01lbnVCcmVha0xpbmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXBwZW5kLWxpc3QnKTtcbmNvbnN0IHRhc2tMaXN0SGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2xpc3QtbmFtZS10ZXh0Jyk7XG5sZXQgc3dpdGNoTGlzdEJ1dHRvbnM7XG5cbnJlbmRlclRhc2tMaXN0cygpO1xuZnVuY3Rpb24gcmVuZGVyVGFza0xpc3RzKCkge1xuICAgIC8vIFJlbmRlciBkZWZhdWx0IGxpc3RcbiAgICBpZiAoIXRhc2tMaXN0c1swXSkge1xuICAgICAgICBjcmVhdGVEZWZhdWx0TGlzdCgpO1xuICAgICAgICBjdXJyZW50TGlzdCA9IHRhc2tMaXN0c1swXTtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIHByZXZpb3VzIGxpc3RcbiAgICB3aGlsZSAodGFza0xpc3RCcmVha0xpbmUucHJldmlvdXNTaWJsaW5nKSB0YXNrTGlzdEJyZWFrTGluZS5wcmV2aW91c1NpYmxpbmcucmVtb3ZlKCk7XG4gICAgd2hpbGUgKHRhc2tNZW51QnJlYWtMaW5lLm5leHRTaWJsaW5nKSB0YXNrTWVudUJyZWFrTGluZS5uZXh0U2libGluZy5yZW1vdmUoKTtcbiAgICAvLyBSZW5kZXIgbGlzdCBpbiB0YXNrIGxpc3RzIGFuZCB0YXNrIG1lbnVcbiAgICB0YXNrTGlzdHMuZm9yRWFjaChsaXN0ID0+IHtcbiAgICAgICAgbGV0IG5ld0xpc3QgPSBsaXN0TmFtZVRlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgbGV0IG5ld0xpc3QyID0gbGlzdE5hbWVUZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICAgICAgbmV3TGlzdC5jbGFzc0xpc3QucmVtb3ZlKCdsaXN0LXRleHQtdGVtcGxhdGUnKTtcbiAgICAgICAgbmV3TGlzdC5jbGFzc0xpc3QuYWRkKCdzd2l0Y2gtbGlzdCcpO1xuICAgICAgICBuZXdMaXN0Mi5jbGFzc0xpc3QucmVtb3ZlKCdsaXN0LXRleHQtdGVtcGxhdGUnKTtcbiAgICAgICAgbmV3TGlzdDIuY2xhc3NMaXN0LmFkZCgnbW92ZS10YXNrLWJ0bicpO1xuXG4gICAgICAgIHRhc2tMaXN0QnJlYWtMaW5lLmJlZm9yZShuZXdMaXN0KTtcbiAgICAgICAgZXhwYW5kRWxlbWVudEhhbmRsZXIudGFza01lbnUuYXBwZW5kKG5ld0xpc3QyKTtcblxuICAgICAgICBuZXdMaXN0Lmxhc3RDaGlsZC5pbm5lckhUTUwgPSBsaXN0Lm5hbWU7XG4gICAgICAgIG5ld0xpc3QyLmxhc3RDaGlsZC5pbm5lckhUTUwgPSBsaXN0Lm5hbWU7XG5cbiAgICAgICAgLy8gTWFrZSBjaGVjayBtYXJrIHZpc2libGUgdGhlIGN1cnJlbnQgbGlzdFxuICAgICAgICBpZiAobGlzdCA9PT0gY3VycmVudExpc3QpIG5ld0xpc3QuZmlyc3RDaGlsZC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgaWYgKGxpc3QgPT09IGN1cnJlbnRMaXN0KSBuZXdMaXN0Mi5maXJzdENoaWxkLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgIH0pO1xuICAgIHN3aXRjaExpc3RCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN3aXRjaC1saXN0Jyk7XG4gICAgbW92ZVRhc2tCdXR0b25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1vdmUtdGFzay1idG4nKTtcbiAgICBhZGRTd2l0Y2hMaXN0TGlzdGVuZXJzKHN3aXRjaExpc3RCdXR0b25zKTtcbiAgICByZW5kZXJUYXNrTGlzdEhlYWRlcihjdXJyZW50TGlzdCk7XG4gICAgYWRkTW92ZVRhc2tMaXN0ZW5lcnMoKTtcbn1cblxuZnVuY3Rpb24gYWRkU3dpdGNoTGlzdExpc3RlbmVycygpIHtcbiAgICBzd2l0Y2hMaXN0QnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XG4gICAgICAgIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKCl7IHN3aXRjaExpc3QoYnV0dG9uKSB9KTtcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gc3dpdGNoTGlzdChidXR0b24pIHtcbiAgICBsZXQgY2xpY2tlZExpc3ROYW1lID0gYnV0dG9uLmxhc3RDaGlsZC5pbm5lckhUTUw7XG4gICAgaWYgKGN1cnJlbnRMaXN0LnRhc2tzLm5hbWUgPT09IGNsaWNrZWRMaXN0TmFtZSkgcmV0dXJuO1xuXG4gICAgdGFza0xpc3RzLmZvckVhY2gobGlzdCA9PiB7XG4gICAgICAgIGlmIChsaXN0Lm5hbWUgPT09IGNsaWNrZWRMaXN0TmFtZSkge1xuICAgICAgICAgICAgc2V0Q3VycmVudExpc3QobGlzdCk7XG4gICAgICAgICAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoKTtcbiAgICAgICAgICAgIHJlbmRlclRhc2tMaXN0cygpO1xuICAgICAgICAgICAgcmVuZGVyVGFza3MoKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG4vLyBSZW5kZXIgdGFzayBsaXN0IGhlYWRlclxuZnVuY3Rpb24gcmVuZGVyVGFza0xpc3RIZWFkZXIoY3VycmVudExpc3QpIHtcbiAgICB0YXNrTGlzdEhlYWRlci5pbm5lckhUTUwgPSBjdXJyZW50TGlzdC5uYW1lO1xufVxuXG5jb25zdCB0YXNrc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrcy1jb250YWluZXInKTtcbmNvbnN0IHRhc2tUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50YXNrLXRlbXBsYXRlJyk7XG5jb25zdCBjb21wbGV0ZWRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbXBsZXRlZC1saXN0Jyk7XG5jb25zdCBjb21wbGV0ZWRUYXNrVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29tcGxldGVkLXRhc2stdGVtcGxhdGUnKTtcblxucmVuZGVyVGFza3MoKTtcbmZ1bmN0aW9uIHJlbmRlclRhc2tzKCkge1xuICAgIHRhc2tzQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuICAgIGNvbXBsZXRlZExpc3QuaW5uZXJIVE1MID0gJyc7XG5cbiAgICBmb3IgKGNvbnN0IHRhc2sgaW4gY3VycmVudExpc3QudGFza3MpIHtcbiAgICAgICAgaWYgKCF0YXNrKSByZXR1cm47XG5cbiAgICAgICAgLy8gUmVuZGVyIG9uZ29pbmcgdGFza3NcbiAgICAgICAgaWYgKHRhc2sgJiYgdHlwZW9mIGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdID09PSAnb2JqZWN0JyAmJiBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5jb21wbGV0ZWQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAvLyBBZGQgbmV3IHRhc2tcbiAgICAgICAgICAgIGxldCBuZXdUYXNrID0gdGFza1RlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIG5ld1Rhc2suY2xhc3NMaXN0LnJlbW92ZSgndGFzay10ZW1wbGF0ZScpO1xuICAgICAgICAgICAgdGFza3NDb250YWluZXIuYXBwZW5kKG5ld1Rhc2spO1xuXG4gICAgICAgICAgICAvLyBGaWxsIHRhc2sgZGF0YVxuICAgICAgICAgICAgbmV3VGFzay5zdHlsZS5vcmRlciA9IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLnBvc2l0aW9uO1xuICAgICAgICAgICAgbmV3VGFzay5kYXRhc2V0LmlkID0gY3VycmVudExpc3QudGFza3NbdGFza10uaWQ7XG5cbiAgICAgICAgICAgIG5ld1Rhc2suY2hpbGRyZW5bMF0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMF0uaW5uZXJIVE1MID0gY3VycmVudExpc3QudGFza3NbdGFza10ubmFtZTtcbiAgICAgICAgICAgIG5ld1Rhc2suY2hpbGRyZW5bMF0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMF0ubmV4dEVsZW1lbnRTaWJsaW5nLnZhbHVlID0gY3VycmVudExpc3QudGFza3NbdGFza10ubmFtZTtcblxuICAgICAgICAgICAgbmV3VGFzay5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5pbm5lckhUTUwgPSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5kZXRhaWxzO1xuICAgICAgICAgICAgbmV3VGFzay5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5uZXh0RWxlbWVudFNpYmxpbmcudmFsdWUgPSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5kZXRhaWxzO1xuXG4gICAgICAgICAgICBpZiAoY3VycmVudExpc3QudGFza3NbdGFza10uZGF0ZVRpbWUpIHtcbiAgICAgICAgICAgICAgICBsZXQgZGF0ZVBpY2tlciA9IG5ld1Rhc2suY2hpbGRyZW5bMl0uY2hpbGRyZW5bMV07XG4gICAgICAgICAgICAgICAgbGV0IGRhdGUgPSBjdXJyZW50TGlzdC50YXNrc1t0YXNrXS5kYXRlVGltZTtcbiAgICAgICAgICAgICAgICBsZXQgZGVzdGluYXRpb24gPSBkYXRlUGlja2VyLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG5cbiAgICAgICAgICAgICAgICBkYXRlUGlja2VyLnNldEF0dHJpYnV0ZSgndmFsdWUnLCBkYXRlKTtcbiAgICAgICAgICAgICAgICBkYXRlVGltZUhhbmRsZXIuY29udmVydERhdGUoZGF0ZSwgZGVzdGluYXRpb24pO1xuICAgICAgICAgICAgICAgIGRhdGVUaW1lSGFuZGxlci50b2dnbGVEYXRlKCk7XG4gICAgICAgICAgICB9ICAgICAgXG4gICAgICAgIC8vIFJlbmRlciBjb21wbGV0ZWQgdGFza3MgICAgICBcbiAgICAgICAgfSBlbHNlIGlmICh0YXNrICYmIHR5cGVvZiBjdXJyZW50TGlzdC50YXNrc1t0YXNrXSA9PT0gJ29iamVjdCcgJiYgY3VycmVudExpc3QudGFza3NbdGFza10uY29tcGxldGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAvLyBBZGQgbmV3IHRhc2tcbiAgICAgICAgICAgIGxldCBuZXdUYXNrID0gY29tcGxldGVkVGFza1RlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgIG5ld1Rhc2suY2xhc3NMaXN0LnJlbW92ZSgnY29tcGxldGVkLXRhc2stdGVtcGxhdGUnKTtcbiAgICAgICAgICAgIGNvbXBsZXRlZExpc3QuYXBwZW5kKG5ld1Rhc2spO1xuXG4gICAgICAgICAgICAvLyBGaWxsIHRhc2sgZGF0YVxuICAgICAgICAgICAgbmV3VGFzay5kYXRhc2V0LmlkID0gY3VycmVudExpc3QudGFza3NbdGFza10uaWQ7XG4gICAgICAgICAgICBuZXdUYXNrLmNoaWxkcmVuWzBdLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmlubmVySFRNTCA9IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLm5hbWU7XG4gICAgICAgICAgICBuZXdUYXNrLmNoaWxkcmVuWzFdLmNoaWxkcmVuWzBdLmlubmVySFRNTCA9IGN1cnJlbnRMaXN0LnRhc2tzW3Rhc2tdLmRldGFpbHM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkVGFza0xpc3RlbmVycygpO1xuICAgIHNvcnRUYXNrcygpO1xufVxuXG4vLyBDcmVhdGUgbmV3IGxpc3RcbmNvbnN0IGFkZExpc3REb25lQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZC1saXN0LWRvbmUtYnRuJyk7XG5hZGRMaXN0RG9uZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBpZiAobmV3TGlzdElucHV0LnZhbHVlKSB7XG4gICAgICAgIC8vIEVuc3VyZSB1bmlxdWUgbGlzdCBuYW1lXG4gICAgICAgIGxldCB1bmlxdWUgPSB0cnVlO1xuICAgICAgICB0YXNrTGlzdHMuZm9yRWFjaChsaXN0ID0+IHtcbiAgICAgICAgICAgIGlmIChsaXN0Lm5hbWUgPT09IG5ld0xpc3RJbnB1dC52YWx1ZSkge1xuICAgICAgICAgICAgICAgIHVuaXF1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG5ld0xpc3RJbnB1dC5zZXRDdXN0b21WYWxpZGl0eSgnQ2hvb3NlIHVuaXF1ZSBsaXN0IG5hbWUuJyk7XG4gICAgICAgICAgICAgICAgbmV3TGlzdElucHV0LnJlcG9ydFZhbGlkaXR5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAodW5pcXVlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBsZXQgbmV3TGlzdCA9IExpc3RGYWN0b3J5KG5ld0xpc3RJbnB1dC52YWx1ZSk7XG4gICAgICAgICAgICBuZXdMaXN0SW5wdXQudmFsdWUgPSAnJztcbiAgICAgICAgICAgIHRhc2tMaXN0cy5wdXNoKG5ld0xpc3QpO1xuICAgICAgICAgICAgc2V0Q3VycmVudExpc3QobmV3TGlzdCk7XG4gICAgICAgICAgICBzYXZlVG9Mb2NhbFN0b3JhZ2UoKTtcbiAgICBcbiAgICAgICAgICAgIHJlbmRlclRhc2tMaXN0cygpO1xuICAgICAgICAgICAgcmVuZGVyVGFza3MoKTtcbiAgICAgICAgICAgIHNhdmVUb0xvY2FsU3RvcmFnZSgpO1xuICAgICAgICAgICAgbW9kYWxzLmZvckVhY2gobW9kYWwgPT4gbW9kYWwuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJykpO1xuICAgICAgICB9XG4gICAgfVxufSk7XG5cbi8vIE1vdmUgdGFzayB0byBkaWZmZXJlbnQgbGlzdFxuZnVuY3Rpb24gYWRkTW92ZVRhc2tMaXN0ZW5lcnMoKSB7XG4gICAgbW92ZVRhc2tCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgbGV0IGRlc3RpbmF0aW9uTGlzdE5hbWUgPSBidXR0b24ubGFzdENoaWxkLmlubmVySFRNTDtcbiAgICAgICAgbW92ZVRhc2soY3VycmVudFRhc2tJRCwgZGVzdGluYXRpb25MaXN0TmFtZSk7XG4gICAgfSkpO1xufVxuXG4vLyBEZWxldGUgb25nb2luZyB0YXNrXG5jb25zdCBkZWxUYXNrTWVudUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkZWxldGUtdGFzay1tZW51LWJ1dHRvbicpO1xuZGVsVGFza01lbnVCdG4ub25jbGljayA9ICgpID0+IHtcbiAgICBkZWxldGVUYXNrKGN1cnJlbnRUYXNrSUQpO1xuICAgIHJlbmRlclRhc2tzKCk7XG59O1xuXG4vLyBEZWxldGUgY29tcGxldGVkIHRhc2tcbmZ1bmN0aW9uIGRlbGV0ZUNvbXBsZXRlZFRhc2tMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgZGVsZXRlVGFza0J1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGVsZXRlLXRhc2snKVxuICAgIGRlbGV0ZVRhc2tCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgIFxuICAgICAgICBpZiAoYnV0dG9uLnBhcmVudE5vZGUucGFyZW50Tm9kZS5wYXJlbnROb2RlLmNsYXNzTGlzdC5jb250YWlucygndGFzaycpKSB7XG4gICAgICAgICAgICBsZXQgY29tcGxldGVkVGFzayA9IGJ1dHRvbi5wYXJlbnROb2RlLnBhcmVudE5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgIGxldCBjb21wbGV0ZWRUYXNrSUQgPSBjb21wbGV0ZWRUYXNrLmRhdGFzZXQuaWQ7XG4gICAgICAgICAgICBjb21wbGV0ZWRUYXNrLnJlbW92ZSgpO1xuICAgICAgICAgICAgZGVsZXRlVGFzayhjb21wbGV0ZWRUYXNrSUQpO1xuICAgICAgICAgICAgcmVuZGVyVGFza3MoKTtcbiAgICAgICAgfVxuICAgIH0pKTtcbn1cblxuZnVuY3Rpb24gYWRkVG9nZ2xlQ29tcGxldGVkTGlzdGVuZXJzKCkge1xuICAgIGNvbnN0IHRvZ2dsZUNvbXBsZXRlZEJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudG9nZ2xlLWNvbXBsZXRlZC1idG4nKTtcbiAgICB0b2dnbGVDb21wbGV0ZWRCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgbGV0IHRhc2tIVE1MID0gYnV0dG9uLnBhcmVudE5vZGUucGFyZW50Tm9kZS5wYXJlbnROb2RlO1xuICAgICAgICBsZXQgdGFza0lEID0gdGFza0hUTUwuZGF0YXNldC5pZFxuICAgICAgICB0b2dnbGVDb21wbGV0ZWRTdGF0dXModGFza0lEKTtcbiAgICAgICAgcmVuZGVyVGFza3MoKTtcbiAgICAgICAgLy8gUmVzZXQgY29tcGxldGVkIGxpc3QgaGVpZ2h0XG4gICAgICAgIGV4cGFuZEVsZW1lbnRIYW5kbGVyLmV4cGFuZEVsZW1lbnQoY29tcGxldGVkTGlzdCk7XG4gICAgICAgIGV4cGFuZEVsZW1lbnRIYW5kbGVyLmV4cGFuZEVsZW1lbnQoY29tcGxldGVkTGlzdCk7XG4gICAgfSkpO1xufVxuXG5mdW5jdGlvbiBzZWxlY3ROZXdUYXNrKCkge1xuICAgIGNvbnN0IGFsbFRhc2tzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhc2snKTtcblxuICAgIGFsbFRhc2tzLmZvckVhY2godGFzayA9PiB7XG4gICAgICAgIGNvbnN0IHRhc2tDb250ZW50ID0gdGFzay5jaGlsZHJlblswXS5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5pbm5lckhUTUw7XG4gICAgICAgIGNvbnN0IHRhc2tEZXRhaWxzID0gdGFzay5jaGlsZHJlblsxXS5jaGlsZHJlblswXS5pbm5lckhUTUw7XG4gICAgICAgIGNvbnN0IHRhc2tEYXRlRGl2ID0gdGFzay5jaGlsZHJlblsyXTtcbiAgICAgICAgY29uc3QgdGFza09yZGVyID0gdGFzay5zdHlsZS5vcmRlcjtcbiAgICAgICAgY29uc3QgdGFza0NvbnRlbnRJbnB1dCA9IHRhc2suY2hpbGRyZW5bMF0uY2hpbGRyZW5bMV0uY2hpbGRyZW5bMV07XG5cbiAgICAgICAgaWYgKCt0YXNrT3JkZXIgPT09IDEgJiYgdGFza0NvbnRlbnQgPT09ICcnICYmIHRhc2tEZXRhaWxzID09PSAnJyAmJiB0YXNrRGF0ZURpdi5jbGFzc0xpc3QuY29udGFpbnMoJ2hpZGRlbicpKSB7XG4gICAgICAgICAgICB0YXNrLmNsYXNzTGlzdC5hZGQoJ3Rhc2stY2xpY2tlZCcpO1xuICAgICAgICAgICAgdGFza0NvbnRlbnRJbnB1dC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cbi8vIFNvcnQgSFRNTFxuZnVuY3Rpb24gdXBkYXRlVGFza3NPcmRlcihzb3J0ZWRUYXNrQXJyYXkpIHtcbiAgICBjb25zdCBhbGxUYXNrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YXNrJyk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNvcnRlZFRhc2tBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICBhbGxUYXNrcy5mb3JFYWNoKHRhc2tIVE1MID0+IHtcbiAgICAgICAgICAgIGxldCB0YXNrSHRtbElEID0gdGFza0hUTUwuZGF0YXNldC5pZDtcblxuICAgICAgICAgICAgaWYgKHNvcnRlZFRhc2tBcnJheVtpXVsxXS5pZCA9PT0gK3Rhc2tIdG1sSUQpIHtcbiAgICAgICAgICAgICAgICB0YXNrSFRNTC5zdHlsZS5vcmRlciA9IGkgKyAxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHNldFNvcnRDaGVja0ljb24oKSB7XG4gICAgY29uc3Qgc29ydEJ1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc29ydC1idG4nKTtcbiAgICBsZXQgc29ydE1ldGhvZCA9IGN1cnJlbnRMaXN0LnNvcnRNZXRob2Q7XG5cbiAgICBpZiAoc29ydE1ldGhvZCA9PT0gJ2N1c3RvbScpIHtcbiAgICAgICAgc29ydE1ldGhvZCA9ICdzb3J0LWN1c3RvbS1idG4nO1xuICAgIH0gZWxzZSBpZiAoc29ydE1ldGhvZCA9PT0gJ2RhdGUnKSB7XG4gICAgICAgIHNvcnRNZXRob2QgPSAnc29ydC1kYXRlLWJ0bic7XG4gICAgfSBlbHNlIGlmIChzb3J0TWV0aG9kID09PSAnbmFtZScpIHtcbiAgICAgICAgc29ydE1ldGhvZCA9ICdzb3J0LW5hbWUtYnRuJztcbiAgICB9XG5cbiAgICBzb3J0QnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7XG4gICAgICAgIGlmIChidXR0b24uaWQgPT09IHNvcnRNZXRob2QpIHtcbiAgICAgICAgICAgIGJ1dHRvbi5maXJzdENoaWxkLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnV0dG9uLmZpcnN0Q2hpbGQuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuLy8gTW9kYWxzXG5jb25zdCBjcmVhdGVMaXN0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NyZWF0ZS1saXN0LWJ0bicpO1xuY29uc3QgcmVuYW1lTGlzdEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZW5hbWUtbGlzdC1idG4nKTtcbmNvbnN0IGFkZExpc3RNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtbGlzdC1tb2RhbCcpO1xuY29uc3QgcmVuYW1lTGlzdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3JlbmFtZS1saXN0LW1vZGFsJyk7XG5jb25zdCBtb2RhbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWwnKTtcbmNvbnN0IG1vZGFsQ2FuY2VsQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYW5jZWwtYnRuJyk7XG5jb25zdCBuZXdMaXN0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmV3LWxpc3QtaW5wdXQnKTtcbmNvbnN0IHJlbmFtZUxpc3RJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNyZW5hbWUtbGlzdC1pbnB1dCcpO1xuXG5tb2RhbENhbmNlbEJ1dHRvbnMuZm9yRWFjaChidXR0b24gPT4gYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIG1vZGFscy5mb3JFYWNoKG1vZGFsID0+IG1vZGFsLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpKTtcbn0pKTtcblxuY3JlYXRlTGlzdEJ0bi5vbmNsaWNrID0gKCkgPT4ge1xuICAgIGFkZExpc3RNb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICBuZXdMaXN0SW5wdXQuZm9jdXMoKTtcbn07XG5yZW5hbWVMaXN0QnRuLm9uY2xpY2sgPSAoKSA9PiB7XG4gICAgcmVuYW1lTGlzdE1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgIHJlbmFtZUxpc3RJbnB1dC5mb2N1cygpO1xufTtcblxuZXhwb3J0IHsgcmVuZGVyVGFza0xpc3RzLCByZW5kZXJUYXNrcywgc2V0U29ydENoZWNrSWNvbiwgdXBkYXRlVGFza3NPcmRlciwgc2VsZWN0TmV3VGFzayB9OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuc2Nzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsIk1hdGgiLCJwb3ciLCJtaWxsaXNlY29uZHNJbkhvdXIiLCJyZXF1aXJlZEFyZ3MiLCJyZXF1aXJlZCIsImFyZ3MiLCJUeXBlRXJyb3IiLCJ0b0ludGVnZXIiLCJkaXJ0eU51bWJlciIsIk5hTiIsIm51bWJlciIsIk51bWJlciIsImlzTmFOIiwiY2VpbCIsImZsb29yIiwicGF0dGVybnMiLCJkYXRlVGltZURlbGltaXRlciIsInRpbWVab25lRGVsaW1pdGVyIiwidGltZXpvbmUiLCJkYXRlUmVnZXgiLCJ0aW1lUmVnZXgiLCJ0aW1lem9uZVJlZ2V4Iiwic3BsaXREYXRlU3RyaW5nIiwiZGF0ZVN0cmluZyIsInRpbWVTdHJpbmciLCJkYXRlU3RyaW5ncyIsImFycmF5Iiwic3BsaXQiLCJ0ZXN0IiwiZGF0ZSIsInN1YnN0ciIsInRva2VuIiwiZXhlYyIsInRpbWUiLCJwYXJzZVllYXIiLCJhZGRpdGlvbmFsRGlnaXRzIiwicmVnZXgiLCJSZWdFeHAiLCJjYXB0dXJlcyIsIm1hdGNoIiwieWVhciIsInJlc3REYXRlU3RyaW5nIiwicGFyc2VJbnQiLCJjZW50dXJ5Iiwic2xpY2UiLCJwYXJzZURhdGUiLCJEYXRlIiwiaXNXZWVrRGF0ZSIsImRheU9mWWVhciIsInBhcnNlRGF0ZVVuaXQiLCJtb250aCIsImRheSIsIndlZWsiLCJkYXlPZldlZWsiLCJfeWVhciIsInZhbGlkYXRlV2Vla0RhdGUiLCJpc29XZWVrWWVhciIsInNldFVUQ0Z1bGxZZWFyIiwiZGlmZiIsImdldFVUQ0RheSIsInNldFVUQ0RhdGUiLCJnZXRVVENEYXRlIiwiZGF5T2ZJU09XZWVrWWVhciIsImRheXNJbk1vbnRocyIsImlzTGVhcFllYXJJbmRleCIsInZhbGlkYXRlRGF0ZSIsInZhbGlkYXRlRGF5T2ZZZWFyRGF0ZSIsIm1heCIsInZhbHVlIiwicGFyc2VUaW1lIiwiaG91cnMiLCJwYXJzZVRpbWVVbml0IiwibWludXRlcyIsInNlY29uZHMiLCJ2YWxpZGF0ZVRpbWUiLCJwYXJzZUZsb2F0IiwicGFyc2VUaW1lem9uZSIsInRpbWV6b25lU3RyaW5nIiwic2lnbiIsIl9ob3VycyIsInZhbGlkYXRlVGltZXpvbmUiLCJsb2NhbFN0b3JhZ2VXb3JrcyIsInN0b3JhZ2VJc0VtcHR5Iiwic2F2ZVRvTG9jYWxTdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwiY2xlYXIiLCJzZXRJdGVtIiwidGFza0xpc3RzIiwiY3VycmVudExpc3QiLCJuYW1lIiwidHlwZSIsInN0b3JhZ2UiLCJ4IiwicmVtb3ZlSXRlbSIsIkRPTUV4Y2VwdGlvbiIsImNvZGUiLCJzdG9yYWdlQXZhaWxhYmxlIiwiTGlzdEZhY3RvcnkiLCJzb3J0TWV0aG9kIiwidGFza3MiLCJUYXNrRmFjdG9yeSIsImRldGFpbHMiLCJkYXRlVGltZSIsInBvc2l0aW9uIiwiY29tcGxldGVkIiwic2V0Q3VycmVudExpc3QiLCJnZXRJdGVtIiwicGFyc2UiLCJsb2FkZWRDdXJyZW50TGlzdE5hbWUiLCJmb3JFYWNoIiwibG9hZExvY2FsU3RvcmFnZSIsIndlZWtlbmQiLCJkYW5jZSIsInNsZWVwIiwiZWF0IiwiY29vayIsImxhemUiLCJ3b3JrIiwibGF5RG93biIsImNyeSIsIm1vZGFscyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZW5hbWVMaXN0SW5wdXQiLCJnZXRVbmlxdWVOYW1lIiwibmV3VGFza05hbWUiLCJ1bmlxdWUiLCJ0YXNrIiwiZ2VuZXJhdGVSYW5kb21TdHJpbmciLCJjaGFyYWN0ZXJzIiwiY2hhckF0IiwicmFuZG9tIiwiZGVsZXRlVGFzayIsInRhc2tJRCIsInRhc2tUb0RlbGV0ZU5hbWUiLCJyZWZyZXNoVGFza3NJRCIsImNvdW50ZXIiLCJhZGRFdmVudExpc3RlbmVyIiwicmVuZGVyVGFza0xpc3RzIiwicmVuZGVyVGFza3MiLCJtb2RhbCIsImNsYXNzTGlzdCIsImFkZCIsIm9uY2xpY2siLCJpbmRleE9mIiwidW5pcXVlQ2hlY2siLCJpbmNyZWFzZVRhc2tzUG9zaXRpb24iLCJzZXRUaW1lb3V0Iiwic2VsZWN0TmV3VGFzayIsInNvcnROYW1lQnRuIiwic29ydERhdGVCdG4iLCJzb3J0VGFza3MiLCJzb3J0QnV0dG9ucyIsImJ1dHRvbiIsInNldFNvcnRDaGVja0ljb24iLCJ1cGRhdGVUYXNrc09yZGVyIiwiZ2V0U29ydGVkVGFza0FycmF5IiwiY3VycmVudExpc3RBcnJheSIsImVudHJpZXMiLCJzb3J0IiwiYiIsImFhIiwidG9Mb3dlckNhc2UiLCJiYiIsImV4Y2x1ZGVDb21wbGV0ZWQiLCJvbmdvaW5nVGFza0FycmF5IiwiaGFuZGxlRHJvcFBvc2l0aW9uIiwibmV3UG9zaXRpb24iLCJ0YXNrVG9Nb3ZlSUQiLCJkcm9wVGFyZ2V0SUQiLCJ0YXNrVG9Nb3ZlIiwidGFza1RvTW92ZVBvc2l0aW9uIiwiZHJvcFRhcmdldFBvc2l0aW9uIiwic29ydGVkVGFza3NBcnJheSIsImN1cnJlbnRUYXNrSFRNTCIsImN1cnJlbnRUYXNrSUQiLCJtb3ZlVGFza0J1dHRvbnMiLCJkYXRlVGltZUhhbmRsZXIiLCJjdXJyZW50UGlja2VyIiwiZGF0ZURpc3BsYXlEaXYiLCJhZGREYXRlTGlzdGVuZXJzIiwidGltZVBpY2tlcnMiLCJkaXYiLCJwaWNrZXIiLCJjb250YWlucyIsInNob3dQaWNrZXIiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiY29udmVydERhdGUiLCJ0b2dnbGVEYXRlIiwiZGVzdGluYXRpb24iLCJteVRhc2siLCJkYXRlVGltZUFycmF5IiwiYXJndW1lbnQiLCJfb3B0aW9ucyRhZGRpdGlvbmFsRGkiLCJhcmd1bWVudHMiLCJSYW5nZUVycm9yIiwicGFyc2VZZWFyUmVzdWx0IiwiZ2V0VGltZSIsIm9mZnNldCIsInRpbWVzdGFtcCIsImRpcnR5RGF0ZSIsInNldEZ1bGxZZWFyIiwiZ2V0VVRDRnVsbFllYXIiLCJnZXRVVENNb250aCIsInNldEhvdXJzIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsImdldFVUQ01pbGxpc2Vjb25kcyIsInBhcnNlSVNPIiwidG9Mb2NhbGVUaW1lU3RyaW5nIiwidGltZVN0eWxlIiwiaG91cjEyIiwibXlUYXNrSUQiLCJkYXRhc2V0IiwiaW5jbHVkZXMiLCJpbm5lckhUTUwiLCJ0ZXh0SW5wdXRIYW5kbGVyIiwidXBkYXRlVGV4dEFyZWFzIiwiaGVpZ2h0IiwiYWRkVGV4dEFyZWFzTGlzdGVuZXJzIiwidGV4dEFyZWFzIiwic2Nyb2xsSGVpZ2h0IiwiZGF0YVNyYyIsImV4cGFuZEVsZW1lbnRIYW5kbGVyIiwibGlzdE5hbWVIZWFkZXIiLCJkcm9wZG93bnMiLCJ0YXNrTWVudSIsImNvbXBsZXRlZEJ1dHRvbiIsImNvbXBsZXRlZExpc3QiLCJhcnJvd1JpZ2h0IiwibWFpbk1lbnVCdG4iLCJsYXN0VXNlZFRhc2tNZW51QnRuIiwiYWRkVGFza01lbnVMaXN0ZW5lcnMiLCJldmVudCIsInRhc2tQb3NpdGlvblkiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ5IiwiYm9keSIsInRvcCIsImV4cGFuZEVsZW1lbnQiLCJjaG9vc2VEcm9wZG93biIsImNsYXNzTmFtZSIsIm1heEhlaWdodCIsImRpc3BsYXkiLCJ0cmFuc2Zvcm0iLCJkcm9wZG93biIsImFkZFJlc2l6ZVRhc2tMaXN0ZW5lciIsImFsbFRhc2tzIiwiZHJhZ0FuZERyb3BIYW5kbGVyIiwiZHJhZ0VsZW1lbnQiLCJoYW5kbGVEcmFnU3RhcnQiLCJvcGFjaXR5IiwiaGFuZGxlRHJhZ092ZXIiLCJwcmV2ZW50RGVmYXVsdCIsImxhc3RUYXNrIiwiZ2V0TGFzdFRhc2tIVE1MIiwiaGFuZGxlRHJhZ0xlYXZlIiwiaGFuZGxlRHJvcCIsImRyYWdFbGVtZW50SUQiLCJzdG9wUHJvcGFnYXRpb24iLCJoYW5kbGVEcmFnRW5kIiwibGFzdFRhc2tJRCIsImdldExhc3RUYXNrSUQiLCJhZGREcmFnRHJvcExpc3RlbmVycyIsImxpc3ROYW1lVGVtcGxhdGUiLCJ0YXNrTGlzdEJyZWFrTGluZSIsInRhc2tNZW51QnJlYWtMaW5lIiwidGFza0xpc3RIZWFkZXIiLCJzd2l0Y2hMaXN0QnV0dG9ucyIsInByZXZpb3VzU2libGluZyIsIm5leHRTaWJsaW5nIiwiY2xvbmVOb2RlIiwibmV3TGlzdDIiLCJiZWZvcmUiLCJhcHBlbmQiLCJsYXN0Q2hpbGQiLCJjbGlja2VkTGlzdE5hbWUiLCJzd2l0Y2hMaXN0IiwicmVuZGVyVGFza0xpc3RIZWFkZXIiLCJkZXN0aW5hdGlvbkxpc3ROYW1lIiwibGlzdFBvc2l0aW9uIiwidGFza1ByZXZQb3NpdGlvbiIsInBvc2l0aW9uQ291bnRlciIsInQiLCJtb3ZlVGFzayIsInRhc2tzQ29udGFpbmVyIiwidGFza1RlbXBsYXRlIiwiY29tcGxldGVkVGFza1RlbXBsYXRlIiwibmV3VGFzayIsIm9yZGVyIiwiY2hpbGRyZW4iLCJuZXh0RWxlbWVudFNpYmxpbmciLCJkYXRlUGlja2VyIiwidGsiLCJ0b2dnbGVDb21wbGV0ZWRTdGF0dXMiLCJjb21wbGV0ZWRUYXNrIiwiY29tcGxldGVkVGFza0lEIiwidGFza0NvbnRlbnQiLCJ0YXNrRGV0YWlscyIsInRhc2tEYXRlRGl2IiwidGFza09yZGVyIiwidGFza0NvbnRlbnRJbnB1dCIsImZvY3VzIiwic29ydGVkVGFza0FycmF5IiwidGFza0hUTUwiLCJ0YXNrSHRtbElEIiwibmV3TGlzdElucHV0Iiwic2V0Q3VzdG9tVmFsaWRpdHkiLCJyZXBvcnRWYWxpZGl0eSIsImNyZWF0ZUxpc3RCdG4iLCJyZW5hbWVMaXN0QnRuIiwiYWRkTGlzdE1vZGFsIiwicmVuYW1lTGlzdE1vZGFsIiwibW9kYWxDYW5jZWxCdXR0b25zIl0sInNvdXJjZVJvb3QiOiIifQ==