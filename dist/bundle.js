(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([e.id,"body{display:flex;justify-content:end;align-items:center;margin:0;padding:0;width:100vw;height:100vh;font-family:Roboto, RobotoDraft, Helvetica, Arial, sans-serif;font-size:medium}.container{display:flex;flex-direction:column;position:relative;width:300px;height:100vh;box-shadow:-1px 0px 5px #c2c2c2}.list-name-container{display:grid;grid-template-rows:1fr 1fr;height:63px;padding:0 6px 0 16px}.list-name-container #task-header{grid-area:1 / 1 / 2 / 2;align-self:end;color:#80868b;font-size:.6rem;font-weight:500;letter-spacing:1.5px;padding-bottom:7px}.list-name-container #list-name{display:flex;align-items:flex-start;grid-area:2 / 1 / 3 / 2;color:#5f6368;overflow:hidden;white-space:nowrap;font-size:1.05rem;margin-top:-3px}.list-name-container #list-name :hover{cursor:pointer}.add-task{display:flex;align-items:center;height:32px;font-size:.9rem;color:#1a73e8;border-top:solid #f1f3f4 1px;margin-bottom:10px}.add-task :hover{cursor:pointer}.add-task>*{margin-top:7px}.add-task #add-task-text{flex-grow:1;margin-left:3px}.add-task #add-task-icon{fill:#1a73e8}.add-task #more-icon{fill:#5f6368}.tasks-container{display:flex;flex-direction:column;border-bottom:solid #e0e0e0 1px;flex-grow:1;overflow:auto}.tasks-container :hover{background-color:#f6f7f8}.tasks-container :hover .more-icon{visibility:visible}.task{display:flex;flex-direction:column;padding:11px 0 5px 0;overflow:hidden}.task .task-value,.task .details-value{display:block}.task .task-main{display:flex;align-items:flex-start}.task .task-main .circle-container{position:relative;width:46px;height:20px}.task .task-main .circle-container:hover .circle-icon{display:none}.task .task-main .circle-container:hover .check-icon{display:block}.task .task-main .check-icon{display:none}.task .task-main .circle-icon{position:absolute;top:-15px}.task .task-main .more-icon{position:absolute;top:-14px;right:-44px}.task .task-main .task-content{width:172px;margin:0 0 0 6px;color:#202124;word-wrap:break-word;font-size:.84rem;letter-spacing:.02rem;line-height:1.1rem}.task .more-icon{visibility:visible;margin-right:-12px}.task .task-details{margin:2px 0 0 52px;color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem;overflow-wrap:anywhere;width:140px}.task .task-date{display:block;display:flex;align-items:center;justify-content:center;position:relative;min-height:24px;width:140px;font-size:.77rem;color:#1a73e8;border:solid 1px #e0e0e0;border-radius:15px;margin:7px 0 10px 52px;cursor:pointer}.task .drag-icon{display:none}.task-template{display:none}.time-picker{position:absolute;right:10px;bottom:-7px;display:block;visibility:hidden;width:20px}textarea{display:none}.task-clicked{background-color:#f6f7f8;position:relative}.task-clicked .more-icon{display:block}.task-clicked .task-value,.task-clicked .details-value{display:none}.task-clicked textarea{display:block;outline:none;border:0;font-family:inherit;resize:none;background-color:#f6f7f8}.task-clicked .task-details textarea{color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem}.task-clicked .task-details{margin-top:6px}.task-clicked .task-date{margin-top:9px;border:none;color:#202124;font-size:0.73rem;border:solid 1px #e0e0e0}.task-clicked .task-date:hover{background-color:#f0f2f3}.completed-button{display:flex;align-items:center;height:41px;width:300px;cursor:pointer}.completed-button .arrow-right-container{position:relative;height:41px}.completed-button #arrow-right{position:absolute;top:-4px;fill:#707070;transform:scale(0.45)}.completed-button #completed{color:#707070;margin:0 0 1px 48px;font-size:.9rem;letter-spacing:.03rem}.completed-task-template{display:none}.completed-list{display:none;max-height:0;overflow:hidden;transition:max-height 0.2s ease-out;margin-bottom:4px;text-decoration:line-through}.completed-list .task-details{margin-top:0px}.completed-list :hover{background-color:#f6f7f8}.completed-list .trash-icon{right:-55px}.dropdown{display:none;max-height:0;position:absolute;z-index:1;padding:9px 0 9px 0;width:243px;border-radius:4px;font-size:.87rem;font-weight:400;box-shadow:rgba(0,0,0,0.35) 0px 5px 10px;color:#202124;background-color:white;transition:max-height 0.2s ease-out;overflow:hidden;cursor:pointer}.dropdown :hover{background-color:#f6f7f8}.dropdown.dropdown-task-list{top:62px}.dropdown.dropdown-menu{top:105px;right:15px;z-index:1}.dropdown.dropdown-task-menu{width:192px;left:65px}.dropdown.dropdown-task-menu .trash-icon{left:0px;top:-7px}.dropdown-header{font-size:.8rem;font-weight:400;color:#80868b;margin:9px 0 5px 20px}.dropdown-element{padding:9px 20px 9px 20px}.dropdown-element.with-icon{padding:9px 20px 9px 42px}.dropdown-element.with-icon .check-icon{top:-7px;left:1px}.dropdown-element.with-icon.list-text-template{display:none}.modal{position:absolute;display:flex;justify-content:center;align-items:center;z-index:1;left:0;top:0;width:300px;height:100vh;background-color:rgba(0,0,0,0.4)}.modal .modal-content{display:flex;flex-direction:column;justify-content:center;gap:15px;width:200px;height:100px;padding:20px;border-radius:10px;background-color:white}.modal .modal-title{font-size:.9rem}.modal .modal-buttons{display:flex;gap:20px;justify-content:end;padding:5px 10px 0 0}.modal input{height:1.7rem;outline:none;font-size:.9rem;font-family:inherit;background-color:#f6f7f8;border:#eee 1px solid;border-bottom:2px solid #1a73e8;padding-left:10px}.hidden{display:none}.button{font-size:.9rem;cursor:pointer}#add-list-done-btn,#rename-done-btn{color:#1a73e8}.with-icon{display:flex;position:relative}.break-line{width:243px;height:0;border-top:1px solid #c5c5c5;margin:9px 0 9px 0}.task-icon-container{position:relative;height:20px;width:20px}#add-task-icon,.more-icon,.circle-icon,.trash-icon,.plus-icon{transform:scale(0.4)}.check-icon{transform:scale(0.5)}.more-icon,.trash-icon,.check-icon{fill:#5f6368}.check-icon,.trash-icon{position:absolute;top:-15px}.check-icon.hidden{display:none}.plus-icon{position:absolute;top:-7px;left:0px}#arrow-down-icon{fill:#5f6368;transform:scale(0.5);margin:-9px 0 0 -11px}svg,img{cursor:pointer}.task-date.hidden{display:none}.dragover-top-border{border-top:#5f6368 solid 2px}.dragover-bottom-border{border-bottom:#5f6368 solid 2px}\n","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"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",sourcesContent:["$dark-font-color: #202124;\n$light-gray: #e0e0e0;\n$dark-gray: #5f6368;\n$finished-gray: #707070;\n$hover-color: #f6f7f8;\n$blue: #1a73e8;\n\n@mixin date-nofocus-style {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    min-height: 24px;\n    width: 150px;\n    font-size: .77rem;\n    color: $blue;\n    border: solid 1px $light-gray;\n    border-radius: 15px;\n    margin: 7px 0 0 52px;\n    cursor: pointer;\n}\n\nbody {\n    display: flex;\n    justify-content: end;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n    font-size: medium;\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    width: 300px;\n    height: 100vh;\n    box-shadow: -1px 0px 5px rgb(194, 194, 194);\n}\n\n.list-name-container {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    height: 63px;\n    padding: 0 6px 0 16px;\n\n    #task-header {\n        grid-area: 1 / 1 / 2 / 2;\n        align-self: end;\n        color: #80868b;\n        font-size: .6rem;\n        font-weight: 500;\n        letter-spacing: 1.5px;\n        padding-bottom: 7px;\n    }\n\n    #list-name {\n        display: flex;\n        align-items: flex-start;\n        grid-area: 2 / 1 / 3 / 2;\n        color: $dark-gray;\n        overflow: hidden;\n        white-space: nowrap;\n        font-size: 1.05rem;\n        margin-top: -3px;\n\n        :hover {\n            cursor: pointer;\n        }\n    }\n}\n\n.add-task {\n    display: flex;\n    align-items: center;\n    height: 32px;\n    font-size: .9rem;\n    color: $blue;\n    border-top: solid #f1f3f4 1px;\n    margin-bottom: 10px;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    > * {\n        margin-top: 7px;\n    }\n\n    #add-task-text {\n        flex-grow: 1;\n        margin-left: 3px;\n    }\n\n    #add-task-icon {\n        fill: $blue;\n    }\n\n    #more-icon {\n        fill: $dark-gray;\n    }\n}\n\n.tasks-container {\n    display: flex;\n    flex-direction: column;\n    border-bottom: solid #e0e0e0 1px;\n    flex-grow: 1;\n    overflow: auto;\n\n    :hover {\n        background-color: $hover-color;\n\n        .more-icon {\n            visibility: visible;\n        }\n    }\n}\n\n.task {\n    display: flex;\n    flex-direction: column;\n    padding: 11px 0 5px 0;\n    overflow: hidden;\n\n    .task-value,\n    .details-value {\n        display: block;\n    }\n\n    .task-main {\n        display: flex;\n        align-items: flex-start;\n\n        .circle-container {\n            position: relative;\n            width: 46px;\n            height: 20px;\n        }\n\n        .circle-container:hover {\n\n            .circle-icon {\n                display: none;\n            }\n\n            .check-icon {\n                display: block;\n            }\n        }\n\n        .check-icon {\n            display: none;\n        }\n\n        .circle-icon {\n            position: absolute;\n            top: -15px;\n        }\n\n        .more-icon {\n            position: absolute;\n            top: -14px;\n            right: -44px;\n        } \n\n        .task-content {\n            width: 172px;\n            margin: 0 0 0 6px;\n            color: $dark-font-color;\n            word-wrap: break-word;\n            font-size: .84rem;\n            letter-spacing: .02rem;\n            line-height: 1.1rem;\n        }\n    }\n\n    .more-icon {\n        visibility: visible;\n        margin-right: -12px;\n    }\n\n    .task-details {\n        margin: 2px 0 0 52px;\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n        overflow-wrap: anywhere;\n        width: 140px;      \n    }\n\n    .task-date {\n        display: block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        min-height: 24px;\n        width: 140px;\n        font-size: .77rem;\n        color: $blue;\n        border: solid 1px $light-gray;\n        border-radius: 15px;\n        margin: 7px 0 10px 52px;\n        cursor: pointer;\n    }\n\n    .drag-icon {\n        display: none;\n    }\n}\n\n.task-template {\n    display: none;\n}\n\n.time-picker {\n    position: absolute;\n    right: 10px;\n    bottom: -7px;\n    display: block;\n    visibility: hidden;\n    width: 20px;\n}\n\ntextarea {\n    display: none;\n}\n\n.task-clicked {\n    background-color: $hover-color;\n    position: relative;\n\n    .more-icon {\n        display: block;\n    }\n\n    .task-value,\n    .details-value {\n        display: none;\n    }\n\n    textarea {\n        display: block;\n        outline: none;\n        border: 0;\n        font-family: inherit;\n        resize: none;\n        background-color: $hover-color;\n    }\n\n    .task-details textarea {\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n    }\n\n    .task-details {\n        margin-top: 6px;\n    }\n\n    .task-date {\n        margin-top: 9px;\n        border: none;\n        color: $dark-font-color;\n        font-size: 0.73rem;\n        border: solid 1px $light-gray;\n\n        &:hover {\n            background-color: #f0f2f3;\n        }\n    }\n}\n\n.completed-button {\n    display: flex;\n    align-items: center;\n    height: 41px;\n    width: 300px;\n    cursor: pointer;\n\n    .arrow-right-container {\n        position: relative;\n        height: 41px;\n    }\n\n    #arrow-right {\n        position: absolute;\n        top: -4px;\n        fill: $finished-gray;\n        transform: scale(.45);\n    }\n\n    #completed {\n        color: $finished-gray;\n        margin: 0 0 1px 48px;\n        font-size: .9rem;\n        letter-spacing: .03rem;\n    }\n}\n\n.completed-task-template {\n    display: none;\n}\n\n.completed-list {\n    display: none;\n    max-height: 0;\n    overflow: hidden;\n    transition: max-height 0.2s ease-out;\n    margin-bottom: 4px;\n    text-decoration: line-through;\n    \n    .task-details {\n        margin-top: 0px;\n    }\n\n    :hover {\n        background-color: $hover-color;\n    }\n\n    .trash-icon {\n        right: -55px;\n    }\n}\n\n.dropdown {\n    display: none;\n    max-height: 0;\n    position: absolute;\n    z-index: 1;\n    padding: 9px 0 9px 0;\n    width: 243px;\n    border-radius: 4px;\n    font-size: .87rem;\n    font-weight: 400;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 10px;\n    color: $dark-font-color;\n    background-color: white;\n    transition: max-height 0.2s ease-out;\n    overflow: hidden;\n    cursor: pointer;\n\n    :hover {\n        background-color: $hover-color;\n    }\n}\n\n.dropdown.dropdown-task-list {\n    top: 62px;\n}\n\n.dropdown.dropdown-menu {\n    top: 105px;\n    right: 15px;\n    z-index: 1;\n}\n\n.dropdown.dropdown-task-menu {\n    // display: block;\n    // max-height: fit-content;\n    width: 192px;\n    left: 65px;\n\n    .trash-icon {\n        left: 0px;\n        top: -7px;\n    }\n}\n\n.dropdown-header {\n    font-size: .8rem;\n    font-weight: 400;\n    color: #80868b;\n    margin: 9px 0 5px 20px;\n}\n\n.dropdown-element {\n    padding: 9px 20px 9px 20px;\n}\n\n.dropdown-element.with-icon {\n    padding: 9px 20px 9px 42px;\n\n    .check-icon {\n        top: -7px;\n        left: 1px;\n    }\n\n    &.list-text-template {\n        display: none;\n    }\n}\n\n.modal {\n    position: absolute;\n    // display: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 300px;\n    height: 100vh;\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n\n    .modal-content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        gap: 15px;\n        width: 200px;\n        height: 100px;\n        padding: 20px;\n        border-radius: 10px;\n        background-color: white;\n    }\n\n    .modal-title {\n        font-size: .9rem;\n    }\n\n    .modal-buttons {\n        display: flex;\n        gap: 20px;\n        justify-content: end;\n        padding: 5px 10px 0 0;\n    }\n\n    input {\n        height: 1.7rem;\n        outline: none;\n        font-size: .9rem;\n        font-family: inherit;\n        background-color: $hover-color;\n        border: rgb(238, 238, 238) 1px solid;\n        border-bottom: 2px solid $blue;\n        padding-left: 10px;\n    }\n}\n\n.hidden {\n    display: none;\n}\n\n.button {\n    font-size: .9rem;\n    cursor: pointer;\n}\n\n#add-list-done-btn,\n#rename-done-btn {\n    color: $blue;\n}\n\n.with-icon {\n    display: flex;\n    position: relative;\n}\n\n.break-line {\n    width: 243px;\n    height: 0;\n    border-top: 1px solid rgb(197, 197, 197);\n    margin: 9px 0 9px 0;\n}\n\n.task-icon-container {\n    position: relative;\n    height: 20px;\n    width: 20px;\n}\n\n#add-task-icon, \n.more-icon, \n.circle-icon, \n.trash-icon,\n.plus-icon {\n    transform: scale(.4);\n}\n\n.check-icon {\n    transform: scale(.5);\n}\n\n.more-icon,\n.trash-icon,\n.check-icon {\n    fill: $dark-gray;\n}\n\n.check-icon,\n.trash-icon {\n    position: absolute;\n    top: -15px;\n}\n\n.check-icon.hidden {\n    display: none;\n}\n\n.plus-icon {\n    position: absolute;\n    top: -7px;\n    left: 0px;\n}\n\n#arrow-down-icon {\n    fill: $dark-gray;\n    transform: scale(.5);\n    margin: -9px 0 0 -11px;\n}\n\nsvg, img {\n    cursor: pointer;\n}\n\n.task-date.hidden {\n    display: none;\n}\n\n.dragover-top-border {\n    border-top: $dark-gray solid 2px;\n}\n\n.dragover-bottom-border {\n    border-bottom: $dark-gray solid 2px;\n}"],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var l=this[s][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);o&&a[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),n.push(d))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},a=[],s=0;s<e.length;s++){var l=e[s],c=o.base?l[0]+o.base:l[0],d=r[c]||0,A="".concat(c," ").concat(d);r[c]=d+1;var p=t(A),C={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(C);else{var u=i(C,o);o.byIndex=s,n.splice(s,0,{identifier:A,updater:u,references:1})}a.push(A)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var s=t(r[a]);n[s].references--}for(var l=o(e,i),c=0;c<r.length;c++){var d=t(r[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}r=l}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},636:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var i=n[o];if(void 0!==i)return i.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=t.p+"5c00f1557b5580ac8d23.png";Math.pow(10,8);var n=36e5;function o(e,n){if(n.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+n.length+" present")}function i(e){if(null===e||!0===e||!1===e)return NaN;var n=Number(e);return isNaN(n)?n:n<0?Math.ceil(n):Math.floor(n)}var r={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},a=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,s=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,l=/^([+-])(\d{2})(?::?(\d{2}))?$/;function c(e){var n,t={},o=e.split(r.dateTimeDelimiter);if(o.length>2)return t;if(/:/.test(o[0])?n=o[0]:(t.date=o[0],n=o[1],r.timeZoneDelimiter.test(t.date)&&(t.date=e.split(r.timeZoneDelimiter)[0],n=e.substr(t.date.length,e.length))),n){var i=r.timezone.exec(n);i?(t.time=n.replace(i[1],""),t.timezone=i[1]):t.time=n}return t}function d(e,n){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+n)+"})|(\\d{2}|[+-]\\d{"+(2+n)+"})$)"),o=e.match(t);if(!o)return{year:NaN,restDateString:""};var i=o[1]?parseInt(o[1]):null,r=o[2]?parseInt(o[2]):null;return{year:null===r?i:100*r,restDateString:e.slice((o[1]||o[2]).length)}}function A(e,n){if(null===n)return new Date(NaN);var t=e.match(a);if(!t)return new Date(NaN);var o=!!t[4],i=p(t[1]),r=p(t[2])-1,s=p(t[3]),l=p(t[4]),c=p(t[5])-1;if(o)return function(e,n,t){return n>=1&&n<=53&&t>=0&&t<=6}(0,l,c)?function(e,n,t){var o=new Date(0);o.setUTCFullYear(e,0,4);var i=7*(n-1)+t+1-(o.getUTCDay()||7);return o.setUTCDate(o.getUTCDate()+i),o}(n,l,c):new Date(NaN);var d=new Date(0);return function(e,n,t){return n>=0&&n<=11&&t>=1&&t<=(B[n]||(h(e)?29:28))}(n,r,s)&&function(e,n){return n>=1&&n<=(h(e)?366:365)}(n,i)?(d.setUTCFullYear(n,r,Math.max(i,s)),d):new Date(NaN)}function p(e){return e?parseInt(e):1}function C(e){var t=e.match(s);if(!t)return NaN;var o=u(t[1]),i=u(t[2]),r=u(t[3]);return function(e,n,t){return 24===e?0===n&&0===t:t>=0&&t<60&&n>=0&&n<60&&e>=0&&e<25}(o,i,r)?o*n+6e4*i+1e3*r:NaN}function u(e){return e&&parseFloat(e.replace(",","."))||0}function m(e){if("Z"===e)return 0;var t=e.match(l);if(!t)return 0;var o="+"===t[1]?-1:1,i=parseInt(t[2]),r=t[3]&&parseInt(t[3])||0;return function(e,n){return n>=0&&n<=59}(0,r)?o*(i*n+6e4*r):NaN}var B=[31,null,31,30,31,30,31,31,30,31,30,31];function h(e){return e%400==0||e%4==0&&e%100!=0}const f=e=>({name:e,tasks:{}}),g=(e,n,t,o,i,r)=>({id:e,name:n,details:t,dateTime:o,position:i,completed:r}),x=[];let k,b=f("Weekend"),v=g(1,"Dance","Samba","2022-11-23T17:33",4,!1),y=g(2,"Sleep","Deep","2022-11-26T11:11",2,!0),w=g(3,"Eat","Sushi","2022-12-26T11:11",3,!1);x.push(b),b.tasks.dance=v,b.tasks.sleep=y,b.tasks.eat=w;let L=f("Week"),S=g(1,"Work","On a highway","2023-11-23T17:33",1,!1),Y=g(2,"Hurry","Catch a bus","2023-09-26T10:11",2,!1),T=g(3,"Cry","Your eyes out","2022-12-26T11:51",3,!0);x.push(L),L.tasks.work=S,L.tasks.hurry=Y,L.tasks.cry=T,k||(k=x[0]);const N=document.querySelector("#add-list-done-btn"),q=document.querySelector("#rename-done-btn"),D=document.querySelector("#new-list-input"),E=document.querySelector("#rename-list-input");let Q,z;N.addEventListener("click",(()=>{if(D.value){let e=f(D.value);D.value="",x.push(e),k=e,R(),X(),te.forEach((e=>e.classList.add("hidden")))}})),q.addEventListener("click",(()=>{E.value&&(k.name=E.value,E.value="",R(),X(),te.forEach((e=>e.classList.add("hidden"))))})),document.querySelector("#delete-list-button").onclick=()=>{let e=x.indexOf(k);x.splice(e,1),k=x[0],R(),X()},[document.querySelector("#add-task-icon"),document.querySelector("#add-task-text")].forEach((e=>e.addEventListener("click",(()=>{!function(){let e=P.cloneNode(!0);e.classList.remove("task-template"),F.prepend(e),j()}(),function(e){for(const e in k.tasks)e&&"object"==typeof k.tasks[e]&&b.tasks[e].position++}()})))),document.querySelectorAll(".circle-icon").forEach((n=>{n.src=e}));const G=(()=>{let e,n;function t(){const t=document.querySelectorAll(".time-picker");document.querySelectorAll(".task-date").forEach((o=>{o.addEventListener("click",(()=>{t.forEach((t=>{o.contains(t)&&(t.showPicker(),e=t,n=e.previousElementSibling)}))})),o.addEventListener("change",(()=>r(e.value,n))),o.addEventListener("change",a)}))}function r(e,n){let t,r=function(e,n){var t;o(1,arguments);var r=i(null!==(t=null==n?void 0:n.additionalDigits)&&void 0!==t?t:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof e&&"[object String]"!==Object.prototype.toString.call(e))return new Date(NaN);var a,s=c(e);if(s.date){var l=d(s.date,r);a=A(l.restDateString,l.year)}if(!a||isNaN(a.getTime()))return new Date(NaN);var p,u=a.getTime(),B=0;if(s.time&&(B=C(s.time),isNaN(B)))return new Date(NaN);if(!s.timezone){var h=new Date(u+B),f=new Date(0);return f.setFullYear(h.getUTCFullYear(),h.getUTCMonth(),h.getUTCDate()),f.setHours(h.getUTCHours(),h.getUTCMinutes(),h.getUTCSeconds(),h.getUTCMilliseconds()),f}return p=m(s.timezone),isNaN(p)?new Date(NaN):new Date(u+B+p)}(e).toString().split(" "),a=new Date(e).toLocaleTimeString("en",{timeStyle:"short",hour12:!0}),s=`${r[0]}, ${r[1]} ${r[2]}, ${a}`,l=n.parentNode.parentNode.style.order;for(const e in k.tasks)k.tasks[e].position==l&&(t=k.tasks[e]);t.dateTime=e,s.includes("Invalid")?n.innerHTML="Date / time":n.innerHTML=s}function a(){document.querySelectorAll(".date-value").forEach((e=>{"Date / time"!==e.innerHTML||e.parentNode.parentNode.classList.contains("task-clicked")?e.parentNode.classList.remove("hidden"):e.parentNode.classList.add("hidden")}))}return t(),a(),{addDateListeners:t,toggleDate:a,convertDate:r}})(),M=(()=>{function e(){const e=document.getElementsByTagName("textarea");for(let t=0;t<e.length;t++){let o;o=0==e[t].scrollHeight?"auto":e[t].scrollHeight,e[t].setAttribute("style","height:"+o+"px;overflow-y:hidden;"),e[t].addEventListener("input",n),e[t].addEventListener("input",(()=>{let n,o,i;e[t].parentNode.classList.contains("task-content")?(n=e[t].parentNode.parentNode.parentNode.style.order,o="task-content"):e[t].parentNode.classList.contains("task-details")&&(n=e[t].parentNode.parentNode.style.order,o="task-details");for(const e in k.tasks)k.tasks[e].position==n&&(i=k.tasks[e]);"task-content"===o?i.name=e[t].value:"task-details"===o&&(i.details=e[t].value),e[t].innerHTML=e[t].value,e[t].previousElementSibling.innerHTML=e[t].value}))}}function n(){this.style.height=0,this.style.height=this.scrollHeight+"px"}return e(),{addTextAreasListeners:e}})(),$=(()=>{const e=document.querySelector("#list-name"),n=document.querySelectorAll(".dropdown"),t=document.querySelector(".dropdown-task-menu"),o=document.querySelector(".completed-button"),i=document.querySelector(".completed-list"),r=document.querySelector("#arrow-right"),a=document.querySelector("#main-menu-btn");let s;function l(){document.querySelectorAll(".task-menu-button").forEach((e=>e.addEventListener("click",(n=>{s=e,Q=e.parentNode.parentNode.parentNode,z=Q.dataset.id,t.style.top=s.getBoundingClientRect().y+"px",d(t,n)}))))}function c(e){for(let t=0;t<n.length;t++)if(n[t].classList.contains(e))return n[t]}function d(e,n){n&&e.classList.contains("active")||(e.classList.contains("active")?(e.classList.remove("active"),e.style.maxHeight="0",e.style.display="none",e.classList.contains("completed-list")&&(r.style.transform="scale(.45)")):(e.style.display="block",e.style.maxHeight=e.scrollHeight+"px",e.classList.add("active"),e.classList.contains("completed-list")&&(r.style.transform="scale(.45) rotate(90deg)")))}function A(){const e=document.querySelectorAll(".task");document.addEventListener("click",(n=>{e.forEach((e=>{!e.contains(n.target)||e.classList.contains("completed")||n.target.classList.contains("more-icon")?e.classList.remove("task-clicked"):e.classList.add("task-clicked"),G.toggleDate()}))}))}return e.onclick=()=>d(c("dropdown-task-list")),a.onclick=()=>d(c("dropdown-menu")),o.onclick=()=>d(i),l(),document.onclick=t=>{n.forEach((n=>{n.classList.contains("active")&&(!e.contains(t.target)&&n.classList.contains("dropdown-task-list")||!a.contains(t.target)&&n.classList.contains("dropdown-menu")||s&&!s.contains(t.target)&&n.classList.contains("dropdown-task-menu"))&&d(n)}))},A(),{addTaskMenuListeners:l,addResizeTaskListener:A,taskMenu:t}})(),W=(()=>{let e;function n(){const e=document.querySelectorAll(".task");document.addEventListener("DOMContentLoaded",(n=>{e.forEach((e=>{e.addEventListener("dragstart",t),e.addEventListener("dragover",o),e.addEventListener("dragleave",i),e.addEventListener("dragend",r),e.addEventListener("drop",a)}))}))}function t(n){this.style.opacity=".5",e=this}function o(n){return n.preventDefault(),n.target.classList.contains("task")&&this!==e&&(this.classList.add("dragover-top-border"),e.parentNode.lastChild.classList.remove("dragover-bottom-border")),!1}function i(n){this.classList.remove("dragover-top-border"),e.parentNode.lastChild.classList.add("dragover-bottom-border")}function r(n){let t=this.parentNode.lastChild;this.style.opacity="1",e!==t&&t.classList.contains("dragover-bottom-border")&&t.after(e),document.querySelectorAll(".task").forEach((e=>e.classList.remove("dragover-top-border","dragover-bottom-border")))}function a(n){let t=this.parentNode.lastChild;return n.stopPropagation(),e===this||t.classList.contains("dragover-bottom-border")||this.before(e),!1}return n(),{addDragDropListeners:n}})();function j(){G.addDateListeners(),M.addTextAreasListeners(),$.addTaskMenuListeners(),$.addResizeTaskListener(),W.addDragDropListeners()}const U=document.querySelector(".list-text-template"),Z=document.querySelector("#prepend-with-list"),H=document.querySelector("#append-list"),I=document.querySelector("#list-name-text");let O;function R(){for(x[0]||(x.push({name:"Quests",tasks:{}}),k=x[0]);Z.previousSibling;)Z.previousSibling.remove();for(;H.nextSibling;)H.nextSibling.remove();x.forEach((e=>{let n=U.cloneNode(!0),t=U.cloneNode(!0);n.classList.remove("list-text-template"),n.classList.add("switch-list"),t.classList.remove("list-text-template"),Z.before(n),$.taskMenu.append(t),n.lastChild.innerHTML=e.name,t.lastChild.innerHTML=e.name,e===k&&n.firstChild.classList.remove("hidden"),e===k&&t.firstChild.classList.remove("hidden")})),O=document.querySelectorAll(".switch-list"),O.forEach((e=>{e.addEventListener("click",(function(){!function(e){let n=e.lastChild.innerHTML;k.tasks.name!==n&&x.forEach((e=>{e.name===n&&(function(e){k=e}(e),R(),X())}))}(e)}))})),function(e){I.innerHTML=e.name}(k)}R();const F=document.querySelector(".tasks-container"),P=document.querySelector(".task-template"),V=document.querySelector(".completed-list"),K=document.querySelector(".completed-task-template");function X(){F.innerHTML="",V.innerHTML="";for(const e in k.tasks){if(!e)return;if(e&&"object"==typeof k.tasks[e]&&!1===k.tasks[e].completed){let n=P.cloneNode(!0);if(n.classList.remove("task-template"),F.append(n),n.style.order=k.tasks[e].position,n.dataset.id=k.tasks[e].id,n.children[0].children[1].children[0].innerHTML=k.tasks[e].name,n.children[0].children[1].children[0].nextElementSibling.value=k.tasks[e].name,n.children[1].children[0].innerHTML=k.tasks[e].details,n.children[1].children[0].nextElementSibling.value=k.tasks[e].details,k.tasks[e].dateTime){let t=n.children[2].children[1],o=k.tasks[e].dateTime,i=t.previousElementSibling;t.setAttribute("value",o),G.convertDate(o,i),G.toggleDate()}}else if(e&&"object"==typeof k.tasks[e]&&!0===k.tasks[e].completed){let n=K.cloneNode(!0);n.classList.remove("completed-task-template"),V.append(n),n.dataset.id=k.tasks[e].id,n.children[0].children[1].children[0].innerHTML=k.tasks[e].name,n.children[1].children[0].innerHTML=k.tasks[e].details}}j()}X(),document.querySelectorAll(".delete-task").forEach((e=>e.addEventListener("click",(n=>{e.parentNode.classList.contains("dropdown")&&(Q.remove(),function(e){for(let n in k.tasks)k.tasks[n].id==e&&delete k.tasks[n];!function(){let e=0;for(let n in k.tasks)k.tasks[n].id=e,e++}()}(z),X())}))));const J=document.querySelector("#create-list-btn"),_=document.querySelector("#rename-list-btn"),ee=document.querySelector("#add-list-modal"),ne=document.querySelector("#rename-list-modal"),te=document.querySelectorAll(".modal");document.querySelectorAll(".cancel-btn").forEach((e=>e.addEventListener("click",(()=>{te.forEach((e=>e.classList.add("hidden")))})))),J.onclick=()=>ee.classList.remove("hidden"),_.onclick=()=>ne.classList.remove("hidden");var oe=t(379),ie=t.n(oe),re=t(795),ae=t.n(re),se=t(569),le=t.n(se),ce=t(636),de=t.n(ce),Ae=t(216),pe=t.n(Ae),Ce=t(589),ue=t.n(Ce),me=t(192),Be={};Be.styleTagTransform=ue(),Be.setAttributes=de(),Be.insert=le().bind(null,"head"),Be.domAPI=ae(),Be.insertStyleElement=pe(),ie()(me.Z,Be),me.Z&&me.Z.locals&&me.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,