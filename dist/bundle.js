(()=>{"use strict";var n={192:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,"body{display:flex;justify-content:end;align-items:center;margin:0;padding:0;width:100vw;height:100vh;font-family:Roboto, RobotoDraft, Helvetica, Arial, sans-serif;font-size:medium}.container{display:flex;flex-direction:column;width:300px;height:100vh;box-shadow:-1px 0px 5px #c2c2c2}.list-name-container{display:grid;grid-template-rows:1fr 1fr;height:63px;padding:0 6px 0 16px}.list-name-container #task-header{grid-area:1 / 1 / 2 / 2;align-self:end;color:#80868b;font-size:.6rem;font-weight:500;letter-spacing:1.5px;padding-bottom:7px}.list-name-container #list-name{display:flex;align-items:flex-start;grid-area:2 / 1 / 3 / 2;color:#5f6368;overflow:hidden;white-space:nowrap;font-size:1.05rem;margin-top:-3px}.list-name-container #list-name :hover{cursor:pointer}.add-task{display:flex;align-items:center;height:32px;font-size:.9rem;color:#1a73e8;border-top:solid #f1f3f4 1px;margin-bottom:10px}.add-task :hover{cursor:pointer}.add-task>*{margin-top:7px}.add-task #add-task-text{flex-grow:1;margin-left:3px}.add-task #add-task-icon{fill:#1a73e8}.add-task #more-icon{fill:#5f6368}.tasks-container{border-bottom:solid #e0e0e0 1px;flex-grow:1;overflow:auto}.tasks-container :hover{background-color:#f6f7f8}.tasks-container :hover .more-icon{display:block}.tasks-container :hover .star-icon{display:block}.task{display:flex;flex-direction:column;padding:5px 0 5px 0}.task .task-value,.task .details-value{display:block}.task .task-main{display:flex;align-items:flex-start}.task .task-main .circle-container{position:relative;width:46px;height:20px}.task .task-main .circle-icon{position:absolute;top:-15px}.task .task-main .task-icon-container{position:relative;height:20px;width:20px}.task .task-main .more-icon{position:absolute;top:-14px;right:-10px}.task .task-main .star-icon{position:absolute;top:-15px;left:8px}.task .task-main .task-content{width:172px;margin:0 0 0 6px;color:#202124;word-wrap:break-word;font-size:.84rem;letter-spacing:.02rem;line-height:1.1rem}.task .more-icon{display:none;margin-right:-12px}.task .star-icon{display:none;margin-right:2px}.task .task-details{margin:7px 0 0 52px;color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem;overflow-wrap:anywhere;width:140px}.task .task-date{display:block;display:flex;align-items:center;justify-content:center;position:relative;min-height:24px;width:140px;font-size:.77rem;color:#1a73e8;border:solid 1px #e0e0e0;border-radius:15px;margin:7px 0 0 52px;cursor:pointer}.task .drag-icon{display:none}.time-picker{position:absolute;right:10px;bottom:-7px;display:block;visibility:hidden;width:20px}textarea{display:none}.task-clicked{background-color:#f6f7f8;position:relative}.task-clicked .more-icon{display:block}.task-clicked .star-icon{display:block}.task-clicked .task-value,.task-clicked .details-value{display:none}.task-clicked textarea{display:block;outline:none;border:0;font-family:inherit;resize:none;background-color:#f6f7f8}.task-clicked .task-details textarea{color:#5f6368;font-size:.73rem;font-weight:300;letter-spacing:.02rem}.task-clicked .task-details{margin-top:6px}.task-clicked .task-date{margin-top:9px;border:none;color:#202124;font-size:0.73rem;border:solid 1px #e0e0e0}.task-clicked .task-date:hover{background-color:#f0f2f3}.task-clicked .drag-icon{position:absolute;top:22px;left:-14px;display:block;fill:#c7c7c7;transform:scale(0.4);cursor:grab}.task-clicked .drag-icon:active{cursor:grabbing}.finished-container{display:flex;align-items:center;height:41px;width:300px;cursor:pointer}.finished-container .arrow-right-container{position:relative;height:41px}.finished-container #arrow-right{position:absolute;top:-4px;fill:#707070;transform:scale(0.45)}.finished-container .completed{color:#707070;margin:0 0 1px 48px;font-size:.9rem;letter-spacing:.03rem}#add-task-icon,.more-icon,.circle-icon,.star-icon{transform:scale(0.4)}.more-icon,.star-icon{fill:#5f6368}.circle-icon{align-self:start}#arrow-down-icon{fill:#5f6368;transform:scale(0.5);margin:-9px 0 0 -11px}svg,img{cursor:pointer}.task-date.hidden{display:none}.dragover-top{border-top:#5f6368 solid 2px}.dragover-bottom{border-bottom:#5f6368 solid 2px}\n","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"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",sourcesContent:["$dark-font-color: #202124;\n$light-gray: #e0e0e0;\n$dark-gray: #5f6368;\n$finished-gray: #707070;\n$hover-color: #f6f7f8;\n$blue: #1a73e8;\n\n@mixin date-nofocus-style {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    min-height: 24px;\n    width: 150px;\n    font-size: .77rem;\n    color: $blue;\n    border: solid 1px $light-gray;\n    border-radius: 15px;\n    margin: 7px 0 0 52px;\n    cursor: pointer;\n}\n\nbody {\n    display: flex;\n    justify-content: end;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    width: 100vw;\n    height: 100vh;\n    font-family: Roboto, RobotoDraft, Helvetica, Arial, sans-serif;\n    font-size: medium;\n}\n\n.container {\n    display: flex;\n    flex-direction: column;\n    width: 300px;\n    height: 100vh;\n    box-shadow: -1px 0px 5px rgb(194, 194, 194);\n}\n\n.list-name-container {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    height: 63px;\n    padding: 0 6px 0 16px;\n\n    #task-header {\n        grid-area: 1 / 1 / 2 / 2;\n        align-self: end;\n        color: #80868b;\n        font-size: .6rem;\n        font-weight: 500;\n        letter-spacing: 1.5px;\n        padding-bottom: 7px;\n    }\n\n    #list-name {\n        display: flex;\n        align-items: flex-start;\n        grid-area: 2 / 1 / 3 / 2;\n        color: $dark-gray;\n        overflow: hidden;\n        white-space: nowrap;\n        font-size: 1.05rem;\n        margin-top: -3px;\n\n        :hover {\n            cursor: pointer;\n        }\n    }\n}\n\n.add-task {\n    display: flex;\n    align-items: center;\n    height: 32px;\n    font-size: .9rem;\n    color: $blue;\n    border-top: solid #f1f3f4 1px;\n    margin-bottom: 10px;\n\n    :hover {\n        cursor: pointer;\n    }\n\n    > * {\n        margin-top: 7px;\n    }\n\n    #add-task-text {\n        flex-grow: 1;\n        margin-left: 3px;\n    }\n\n    #add-task-icon {\n        fill: $blue;\n    }\n\n    #more-icon {\n        fill: $dark-gray;\n    }\n}\n\n.tasks-container {\n    border-bottom: solid #e0e0e0 1px;\n    flex-grow: 1;\n    overflow: auto;\n\n    :hover {\n        background-color: $hover-color;\n\n        .more-icon {\n            display: block;\n        }\n        .star-icon {\n            display: block;\n        }\n    }\n}\n\n.task {\n    display: flex;\n    flex-direction: column;\n    padding: 5px 0 5px 0;\n\n    .task-value,\n    .details-value {\n        display: block;\n    }\n\n    .task-main {\n        display: flex;\n        align-items: flex-start;\n\n        .circle-container {\n            position: relative;\n            width: 46px;\n            height: 20px;\n        }\n\n        .circle-icon {\n            position: absolute;\n            top: -15px;\n        }\n\n        .task-icon-container {\n            position: relative;\n            height: 20px;\n            width: 20px;\n        }\n\n        .more-icon {\n            position: absolute;\n            top: -14px;\n            right: -10px;\n        } \n\n        .star-icon {\n            position: absolute;\n            top: -15px;\n            left: 8px;\n\n        } \n\n        .task-content {\n            width: 172px;\n            margin: 0 0 0 6px;\n            color: $dark-font-color;\n            word-wrap: break-word;\n            font-size: .84rem;\n            letter-spacing: .02rem;\n            line-height: 1.1rem;\n        }\n    }\n\n    .more-icon {\n        display: none;\n        margin-right: -12px;\n    }\n\n    .star-icon {\n        display: none;\n        margin-right: 2px;\n    }\n\n    .task-details {\n        margin: 7px 0 0 52px;\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n        overflow-wrap: anywhere;\n        width: 140px;      \n    }\n\n    .task-date {\n        display: block;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        min-height: 24px;\n        width: 140px;\n        font-size: .77rem;\n        color: $blue;\n        border: solid 1px $light-gray;\n        border-radius: 15px;\n        margin: 7px 0 0 52px;\n        cursor: pointer;\n    }\n\n    .drag-icon {\n        display: none;\n    }\n}\n\n.time-picker {\n    position: absolute;\n    right: 10px;\n    bottom: -7px;\n    display: block;\n    visibility: hidden;\n    width: 20px;\n}\n\ntextarea {\n    display: none;\n}\n\n.task-clicked {\n    background-color: $hover-color;\n    position: relative;\n\n    .more-icon {\n        display: block;\n    }\n\n    .star-icon {\n        display: block;\n    }\n\n    .task-value,\n    .details-value {\n        display: none;\n    }\n\n    textarea {\n        display: block;\n        outline: none;\n        border: 0;\n        font-family: inherit;\n        resize: none;\n        background-color: $hover-color;\n    }\n\n    .task-details textarea {\n        color: $dark-gray;\n        font-size: .73rem;\n        font-weight: 300;\n        letter-spacing: .02rem;\n    }\n\n    .task-details {\n        margin-top: 6px;\n    }\n\n    .task-date {\n        margin-top: 9px;\n        border: none;\n        color: $dark-font-color;\n        font-size: 0.73rem;\n        border: solid 1px $light-gray;\n\n        &:hover {\n            background-color: #f0f2f3;\n        }\n    }\n\n    .drag-icon {\n        position: absolute;\n        top: 22px;\n        left: -14px;\n        display: block;\n        fill: #c7c7c7;\n        transform: scale(.4);\n        cursor: grab;\n\n        &:active {\n            cursor: grabbing;\n        }\n    }\n}\n\n.finished-container {\n    display: flex;\n    align-items: center;\n    height: 41px;\n    width: 300px;\n    cursor: pointer;\n\n    .arrow-right-container {\n        position: relative;\n        height: 41px;\n    }\n\n    #arrow-right {\n        position: absolute;\n        top: -4px;\n        fill: $finished-gray;\n        transform: scale(.45);\n    }\n\n    .completed {\n        color: $finished-gray;\n        margin: 0 0 1px 48px;\n        font-size: .9rem;\n        letter-spacing: .03rem;\n    }\n}\n\n#add-task-icon, \n.more-icon, \n.circle-icon, \n.star-icon {\n    transform: scale(.4);\n}\n\n.more-icon,  \n.star-icon {\n    fill: $dark-gray;\n}\n\n.circle-icon {\n    align-self: start;\n}\n\n#arrow-down-icon {\n    fill: $dark-gray;\n    transform: scale(.5);\n    margin: -9px 0 0 -11px;\n}\n\nsvg, img {\n    cursor: pointer;\n}\n\n.task-date.hidden {\n    display: none;\n}\n\n.dragover-top {\n    border-top: $dark-gray solid 2px;\n}\n\n.dragover-bottom {\n    border-bottom: $dark-gray solid 2px;\n}"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&o[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),i&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=i):c[4]="".concat(i)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],s=0;s<n.length;s++){var A=n[s],l=r.base?A[0]+r.base:A[0],c=a[l]||0,d="".concat(l," ").concat(c);a[l]=c+1;var p=t(d),C={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var B=i(C,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:B,references:1})}o.push(d)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var s=t(a[o]);e[s].references--}for(var A=r(n,i),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),o=t.n(a),s=t(565),A=t.n(s),l=t(216),c=t.n(l),d=t(589),p=t.n(d),C=t(192),B={};B.styleTagTransform=p(),B.setAttributes=A(),B.insert=o().bind(null,"head"),B.domAPI=i(),B.insertStyleElement=c(),e()(C.Z,B),C.Z&&C.Z.locals&&C.Z.locals;const f=t.p+"5c00f1557b5580ac8d23.png";Math.pow(10,8);var u=36e5;function g(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function m(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}var h={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},x=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,v=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,k=/^([+-])(\d{2})(?::?(\d{2}))?$/;function b(n){var e,t={},r=n.split(h.dateTimeDelimiter);if(r.length>2)return t;if(/:/.test(r[0])?e=r[0]:(t.date=r[0],e=r[1],h.timeZoneDelimiter.test(t.date)&&(t.date=n.split(h.timeZoneDelimiter)[0],e=n.substr(t.date.length,n.length))),e){var i=h.timezone.exec(e);i?(t.time=e.replace(i[1],""),t.timezone=i[1]):t.time=e}return t}function y(n,e){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),r=n.match(t);if(!r)return{year:NaN,restDateString:""};var i=r[1]?parseInt(r[1]):null,a=r[2]?parseInt(r[2]):null;return{year:null===a?i:100*a,restDateString:n.slice((r[1]||r[2]).length)}}function w(n,e){if(null===e)return new Date(NaN);var t=n.match(x);if(!t)return new Date(NaN);var r=!!t[4],i=Y(t[1]),a=Y(t[2])-1,o=Y(t[3]),s=Y(t[4]),A=Y(t[5])-1;if(r)return function(n,e,t){return e>=1&&e<=53&&t>=0&&t<=6}(0,s,A)?function(n,e,t){var r=new Date(0);r.setUTCFullYear(n,0,4);var i=7*(e-1)+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+i),r}(e,s,A):new Date(NaN);var l=new Date(0);return function(n,e,t){return e>=0&&e<=11&&t>=1&&t<=(L[e]||($(n)?29:28))}(e,a,o)&&function(n,e){return e>=1&&e<=($(n)?366:365)}(e,i)?(l.setUTCFullYear(e,a,Math.max(i,o)),l):new Date(NaN)}function Y(n){return n?parseInt(n):1}function D(n){var e=n.match(v);if(!e)return NaN;var t=N(e[1]),r=N(e[2]),i=N(e[3]);return function(n,e,t){return 24===n?0===e&&0===t:t>=0&&t<60&&e>=0&&e<60&&n>=0&&n<25}(t,r,i)?t*u+6e4*r+1e3*i:NaN}function N(n){return n&&parseFloat(n.replace(",","."))||0}function T(n){if("Z"===n)return 0;var e=n.match(k);if(!e)return 0;var t="+"===e[1]?-1:1,r=parseInt(e[2]),i=e[3]&&parseInt(e[3])||0;return function(n,e){return e>=0&&e<=59}(0,i)?t*(r*u+6e4*i):NaN}var L=[31,null,31,30,31,30,31,31,30,31,30,31];function $(n){return n%400==0||n%4==0&&n%100!=0}const E=document.querySelectorAll(".task"),S=document.querySelectorAll(".time-picker"),z=document.querySelectorAll(".task-date"),Q=document.querySelectorAll(".date-value");let U,W;function M(){let n=function(n,e){var t;g(1,arguments);var r=m(null!==(t=null==e?void 0:e.additionalDigits)&&void 0!==t?t:2);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof n&&"[object String]"!==Object.prototype.toString.call(n))return new Date(NaN);var i,a=b(n);if(a.date){var o=y(a.date,r);i=w(o.restDateString,o.year)}if(!i||isNaN(i.getTime()))return new Date(NaN);var s,A=i.getTime(),l=0;if(a.time&&(l=D(a.time),isNaN(l)))return new Date(NaN);if(!a.timezone){var c=new Date(A+l),d=new Date(0);return d.setFullYear(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()),d.setHours(c.getUTCHours(),c.getUTCMinutes(),c.getUTCSeconds(),c.getUTCMilliseconds()),d}return s=T(a.timezone),isNaN(s)?new Date(NaN):new Date(A+l+s)}(U.value).toString().split(" ");const e=new Date(U.value).toLocaleTimeString("en",{timeStyle:"short",hour12:!0});let t=`${n[0]}, ${n[1]} ${n[2]}, ${e}`;t.includes("Invalid")?W.innerHTML="Date / time":W.innerHTML=t}function Z(){Q.forEach((n=>{"Date / time"!==n.innerHTML||n.parentNode.parentNode.classList.contains("task-clicked")?n.parentNode.classList.remove("hidden"):n.parentNode.classList.add("hidden")}))}document.querySelectorAll(".circle-icon").forEach((n=>{n.src=f})),z.forEach((n=>{n.addEventListener("click",(()=>{S.forEach((e=>{n.contains(e)&&(e.showPicker(),U=e,W=U.previousElementSibling)}))})),n.addEventListener("change",M),n.addEventListener("change",Z)})),Z();const j=document.getElementsByTagName("textarea");for(let n=0;n<j.length;n++){let e;e=0==j[n].scrollHeight?"auto":j[n].scrollHeight,j[n].setAttribute("style","height:"+e+"px;overflow-y:hidden;"),j[n].addEventListener("input",q,!1),j[n].addEventListener("input",(()=>{j[n].innerHTML=j[n].value,j[n].previousElementSibling.innerHTML=j[n].value}))}function q(){this.style.height=0,this.style.height=this.scrollHeight+"px"}let G,I;document.addEventListener("click",(n=>{E.forEach((e=>{e.contains(n.target)?e.classList.add("task-clicked"):e.classList.remove("task-clicked"),Z()}))})),document.addEventListener("DOMContentLoaded",(n=>{function e(n){this.style.opacity=".5",I=this}function t(n){let e=this.parentNode.lastChild;this.style.opacity="1",I!==e&&e.classList.contains("dragover-bottom")&&e.after(I),E.forEach((n=>n.classList.remove("dragover-top","dragover-bottom")))}function r(n){return n.preventDefault(),G=this,n.target.classList.contains("task")&&this!==I&&(this.classList.add("dragover-top"),I.parentNode.lastChild.classList.remove("dragover-bottom")),!1}function i(n){this.classList.remove("dragover-top"),I.parentNode.lastChild.classList.add("dragover-bottom")}function a(n){return n.stopPropagation(),I===this||this.parentNode.lastChild.classList.contains("dragover-bottom")||this.before(I),!1}E.forEach((n=>{n.addEventListener("dragstart",e),n.addEventListener("dragover",r),n.addEventListener("dragleave",i),n.addEventListener("dragend",t),n.addEventListener("drop",a)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,